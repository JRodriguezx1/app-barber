{"version":3,"sources":["dashboard.js","administracion.js","citas.js","clientes.js","configuracion.js","creardcto.js","dash_cliente.js","dash_cliente_assign.js","detallepago.js","empleados.js","facturacion.js","fechadesc.js","fidelizacion.js","finalizcita.js","graficas.js","malla.js","paginaini.js","promos.js","servicios.js","slider.js"],"names":["scrolnav","document","querySelectorAll","forEach","enlace","classList","contains","querySelector","firstElementChild","nextElementSibling","textContent","scrollIntoView","behavior","negocios","label","barra","bar","negocio","value","add","toFixed","style","width","btns_nav_empleados","Element","addEventListener","e","target","btn","remove","pagina","id","dia","this","checked","i","parentElement","children","disabled","entrada","puthoras","nextselect","firstChild","removeChild","subhora","split","hora","parseInt","option","createElement","appendChild","filtros","selectfiltro","selectfecha","crearcita","crearcitanoreg","programar","idprofesional","options","selectedIndex","Swal","fire","customClass","title","html","showCancelButton","showConfirmButton","window","location","usuarios","servicios","emplserv","fechadesc","malla","citas","onlyfechadesc","onlymalla","onlycitas","gettimeservice","horasdisponibles","horacitas","formulariocliente","titulo","submit","action","usuario","confirmButton","cancelButton","cargaservicios","selectservicios","element","nombre","cargarprofesionales","professionals","empleados","filter","idservicio","borrarhtml","selected","idempleado","dataset","inputfecha","fechaactual","Date","year","getFullYear","mes","getMonth","getDate","deshabilitarfecha","min","deshabilitarfechaanterior","eventofecha","evento","validarfechaydia","getUTCDay","fecha","empleado_id","cita","fecha_fin","estado","console","log","some","r2","id_dia","length","horario1","horario2","inicioturno","inidescanso","findescanso","finturno","map","substring","hora_fin","calcularhorarios","divhoras","divhora","parrafohora","onclick","seleccionarhora","imprimirhorashtml","gethoras","horaInicio","horaFin","horarioActual","horarioFinal","setTime","getTime","Math","floor","getHours","toString","padStart","minutos","getMinutes","includes","deshabilthoraprevia","elemento","url","respuesta","fetch","json","error","preventDefault","inputusuario","apellido","cargarusuarios","valstatus","previousElementSibling","tr","idcita","nameservice","namepro","fechacita","horacita","namecliente","selectservice","inputdate","cargarcita","crearcliente","editar","hab_desh","objform","movil","email","password","countchars","num","cadena","slice","mensaje","confirmButtonText","cancelButtonText","then","result","isConfirmed","arraymediospago","inputmediospago","btnbtnmediopago","resultado","input","r","find","mediopago","marcarmediospago","datos","FormData","append","method","body","imprimirmensaje","formhabilitarempleado","selectempleado","restriccion","radioadmin","formsetearpass","selectsetearpass","color1","color2","selecttimeserv","marcartiemposervicio","msjtext","tipo","ubicacion","insertBefore","setTimeout","tiemposervicio","categoria","product_serv","tipodcto","dcto1","dcto2","dcto2Valor","fechaini","valorservicio","imprimirvalor","valoringresado","round","setDate","servicio","precio","max","fechafin","fechaposterior","profesionales","selectdate","eliminarcitas","crearselectprofesionals","idservice","urlparams","URLSearchParams","search","get","valordcto","serviciotext","validarofertaselected","eliminarcita","text","cancelarcita","telcliente","select_date","obtenercitas","async","reservarcita","id_empserv","id_servicio","hoy","toLocaleTimeString","hour12","enviarcita","reload","setInterval","recibido","devolucion","fecha_pago","hora_pago","dcto","valorpromo","valor_servicio","total","anularpagofact","actualizarfilacita","formulariofactura","divcampostags1","divcampostags2","tagselect1","tagselect2","tagsinputhidden1","tagsinputhidden2","selectemployee","eliminaremployee","empleadosapi","totalservicios","tags1","tags2","objservicio","mostrarservicio","nombreservicio","tagselect","divtag","span","icon","cargarselects","tag","actualizarinputhidden","borrarservicio","skill","empleado","href","departamento","ciudad","direccion","cargarempleado","calculo","valorservice","cargarvalorservicio","cargarservicios","obtenermediospago","mediospago","selectmediospago","cargarmediospago","viewdates","fechas","eliminarfecha","dates","limpiarfechas","div","parrafo","icondelete","imprimirfechas","eliminar","sendmsj","obj","nombreproducto","valorfinal","eventos","footer","finalizarcitas","valueservice","fincita","promodcto","valorpromodcto","promodctovalor","selectdcto","aplicarpromo","totalpagar","cargardatoscliente","inputtotalpagar","cierretotal","totalcitas","citasrealizadas","citascancelado","valorcitas","citas100","progreso","url1","respuesta1","resultado1","url2","respuesta2","resultado2","reverse","date","totaldia","reduce","facturacion","ctx","getElementById","getContext","Chart","type","data","labels","datasets","borderColor","backgroundColor","scales","y","beginAtZero","plugins","legend","display","printgrafica1","circle","strokeDashoffset","animacioncircle","putoptions","select","turnosemployee","horas","Array","radio","j","btnmenu","navmenu","toggle","tagName","eliminarservicio","duracion","user","swiper","Swiper","el","slideClass","createElements","autoplay","delay","loop"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {scrolnav(); });\r\n\r\nfunction scrolnav() {\r\n    const enlaces = document.querySelectorAll('.dashboard__menu a');  //selecicona el elemento nav y sus enelaces \r\n    enlaces.forEach( function(enlace){  //me recorre los enlaces del elemento NAV seleccionado \r\n        if(enlace.classList.contains('dashboard__enlace--actual')){\r\n            const seccion = document.querySelector('.'+enlace.firstElementChild.nextElementSibling.textContent);\r\n            seccion.scrollIntoView({behavior: 'smooth'});\r\n        } \r\n    });\r\n}","(function(){\r\n\r\n    //////////////////////bar progress //////////////////////\r\n    if(document.querySelector('.barraprogreso')){\r\n        const negocios = document.querySelectorAll('#negocio');\r\n        const label = document.querySelector('.barraprogreso__label');\r\n        const barra = document.querySelector('.barraprogreso__barra');\r\n\r\n        let bar = 0;\r\n        negocios.forEach(negocio=>{if(negocio.value)bar++;});\r\n        barra.classList.add('animation');\r\n        label.textContent = ((bar*100)/11).toFixed(1)+'%';\r\n        const animationbarra = document.querySelector('.animation');\r\n        animationbarra.style.width = label.textContent; //barra de progreso dinamicamente\r\n        //\r\n    }\r\n\r\n\r\n    /////////////////// paginacion de empleado, malla, actualizar-empleado //////////////////\r\n    if(document.querySelector('.cambiopaginas')){ //elemento en views/dash-cliente.php y en viewa/admin/adminconfig/index.php\r\n        const btns_nav_empleados = document.querySelectorAll('.cambiopaginas span');\r\n        btns_nav_empleados[0].classList.add('resaltar'); //resaltamos el primer enlace o btn\r\n        if(document.querySelector('.perfil')){\r\n            document.querySelector('.pagina3').classList.add('mostrarseccion'); \r\n        }else{\r\n            document.querySelector('.pagina1').classList.add('mostrarseccion'); //mostramos la primera seccion\r\n        }\r\n        btns_nav_empleados.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{ //cada btn o enlace\r\n\r\n                if(!e.target.classList.contains('resaltar')){\r\n                    btns_nav_empleados.forEach(btn=>btn.classList.remove('resaltar'));\r\n                    e.target.classList.add('resaltar');\r\n                }\r\n\r\n                const paginas = document.querySelectorAll('.paginas'); //seleccionamos las secciones o paginas a mostrar\r\n                paginas.forEach(pagina => pagina.classList.remove('mostrarseccion')); ////quitamos la class mostrarseccion a todas las secciones\r\n                document.querySelector(`.${e.target.id}`).classList.add('mostrarseccion'); //añadimos la class mostrarseccion a la la seccion o pagina correspondiente\r\n            });\r\n        });\r\n    }\r\n    \r\n\r\n    ///////////////////// habilita/deshabiita inputs de los dias de la malla de turnos con el checkbox/////////////\r\n    const dias = document.querySelectorAll(\".dia input[type=checkbox]\");\r\n    dias.forEach(dia => {\r\n        dia.addEventListener('change', function(e){\r\n            if(this.checked){\r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = false;\r\n            }else{ \r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = true;\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    ////////////////////// carga de horas en los select de la malla////////////////////////\r\n    const entradas = document.querySelectorAll('#entrada');\r\n    entradas.forEach(entrada =>{\r\n        entrada.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            puthoras(nextselect, e);\r\n        });\r\n    });\r\n\r\n    function puthoras(nextselect, e){\r\n        while(nextselect.firstChild)nextselect.removeChild(nextselect.firstChild);\r\n        let subhora = e.target.value.split(':');\r\n        let hora = parseInt(subhora[0]+subhora[1]);\r\n\r\n        for(let i = 0; hora<2300; i++){\r\n            let option = document.createElement('OPTION');\r\n            hora+=30;\r\n            if(hora%100 == 60)hora+=40;\r\n            option.value = hora;\r\n            subhora[0]= parseInt(hora/100);\r\n            subhora[1] = hora%100;\r\n            if(subhora[1] === 0)subhora[1] = \"00\";\r\n            option.textContent = subhora[0]+':'+subhora[1];\r\n            nextselect.appendChild(option);\r\n        }\r\n        nextselect.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            if(nextselect)puthoras(nextselect, e);\r\n        });\r\n    }\r\n\r\n    //////////////// funcion contadores de caracteres /////////////////////\r\n    /*countchars();\r\n    function countchars(){\r\n        const numinput = document.querySelectorAll('.count-charts');  \r\n        numinput.forEach(element =>{ //element es cada label\r\n            element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n            element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                element.textContent = element.dataset.num-e.target.value.length;\r\n                  \r\n                if(element.dataset.num-e.target.value.length <= 0){\r\n                    let cadena = e.target.value.slice(0, element.dataset.num);\r\n                    e.target.value = cadena;\r\n                    element.textContent = 0;\r\n                }\r\n            });\r\n        });\r\n    }*/\r\n\r\n})();","(function(){\r\n\r\n    if(document.querySelector('#dashboardcitas')){//en admin/citas/index.php\r\n        \r\n        const filtros = document.querySelector('#filtros-personalizado');\r\n        const selectfiltro = document.querySelector('#selectprofesional');\r\n        const selectfecha = document.querySelector('#fecha'); //filtro de solo fechas\r\n        const crearcita = document.querySelector('#crearcita');\r\n        const crearcitanoreg = document.querySelector('#crearcitanoreg');\r\n        const programar = document.querySelectorAll('.programar');\r\n    \r\n        if(filtros){\r\n            filtros.addEventListener('click', ()=>{\r\n                let idprofesional = selectfiltro.options[selectfiltro.options.selectedIndex].value; //toma el id del select profesional\r\n        \r\n                if(idprofesional){\r\n                    Swal.fire({\r\n                        customClass: {\r\n                        //confirmButton: 'sweetbtnconfirm',\r\n                        // cancelButton: 'sweetbtncancel'\r\n                        },\r\n                        title: 'Consulta el profesional por fecha:',\r\n                        html: `<form class=\"formulario\" action=\"/admin/citas/consultaxprofesxfecha?pagina=1\" method=\"POST\">    \r\n                                    <div class=\"formulario__campo\">\r\n                                        <input class=\"formulario__input\" id=\"fecha\" type=\"date\" name=\"fecha\" value=\" \" required>\r\n                                    </div>\r\n                                    <input type=\"hidden\" name=\"profesional\" value=\"${idprofesional}\">\r\n                                    <input class=\"btnsmall\" type=\"submit\" value=\"Consultar\">\r\n                            </form>`,\r\n                        showCancelButton: false,\r\n                        showConfirmButton: false,\r\n                        //confirmButtonText: 'Aceptar',\r\n                        //cancelButtonText: 'Cancelar',\r\n                    })/*.then((result) => {\r\n                        if (result.isConfirmed) {\r\n                        Swal.fire('Actualizando', '', 'success')\r\n                        //modificar el servicio\r\n                        } \r\n                    })*/\r\n                }\r\n            });\r\n        }\r\n\r\n        selectfecha.addEventListener('input', e => {\r\n            /*(async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('fecha', e.target.value);\r\n                try {\r\n                    const url = \"/admin/api/filtroxfecha\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    console.log(resultado);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();*/\r\n            window.location = `/admin/citas/filtroxfecha?pagina=1&fecha=${e.target.value}`;\r\n        });\r\n\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        let gettimeservice=0, horasdisponibles = [], horacitas = [];\r\n        //const divhoras = document.querySelector('#horas'); //donde se poenen las horas\r\n\r\n        let usuarios, servicios, emplserv, fechadesc, malla, citas;\r\n        let onlyfechadesc, onlymalla, onlycitas;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/gettimeservice\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                gettimeservice = await respuesta.json(); //traer el tiempo de duracion del servicio ej: 30, 35, 40min etc\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/allclientes\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                usuarios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n                \r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\"; //llamado a la API REST para trer todas las fechas de descanso de todos los empleados.\r\n                const respuesta = await fetch(url); \r\n                fechadesc = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json(); //se trae las citas de hoy en el backend se trae hora y min ej: 08:00\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        \r\n        crearcita.addEventListener('click', (e)=>{ ////crear cita\r\n            e.preventDefault();\r\n            const usuario = `<div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"usuario\">Seleccione Usuario: </label>\r\n                                <select class=\"formulario__select\" name=\"id_usuario\" id=\"usuario\" required>\r\n                                    <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                </select>\r\n                            </div>`;\r\n            formulariocliente('Crear Cita', 'Crear', '/admin/citas/crear?pagina=1', usuario);\r\n            cargarusuarios();\r\n            cargaservicios();\r\n            eventofecha();\r\n        });\r\n        programar.forEach(element =>{\r\n            element.addEventListener('click', (e)=>{ ///programar cita\r\n                const valstatus = e.target.parentElement.parentElement.previousElementSibling.textContent;\r\n                const usuario = `<span class=\"namecliente\"></span><span id=\"horacita\"></span>\r\n                                <input type=\"hidden\" id=\"id\" name=\"id\" value=\"\" >`;\r\n                if(valstatus === \"Pendiente\" || valstatus === \"Out\")\r\n                {   formulariocliente('Reprogramar Cita A:', 'Enviar', '/admin/citas?pagina=1', usuario);\r\n                    cargarcita(e.target);\r\n                }\r\n            });\r\n        });\r\n\r\n        //////////////////////crear citas para no registrados//////////////////////\r\n        crearcitanoreg.addEventListener('click', (e)=>{ ////crear cita\r\n            e.preventDefault();\r\n            const usuario = `<div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombrecliente\">Nombre del cliente: </label>\r\n                                <input class=\"formulario__input\" id=\"nombrecliente\" name=\"nombrecliente\" type=\"text\" required>\r\n                            </div>\r\n                            <input type=\"hidden\" name=\"id_usuario\" value=\"2\" >\r\n                            `;\r\n            formulariocliente('Cita Para Cliente No Registrado', 'Crear', '/admin/citas/crear?pagina=1', usuario);\r\n            cargaservicios();\r\n            eventofecha();\r\n        });\r\n        \r\n\r\n        function formulariocliente(titulo, submit, action, usuario){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form class=\"formulario modalform\" action=\"${action}\" method=\"POST\">\r\n                            <input type=\"hidden\" id=\"id_empserv\" name=\"id_empserv\" value=\"\" >\r\n                            <input type=\"hidden\" id=\"hora_fin\" name=\"hora_fin\" value=\"\" >\r\n\r\n                            <div class=\"\">\r\n                                ${usuario}\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"servicios\">Seleccione Servicio: </label>\r\n                                    <select class=\"formulario__select\" name=\"idservicio\" id=\"servicios\" required>\r\n                                        <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"professionals\">Seleccione Profesional: </label>\r\n                                    <select class=\"formulario__select\" name=\"nameprofesional\" id=\"professionals\" required>\r\n                                        <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"date\">Seleccionar Fecha:</label>\r\n                                    <input class=\"formulario__input\" id=\"date\" name=\"fecha_fin\" type=\"date\" disabled required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"cliente__campohoras\" id=\"horas\">\r\n\r\n                            </div>\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: true,\r\n                showConfirmButton: false,  \r\n            });\r\n            //deshabilitarfechaanterior();\r\n        }\r\n\r\n\r\n        function cargarusuarios(){\r\n            const inputusuario = document.querySelector('#usuario');\r\n            usuarios.forEach(element => {\r\n                if(element.id!=2){  //no muestra el registro de Usuario No Registrado\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = element.id;\r\n                    option.textContent = element.nombre+' '+element.apellido;\r\n                    inputusuario.appendChild(option);\r\n                }\r\n            }); \r\n        }\r\n\r\n        function cargaservicios(){\r\n            const selectservicios = document.querySelector('#servicios');\r\n            servicios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id; //id de la tabla servicio\r\n                option.textContent = element.nombre;\r\n                selectservicios.appendChild(option);\r\n            });\r\n            selectservicios.addEventListener('change', e=>cargarprofesionales(e.target.value));\r\n        }\r\n\r\n        function cargarprofesionales(id){\r\n            const professionals = document.querySelector('#professionals');\r\n            const empleados = emplserv.filter(Element => Element.idservicio === id);\r\n            borrarhtml(professionals);\r\n            document.querySelector('#date').disabled = true;\r\n            borrarhtml(document.querySelector('#horas'));\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' -Selecionar- ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            professionals.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado; //id de la tabla empleados\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;  //id de la tabla empserv\r\n                professionals.appendChild(option); \r\n            });\r\n            professionals.addEventListener('change', (e)=>{\r\n                document.querySelector('#date').disabled = false;\r\n                document.querySelector('#date').value = '';\r\n                deshabilitarfechaanterior();\r\n                borrarhtml(document.querySelector('#horas')); //borra en donde se ponen las horas\r\n            });\r\n        }\r\n\r\n        function eventofecha(){\r\n            const select_date = document.querySelector('#date');\r\n            select_date.addEventListener('input', (evento)=> {\r\n                /////////borrar el campo de las horas//////////\r\n                const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n                borrarhtml(divhoras);\r\n                \r\n                const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana\r\n                validarfechaydia(evento.target.value, dia.getUTCDay());\r\n            });\r\n        }\r\n\r\n        \r\n        function validarfechaydia(fecha, dia){\r\n            //al seleccionar fecha ya se ha seleccionado el profesional, y el profesional me contiene su id y el id de la tabla empserv\r\n            const professionals = document.querySelector('#professionals');\r\n            const idempleado = professionals.options[professionals.options.selectedIndex].value;\r\n             ////cargar el input type hidden name=id_empserv\r\n             document.querySelector('#id_empserv').value = professionals.options[professionals.options.selectedIndex].dataset.id;\r\n\r\n            onlymalla = malla[`empleado_${idempleado}`]; //obtiene solo la malla de ese empleado\r\n            onlyfechadesc = fechadesc.filter(element => idempleado === element.empleado_id);\r\n            onlycitas = citas.filter(cita => (cita.idempleado === idempleado&&cita.fecha_fin === fecha&&cita.estado === \"Pendiente\")); //obtengo las citas deacuerdo al profesional y fecha seleccionada y pendiente\r\n            console.log(citas);\r\n            const r1 = onlyfechadesc.some(element => element.fecha === fecha);\r\n            if(r1){\r\n                Swal.fire(\r\n                    'Este dia no esta disponible!',\r\n                    'You clicked the button!',\r\n                    'error'\r\n                  )\r\n            }else{\r\n                const r2 = onlymalla.filter(element => element.id_dia == (dia===0?7:dia));\r\n                if(r2.length){ //es pq el dia si esta en la malla\r\n                    gethoras(r2[0]); //se envia solo el dia seleccionado (obj)\r\n                }\r\n                else{ //dia no esta en la malla\r\n                    Swal.fire(\r\n                        'Este dia no esta disponible!',\r\n                        'You clicked the button!',\r\n                        'error'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        function gethoras(r2){\r\n            let horario1 = [], horario2 = [];\r\n\r\n            horario1 = [...horario1, r2.inicioturno, r2.inidescanso];\r\n            horario2 = [...horario2, r2.findescanso, r2.finturno];\r\n\r\n            // me traigo un arreglo de la tabla citas de la DB con su hora segun fecha seleccionada y profesional seleccionado\r\n            //// comparo cada hora del arreglo traio con r2.iniciodescanso y si es menor lo agrego al arreglo horario1\r\n            ///luego comparo con r2.finturno y si es mayor lo agrego a arreglo horario2\r\n\r\n            horario1 = horario1.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            horario2 = horario2.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            //obtengo las horas formato 24 de la bd segun fecha y profesional\r\n            //horacitas = onlycitas.map(element =>  element.hora_fin.slice(3));\r\n            horacitas = onlycitas.map(element =>  element.hora_fin);\r\n\r\n            for(let i = 0; i<horario1.length-1; i++){\r\n            calcularhorarios(horario1[i], horario1[i+1]);\r\n            }\r\n            for(let i = 0; i<horario2.length-1; i++)\r\n            calcularhorarios(horario2[i], horario2[i+1]);\r\n            \r\n           console.log(horasdisponibles);\r\n           //podemos validar horasdisponibles si esta vacio es pq no hay espacion o agenda llena\r\n           //mostrar alerta y no permitir pedir cita, por ahora se valida en backend\r\n           imprimirhorashtml();\r\n        }\r\n\r\n        function calcularhorarios(horaInicio, horaFin) {\r\n            const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n            const horarioFinal = new Date(`01/01/2000 ${horaFin}`);\r\n            horarioFinal.setTime(horarioFinal.getTime() - Math.floor(gettimeservice)*60000); //evitar que se programe citas mas alla de las horas de salida\r\n          \r\n            while (horarioActual <= horarioFinal) {\r\n              const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n              const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n              //console.log(`${hora}:${minutos}`);\r\n              const validate = horacitas.includes(`${hora}:${minutos}`); //horacitas arreglo con las horas ya seleccionadas\r\n              if(!validate){\r\n                  //hora1 = ${hora}:${minutos};\r\n                  //horatemp = hora1; + min-servicio, \r\n                  //preguntar si horatemp es menor o igual al elemento del arreglo horacitas\r\n                  //si es si\r\n                  //imprimir hora1, hacer hora1 = horatemp;\r\n                  //si es no\r\n                  //hora1 = elemento del arreglo + su duracion-serv\r\n                  //aumentar en uno al arreglo de horacitas\r\n                  //valido arribo si es si, vuelvo y repito esto\r\n                  \r\n                \r\n\r\n              horasdisponibles = [...horasdisponibles, `${hora}:${minutos}`];\r\n              }\r\n          \r\n              horarioActual.setTime(horarioActual.getTime() + gettimeservice * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n            }\r\n        }\r\n\r\n        function imprimirhorashtml(){\r\n            const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n            horasdisponibles.forEach(hora => {\r\n                const divhora = document.createElement('DIV');\r\n                divhora.classList.add(\"cliente__hora\");\r\n                const parrafohora = document.createElement('P');\r\n                parrafohora.textContent = hora;\r\n                //parrafohora.dataset.hora = hora.replace(':', '');\r\n                parrafohora.dataset.hora = hora;\r\n                parrafohora.onclick = seleccionarhora;\r\n                parrafohora.classList.add(\"texthora\");\r\n                divhora.appendChild(parrafohora);\r\n                divhoras.appendChild(divhora);\r\n            });\r\n        }\r\n\r\n        function seleccionarhora(e){\r\n            const deshabilthoraprevia = document.querySelector('.horaselect');\r\n            if(deshabilthoraprevia)\r\n                deshabilthoraprevia.classList.remove('horaselect');\r\n            e.target.parentElement.classList.add('horaselect'); //class agregada en dash-cliente/_cliente.scss\r\n            //cargar el input type hidden name = hora_fin del formulario para el envio\r\n            document.querySelector('#hora_fin').value = e.target.textContent;\r\n        }\r\n\r\n        //////////////////////////////reprogramar//////////////////////////////////\r\n\r\n\r\n        function cargarcita(element){\r\n            cargaservicios();\r\n            const tr = element.parentElement.parentElement.parentElement;\r\n            const idcita = tr.children[0].textContent;\r\n            const nombre = tr.children[1].textContent;\r\n            const nameservice = tr.children[3].textContent;\r\n            const namepro = tr.children[4].textContent;\r\n            const fechacita = tr.children[5].textContent;\r\n            const horacita = tr.children[6].textContent;\r\n            const namecliente = document.querySelector('.namecliente');\r\n            const selectservice = document.querySelector('#servicios'); //del formulario de arriba\r\n            const professionals = document.querySelector('#professionals'); //del formulario de arriba\r\n            const inputdate = document.querySelector('#date'); //del formulario de arriba\r\n\r\n            namecliente.textContent = nombre+' - ';\r\n            document.querySelector('#horacita').textContent = horacita;\r\n            document.querySelector('#id').value = idcita;\r\n            document.querySelector('#hora_fin').value = horacita;\r\n            \r\n            for(let i = 0; i<selectservice.options.length; i++)\r\n                if(selectservice.options[i].textContent === nameservice)\r\n                    selectservice.options[i].selected = true;\r\n\r\n            const id = selectservice.options[selectservice.options.selectedIndex].value;\r\n            cargarprofesionales(id);\r\n\r\n            for(let i = 0; i<professionals.options.length; i++){\r\n                if(professionals.options[i].textContent === namepro){\r\n                    professionals.options[i].selected = true;\r\n                    document.querySelector('#id_empserv').value = professionals.options[i].dataset.id; //se carga el id_empserv\r\n                }\r\n            }\r\n\r\n            inputdate.value = fechacita;\r\n            eventofecha();\r\n\r\n            const dia = new Date(fechacita);\r\n            validarfechaydia(fechacita, dia.getUTCDay());\r\n        }\r\n        \r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const inputfecha = document.querySelector('#date');\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n            const year = fechaactual.getFullYear(); // obiene el año actual\r\n            const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n            const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            if(mes<10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n            inputfecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('.clientes')){\r\n        const crearcliente = document.querySelector('#crearcliente');\r\n        const editar = document.querySelectorAll('#editar');\r\n        const hab_desh = document.querySelectorAll('#hab_desh');\r\n        let objform = {\r\n            titulo: '',\r\n            url: '',\r\n            submit: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            movil: '',\r\n            email: ''\r\n        }\r\n\r\n        crearcliente.addEventListener('click', ()=>{\r\n            objform.titulo = 'Crear Cliente Nuevo';\r\n            objform.url = '/admin/clientes/crear';\r\n            objform.submit = 'Crear Cliente';\r\n            objform.nombre = '';\r\n            objform.apellido = '';\r\n            objform.movil = '';\r\n            objform.email = '';\r\n            objform.password = `<div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"password\">Password</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"password\" placeholder=\"Password del cliente\" id=\"password\" name=\"password\" required>\r\n                                        <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"password2\">Repetir Password</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"password\" placeholder=\"Repetir Password\" id=\"password2\" name=\"password2\" required>\r\n                                        <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                    </div>\r\n                                </div>`;\r\n            formulariocliente(objform, 0);\r\n            countchars();\r\n        });\r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{\r\n                objform.titulo = 'Actualizar Cliente';\r\n                objform.url = '/admin/clientes/actualizar';\r\n                objform.submit = 'Actualizar';\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                objform.nombre = tr.children[1].textContent;\r\n                objform.apellido = tr.children[2].textContent;\r\n                objform.movil = tr.children[3].textContent;\r\n                objform.email = tr.children[4].textContent;\r\n                objform.password = '';\r\n                formulariocliente(objform, e.target.parentElement.dataset.id);\r\n                countchars();\r\n            });\r\n        });//cierre del foreach\r\n\r\n\r\n        function formulariocliente(objform, id){\r\n            let { titulo, url, submit, nombre, apellido, movil, email, password} = objform;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form class=\"formulario modalform\" action=\"${url}\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del cliente\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"apellido\">Apellido:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Apellido del cliente\" id=\"apellido\" name=\"apellido\" value=\"${apellido}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"movil\">Movil</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"number\" placeholder=\"Movil del cliente\" id=\"movil\" name=\"movil\" value=\"${movil}\" required>\r\n                                    <label data-num=\"10\" class=\"count-charts\" for=\"\">10</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"email\">Email</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"email\" placeholder=\"Email del cliente\" id=\"email\" name=\"email\" value=\"${email}\" required>\r\n                                    <label data-num=\"40\" class=\"count-charts\" for=\"\">40</label>\r\n                                </div>\r\n                            </div>\r\n                            ${password}\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n        }\r\n\r\n        /////////////// eliminar cliente ////////////////\r\n\r\n        hab_desh.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n\r\n                let mensaje = \"Desea bloquear el cliente?\";\r\n                if(e.target.classList.contains('habilitar'))mensaje = \"Desea habilitar el cliente?\";\r\n\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: mensaje,\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/admin/clientes/hab_desh?id=${id}`;\r\n                    } \r\n                })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.pagina5')){\r\n        let arraymediospago = [];\r\n        const inputmediospago = document.querySelectorAll('.mediospago__mediopago input[type=\"checkbox\"]');\r\n        const btnbtnmediopago = document.querySelector('#btnmediopago');\r\n        \r\n\r\n        (async()=>{\r\n            try {\r\n                const url = \"/admin/api/getmediospago\";\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                marcarmediospago(resultado);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function marcarmediospago(resultado){\r\n            inputmediospago.forEach(input =>{\r\n                const r = resultado.find(mediopago=>mediopago.id == input.value); //retorna el obj que conside\r\n                if(r.estado === '1'){ //r es el obj retornado\r\n                    input.checked = true;\r\n                    arraymediospago = [...arraymediospago, r.id];\r\n                } \r\n            });\r\n        }\r\n\r\n        inputmediospago.forEach(input =>{\r\n            input.addEventListener('change', (e)=>{\r\n                if(e.target.checked){\r\n                    arraymediospago = [...arraymediospago, e.target.value];\r\n                }else{\r\n                    arraymediospago = arraymediospago.filter(Element=>Element!=e.target.value);\r\n                }\r\n            });     \r\n        });\r\n\r\n        btnbtnmediopago.addEventListener('click', ()=>{\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('ids', arraymediospago);\r\n                try {\r\n                    const url = \"/admin/api/setmediospago\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    if(resultado){\r\n                        imprimirmensaje(\"Medios de pago actualizados\", 'alerta__exito', document.querySelector('.mediospago'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.mediospago'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        ////////************************fin medios de pago*************************//////////\r\n\r\n        const formhabilitarempleado = document.querySelector('#formhabilitarempleado');\r\n        const selectempleado = document.querySelector('#dardealtaselectempleado');\r\n        \r\n        selectempleado.addEventListener('change', (e)=>{\r\n            const restriccion = e.target.options[e.target.options.selectedIndex].dataset.restriccion;\r\n            if(document.querySelector('.creacioncuentas__habilitaremp input[name=\"admin\"]:checked'))document.querySelector('.creacioncuentas__habilitaremp input[name=\"admin\"]:checked').checked = false;\r\n            if(restriccion==2)document.querySelector('.creacioncuentas__habilitaremp #roladmin').checked = true;\r\n            if(restriccion==1)document.querySelector('.creacioncuentas__habilitaremp #rolempleado').checked = true;\r\n        });\r\n\r\n        formhabilitarempleado.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const radioadmin = document.querySelector('input[name=\"admin\"]:checked').value;\r\n            const idempleado = selectempleado.options[selectempleado.options.selectedIndex].value;\r\n\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('idempleado', idempleado);\r\n                datos.append('tiporol', radioadmin);\r\n                try {\r\n                    const url = \"/admin/api/habilitarempleado\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    if(resultado){\r\n                        selectempleado.options[selectempleado.options.selectedIndex].dataset.restriccion = radioadmin;\r\n                        imprimirmensaje(\"Empleado dado de alta en sistema administrativo\", 'alerta__exito', document.querySelector('.creacioncuentas__habilitaremp'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.creacioncuentas__habilitaremp'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        ////////*****************fin habilitar empleados*******************//////////\r\n\r\n        const formsetearpass = document.querySelector('#formsetearpass');\r\n        const selectsetearpass = document.querySelector('#selectsetearpass');\r\n\r\n        formsetearpass.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const idempleado = selectsetearpass.options[selectsetearpass.options.selectedIndex].value;\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('idempleado', idempleado);\r\n                try {\r\n                    const url = \"/admin/api/setearpass\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json(); \r\n                    console.log(resultado);\r\n                    if(resultado){\r\n                        imprimirmensaje(\"Password reiniciado por defecto\", 'alerta__exito', document.querySelector('.creacioncuentas__setearpass'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.creacioncuentas__setearpass'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        //////////*****************fin Setear Password******************//////////\r\n\r\n        const formcolores = document.querySelector('#formcolores');\r\n        formcolores.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const color1 = document.querySelector('.coloresapp #principal').value;\r\n            const color2 = document.querySelector('.coloresapp #secundario').value;\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('colorprincipal', color1);\r\n                datos.append('colorsecundario', color2);\r\n                try {\r\n                    const url = \"/admin/api/coloresapp\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json(); \r\n                    if(resultado){\r\n                        imprimirmensaje(\"Colores establecidos exitosamente\", 'alerta__exito', document.querySelector('.coloresapp'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.coloresapp'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        //////////*****************fin definir colores app******************//////////\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/gettimeservice\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                const gettimeservice = await respuesta.json(); //traer el tiempo de duracion del servicio\r\n                marcartiemposervicio(gettimeservice);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function marcartiemposervicio(gettimeservice){\r\n            const selecttimeserv = document.querySelector('#selecttime');\r\n            for(let i = 1; i<=selecttimeserv.options.length; i++){\r\n                if(selecttimeserv.options[i].value == gettimeservice){\r\n                    selecttimeserv.options[i].selected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const formtimeserv = document.querySelector('#formtimeserv');\r\n        formtimeserv.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const selecttimeserv = document.querySelector('#selecttime');\r\n            const tiemposervicio = selecttimeserv.options[selecttimeserv.options.selectedIndex].value;\r\n            const datos = new FormData();\r\n            datos.append('timeservice', tiemposervicio);\r\n            (async()=>{\r\n                try {\r\n                    const url = \"/admin/api/tiemposervicio\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json(); \r\n                    console.log(resultado);\r\n                    if(resultado){\r\n                        imprimirmensaje(\"Tiempo del servicio establecido\", 'alerta__exito', document.querySelector('.tiemposervicio'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.tiemposervicio'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        //////////*****************fin establecer tiempo de servicio******************//////////\r\n\r\n        function imprimirmensaje(msjtext, tipo, ubicacion){ //muestra mensaje de exito o error\r\n            const mensaje = document.createElement('P');\r\n            mensaje.textContent = msjtext;\r\n            mensaje.classList.add('alerta', tipo);\r\n            ubicacion.insertBefore(mensaje, ubicacion.querySelector('.configuracion__heading'));\r\n            setTimeout(() => {\r\n                document.querySelector('.alerta').remove();\r\n            }, 5000);\r\n        }\r\n    }  //fin pagina 5 = configuracion\r\n})();","(function(){\r\n    if(document.querySelector('.creardescuento')){ //crear dcto en admin/fidelizacion\r\n        \r\n        const categoria = document.querySelector('#categoria');\r\n        const product_serv = document.querySelector('#product_serv');\r\n        const tipodcto = document.querySelector('#tipo');\r\n        const dcto1 = document.querySelector('#dcto1');\r\n        const dcto2 = document.querySelector('#dcto2');\r\n        const dcto2Valor = document.querySelector('#dcto2Valor');\r\n        const fechaini = document.querySelector('#fecha_ini');\r\n        let servicios, valorservicio;\r\n\r\n        deshabilitarfechaanterior();\r\n\r\n        (async()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST para trer todos los servicios\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json();   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        categoria.addEventListener('change', (e)=>{\r\n            borrarhtml(product_serv);\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = 'Seleccionar Producto';\r\n            product_serv.appendChild(option);\r\n            tipodcto.disabled = true;\r\n            dcto1.disabled = true;\r\n            if(e.target.value == \"servicios\"){\r\n                servicios.forEach(servicio => {\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = servicio.id;\r\n                    option.textContent = servicio.nombre;\r\n                    product_serv.appendChild(option);\r\n                });\r\n            }\r\n            if(e.target.value == \"productos\"){\r\n\r\n            }\r\n        });\r\n\r\n        product_serv.addEventListener('change', (e)=>{\r\n            const servicio = servicios.filter(servicio => servicio.id == e.target.value);\r\n            valorservicio = servicio[0].precio;\r\n            document.querySelector('#valorservicio').textContent = '$ '+valorservicio;\r\n            tipodcto.disabled = false;\r\n            imprimirvalor(dcto1.value);\r\n        });\r\n\r\n        tipodcto.addEventListener('change', (e)=>{\r\n            if(e.target.value == 'porcentaje'){\r\n                dcto1.min = 0;\r\n                dcto1.max = 100;\r\n                dcto2Valor.textContent = \"Valor\";\r\n            }\r\n            if(e.target.value == 'valor'){\r\n                dcto1.min = 0;\r\n                dcto1.max = valorservicio;\r\n                dcto2Valor.textContent = \"Valor (%)\";\r\n            }\r\n            dcto1.disabled = false;\r\n            imprimirvalor(dcto1.value);\r\n        });\r\n\r\n        dcto1.addEventListener('input', (e)=>{\r\n            imprimirvalor(e.target.value);  \r\n        });\r\n\r\n        function imprimirvalor(valoringresado){\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'porcentaje'){\r\n                if(valoringresado>100)dcto1.value = 100;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((valorservicio*dcto1.value)/100);\r\n            }\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'valor'){\r\n                if(valoringresado>parseInt(valorservicio))dcto1.value = valorservicio;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((dcto1.value*100)/valorservicio);\r\n            }  \r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        fechaini.addEventListener('change', (e)=>{\r\n            const fechafin = document.querySelector('#fecha_fin');\r\n            fechafin.disabled = false;\r\n            const fechaposterior = new Date(e.target.value);\r\n            fechaposterior.setDate(fechaposterior.getDate()+2);\r\n            const year = fechaposterior.getFullYear();\r\n            const mes = fechaposterior.getMonth() + 1;\r\n            const dia = fechaposterior.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n            fechafin.min = deshabilitarfecha; \r\n        });\r\n\r\n        //////////////////// deshabilitar fecha anterior ////////////////////\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n           \r\n            fechaactual.setDate(fechaactual.getDate());\r\n            const year = fechaactual.getFullYear();\r\n            const mes = fechaactual.getMonth() + 1;\r\n            const dia = fechaactual.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            \r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n\r\n            fechaini.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('#dash-cliente')){\r\n        \r\n        const servicio = document.querySelector('#servicio'); //select servicio\r\n        const profesionales = document.querySelector('#profesional');\r\n        const selectdate = document.querySelector('#date');\r\n        //const programar = document.querySelectorAll('.programar');\r\n        const eliminarcitas = document.querySelectorAll('#cancelado');\r\n        selectdate.disabled = true;\r\n        let emplserv;\r\n                \r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json(); \r\n                validarofertaselected(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        deshabilitarfechaanterior();\r\n\r\n        function validarofertaselected(){   //validar oferta\r\n            const urlparams = new URLSearchParams(window.location.search);\r\n            const id = urlparams.get('id'); //id del servicio\r\n            const valordcto = urlparams.get('valordcto'); //id del servicio\r\n            if(id){\r\n                servicio.classList.add('servicioselected');\r\n                for(let i = 1; i<=servicio.options.length; i++){\r\n                    if(servicio.options[i].value == id){\r\n                        servicio.options[i].selected = true;\r\n                        let serviciotext = servicio.options[i].textContent.split(\" - \");\r\n                        serviciotext = serviciotext[0]+' - '+valordcto;\r\n                        servicio.options[i].textContent = serviciotext;\r\n                        break;\r\n                    }\r\n                }\r\n                crearselectprofesionals(id);\r\n            }\r\n        }\r\n\r\n        servicio.addEventListener('change', (e)=>{\r\n            selectdate.disabled = true;\r\n            servicio.classList.remove('servicioselected');\r\n            crearselectprofesionals(e.target.value);\r\n        });\r\n\r\n        function crearselectprofesionals(idservice){\r\n            const empleados = emplserv.filter(Element => Element.idservicio === idservice);\r\n            borrarhtml(profesionales);\r\n            borrarhtml(document.querySelector('#horas'));\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' -Selecionar- ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            profesionales.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado;  //id de la tabla empleados\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;   //id de la tabla empserv\r\n                profesionales.appendChild(option);\r\n            });\r\n        }\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const fecha = document.querySelector('#date');\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n            /*const year = fechaactual.getFullYear(); // obiene el año actual\r\n            const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n            const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            */\r\n           \r\n            fechaactual.setDate(fechaactual.getDate() + 1);\r\n            const year = fechaactual.getFullYear();\r\n            const mes = fechaactual.getMonth() + 1;\r\n            const dia = fechaactual.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            \r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n\r\n            fecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        eliminarcitas.forEach(eliminarcita =>{\r\n            eliminarcita.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                /*const fechacita = tr.children[2].textContent;\r\n                const horacita = tr.children[3].textContent;\r\n                const estado = tr.children[6].textContent;*/\r\n\r\n                //var fecha1 = new Date(fechacita+\"T00:00:00-05:00\");\r\n                /*let tiempocita = new Date(fechacita+\"T\"+horacita);\r\n                let hoy = new Date();\r\n                console.log(tiempocita-hoy);*/\r\n\r\n                //if(estado === \"Pendiente\"){\r\n                    //if((tiempocita-hoy)>=3600000)\r\n                        cancelarcita(e.target.parentElement.dataset.id, tr);\r\n                //}  \r\n            });\r\n        });\r\n\r\n\r\n        function cancelarcita(id, tr){ //funcion para cancelar la cita, se ejecuta si la cita esta a mas de una hora de cumplirse\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Cancelar La Cita?',\r\n                text: \"SE CANCELARA LA CITA, PUEDES SOLICITAR UNA NUEVA CUANDO LO DESEES.\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/cancelarcita?id=${id}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();\r\n                            if(resultado){\r\n                                //estado.textContent = \"Cancelado\"; \r\n                                tr.remove();\r\n                                Swal.fire('Cita Cancelada', '', 'success')\r\n                            }else{\r\n                                Swal.fire('No se pudo cancelar intentalo nuevamente', '', 'error')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })(); \r\n                } \r\n            })\r\n        }\r\n\r\n\r\n        /*\r\n        programar.forEach(element => { //bloque para reprogramar cita desde el dashboard del cliente\r\n            element.addEventListener('click', e=>{\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Reprograme su cita',\r\n                    html: `<div class=\"formulario__campo\">\r\n                            <label class=\"formulario__label\" for=\"date\">Consulta fecha disponible:</label>\r\n                            <input class=\"formulario__input\" id=\"date\" type=\"date\" value=\"\">\r\n                            </div>\r\n                            \r\n                            <div class=\"cliente__campohoras\" id=\"horasmodal\">\r\n\r\n                            </div>`,\r\n                    showCancelButton: true,\r\n                    showConfirmButton: true,\r\n                    //confirmButtonText: 'Aceptar',\r\n                    //cancelButtonText: 'Cancelar',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                    Swal.fire('Actualizando', '', 'success')\r\n                    //modificar el servicio\r\n                    } \r\n                })\r\n            });\r\n        });*/\r\n        \r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('#dash-cliente')){\r\n\r\n        const telcliente = document.querySelector('#telcliente').textContent;\r\n        let gettimeservice=0, horasdisponibles = [], horacitas = [];\r\n        const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n\r\n        function calcularhorarios(horaInicio, horaFin) {\r\n            const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n            const horarioFinal = new Date(`01/01/2000 ${horaFin}`);\r\n            horarioFinal.setTime(horarioFinal.getTime() - Math.floor(gettimeservice)*60000);\r\n          \r\n            while (horarioActual <= horarioFinal) {\r\n              const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n              const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n              //console.log(`${hora}:${minutos}`);\r\n              const validate = horacitas.includes(`${hora}:${minutos}`);\r\n              if(!validate){\r\n                  //hora1 = ${hora}:${minutos};\r\n                  //horatemp = hora1; + min-servicio, \r\n                  //preguntar si horatemp es menor o igual al elemento del arreglo horacitas\r\n                  //si es si\r\n                  //imprimir hora1, hacer hora1 = horatemp;\r\n                  //si es no\r\n                  //hora1 = elemento del arreglo + su duracion-serv\r\n                  //aumentar en uno al arreglo de horacitas\r\n                  //valido arribo si es si, vuelvo y repito esto\r\n\r\n              horasdisponibles = [...horasdisponibles, `${hora}:${minutos}`];\r\n              }\r\n          \r\n              horarioActual.setTime(horarioActual.getTime() + gettimeservice * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n            }\r\n        }\r\n\r\n\r\n        const professionals = document.querySelector('#profesional');\r\n        const select_date = document.querySelector('#date');\r\n        let fechadesc, malla, citas;\r\n        let onlyfechadesc, onlymalla, onlycitas;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/gettimeservice\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                gettimeservice = await respuesta.json(); //traer el tiempo de duracion del servicio\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\"; //llamado a la API REST para trer todas las fechas de descanso de todos los empleados.\r\n                const respuesta = await fetch(url); \r\n                fechadesc = await respuesta.json(); \r\n                   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();    \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        /*(async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json();\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })(); */\r\n        \r\n        const obtenercitas = async()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior, en controladorcliente.php\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json();\r\n            } catch (error){\r\n                console.log(error);\r\n            }\r\n        }\r\n        obtenercitas();\r\n\r\n        setInterval(() => {\r\n            obtenercitas();\r\n            if(!select_date.value == \"\" && document.querySelector('.cliente__hora')){\r\n                const dia = new Date(select_date.value);\r\n                borrarhtml(divhoras);\r\n                validarfechaydia(select_date.value, dia.getUTCDay());\r\n            }\r\n            //gethoras(r2)\r\n        }, 3100);\r\n\r\n        ///////////seleccionar empleado o profesional //////////////\r\n        professionals.addEventListener('change', (e)=>{\r\n            borrarhtml(divhoras);\r\n            select_date.disabled = false;\r\n            select_date.value = \"\";\r\n            onlymalla = malla[`empleado_${e.target.value}`]; //obtiene solo la malla de ese empleado\r\n            onlyfechadesc = fechadesc.filter(element => e.target.value === element.empleado_id);\r\n        });\r\n\r\n        select_date.addEventListener('input', (evento)=> {\r\n            /////////borrar el campo de las horas//////////\r\n            borrarhtml(divhoras);\r\n            \r\n            const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana\r\n            validarfechaydia(evento.target.value, dia.getUTCDay());\r\n            /*\r\n            const opciones = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long'\r\n            }\r\n            console.log(dia.toLocaleDateString('es-ES', opciones));*/\r\n        });\r\n        \r\n\r\n        function validarfechaydia(fecha, dia){\r\n            //al seleccionar fecha ya se ha seleccionado el profesional, y el profesional me contiene su id y el id de la tabla empserv\r\n            const idempleado = professionals.options[professionals.options.selectedIndex].value;\r\n            onlycitas = citas.filter(cita => (cita.idempleado === idempleado&&cita.fecha_fin === fecha&&cita.estado === \"Pendiente\")); //obtengo las citas deacuerdo al profesional y fecha seleccionada y pendiente\r\n            \r\n            const r1 = onlyfechadesc.some(element => element.fecha === fecha);\r\n            if(r1){\r\n                Swal.fire(\r\n                    'Este dia no esta disponible!',\r\n                    'You clicked the button!',\r\n                    'error'\r\n                  )\r\n            }else{\r\n                const r2 = onlymalla.filter(element => element.id_dia == (dia===0?7:dia));\r\n                if(r2.length){ //es pq el dia si esta en la malla\r\n                    gethoras(r2[0]); //se envia solo el dia seleccionado (obj)\r\n                }\r\n                else{ //dia no esta en la malla\r\n                    Swal.fire(\r\n                        'Este dia no esta disponible!',\r\n                        'You clicked the button!',\r\n                        'error'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        function gethoras(r2){\r\n            let horario1 = [], horario2 = [];\r\n\r\n            horario1 = [...horario1, r2.inicioturno, r2.inidescanso];\r\n            horario2 = [...horario2, r2.findescanso, r2.finturno];\r\n\r\n            // me traigo un arreglo de la tabla citas de la DB con su hora segun fecha seleccionada y profesional seleccionado\r\n            //// comparo cada hora del arreglo traio con r2.iniciodescanso y si es menor lo agrego al arreglo horario1\r\n            ///luego comparo con r2.finturno y si es mayor lo agrego a arreglo horario2\r\n\r\n            horario1 = horario1.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            horario2 = horario2.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            //horacitas = onlycitas.map(element =>  element.hora_fin.slice(3)); //obtengo las horas formato 24 de la bd segun fecha y profesional\r\n            horacitas = onlycitas.map(element =>  element.hora_fin);\r\n\r\n            for(let i = 0; i<horario1.length-1; i++){\r\n            calcularhorarios(horario1[i], horario1[i+1]);\r\n            }\r\n            for(let i = 0; i<horario2.length-1; i++)\r\n            calcularhorarios(horario2[i], horario2[i+1]);\r\n            \r\n           console.log(horasdisponibles);\r\n           imprimirhorashtml();\r\n        }\r\n\r\n\r\n        function imprimirhorashtml(){\r\n            horasdisponibles.forEach(hora => {\r\n                const divhora = document.createElement('DIV');\r\n                divhora.classList.add(\"cliente__hora\");\r\n                const parrafohora = document.createElement('P');\r\n                parrafohora.textContent = hora;\r\n                //parrafohora.dataset.hora = hora.replace(':', '');\r\n                parrafohora.dataset.hora = hora;\r\n                parrafohora.onclick = reservarcita;\r\n                parrafohora.classList.add(\"texthora\");\r\n                divhora.appendChild(parrafohora);\r\n                divhoras.appendChild(divhora);\r\n            });\r\n        }\r\n\r\n        function reservarcita(e){ \r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Reservar La Cita?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    enviarcita(e.target.dataset.hora).then((r) => {\r\n                        if(r){\r\n                            Swal.fire('Cita Programada', '', 'success')\r\n                            setTimeout(() => {\r\n                                window.location.reload();\r\n                            }, 1500);\r\n                        }else{ Swal.fire('No fue posible agendar cita, Intentalo de nuevo', '', 'error') }\r\n                    });\r\n                } \r\n            })\r\n        }\r\n\r\n        async function enviarcita(horacita){\r\n            const datos = new FormData();\r\n            const id_empserv = professionals.options[professionals.options.selectedIndex]; //id de la relacion empleado_servicio\r\n            const id_servicio = document.querySelector('#servicio').options[document.querySelector('#servicio').options.selectedIndex].value;\r\n            const hoy = new Date();\r\n\r\n            datos.append('telcliente', telcliente);\r\n            datos.append('id_empserv', id_empserv.dataset.id);\r\n            //datos.append('fecha_inicio', hoy.toLocaleDateString().replace(/\\//g, '-')); //fecha actual\r\n            datos.append('fecha_inicio', hoy.getFullYear()+'-'+(hoy.getMonth()+1)+'-'+hoy.getDate()); //fecha actual de toma de servicio\r\n            datos.append('fecha_fin', select_date.value);\r\n            datos.append('hora', hoy.toLocaleTimeString([], {hour12: false})); //hora actual de toma de servicio\r\n            datos.append('hora_fin', horacita);\r\n            datos.append('idservicio', id_servicio);\r\n            datos.append('nameprofesional', id_empserv.value);\r\n            try {\r\n                const url = \"/admin/api/enviarcita\";  //llama api en controladorcliente.php\r\n                const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                const resultado = await respuesta.json();  \r\n                if(resultado[0]){\r\n                    return true;\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n    }\r\n})();","(function(){ //para ver el detalle del pago de cada cita y su anulacion\r\n    if(document.querySelector('#dashboardcitas')){  \r\n        const detallefactura = document.querySelectorAll('.factura');\r\n\r\n        detallefactura.forEach(Element=>{\r\n            Element.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const estado = tr.children[7].textContent;\r\n                const idcita = tr.children[0].textContent;\r\n                if(estado === \"Finalizada\"){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/detallepagoxcita?id=${idcita}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();  \r\n                                formulariofactura(resultado, tr);\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })();  \r\n                }\r\n            });\r\n        });\r\n\r\n        function formulariofactura(resultado, tr){\r\n            console.log(resultado);\r\n            const {id, idcita, recibido, devolucion, fecha_pago, hora_pago, dcto, valordcto, valorpromo, valor_servicio, total} = resultado;\r\n            console.log(recibido);\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Detalle Del Pago',\r\n                html: `\r\n                    <h4 class=\"orden\">App Barber</h4>\r\n                    <div class=\"recibo\">\r\n                        <p class=\"recibo__titulo\">Nº De Pago: ${id}</p>\r\n                        <p class=\"recibo__titulo\">Orden Cita: ${idcita}</p>\r\n                        <div class=\"recibo__datos\">\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Cliente:</p>\r\n                                <p class=\"recibo__texto\">${tr.children[1].textContent}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">profesional:</p>\r\n                                <p class=\"recibo__texto\">${tr.children[4].textContent}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">servicio:</p>\r\n                                <p class=\"recibo__texto\">${tr.children[3].textContent}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"recibo__datos\">\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Fecha:</p>\r\n                                <p class=\"recibo__texto\">${fecha_pago}, ${hora_pago}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Valor Servicio:</p>\r\n                                <p class=\"recibo__texto\">$${valor_servicio}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Recibido:</p>\r\n                                <p class=\"recibo__texto\">$${recibido}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Devolucion:</p>\r\n                                <p class=\"recibo__texto\">$${devolucion}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Promo Aplicado:</p>\r\n                                <p class=\"recibo__texto\">$${valorpromo}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Dcto Manual:</p>\r\n                                <p class=\"recibo__texto\">$${valordcto}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Total:</p>\r\n                                <p class=\"recibo__texto\">$${total}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>`,\r\n                width: 'auto',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Anular Pago'\r\n            }).then((result) => {\r\n                if (result.isConfirmed){\r\n                    Swal.fire({\r\n                        customClass: {\r\n                            confirmButton: 'sweetbtnconfirm',\r\n                            cancelButton: 'sweetbtncancel'\r\n                        },\r\n                        title: 'Desea anular el pago?',\r\n                        showCancelButton: true,\r\n                        confirmButtonText: 'Si',\r\n                        cancelButtonText: 'No',\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            anularpagofact(id).then(r=>{\r\n                                if(r){\r\n                                    actualizarfilacita(tr);\r\n                                    Swal.fire('Anulado!', '', 'success')\r\n                                }\r\n                                else{\r\n                                    Swal.fire('No se permite de dias anteriores!', '', 'error')\r\n                                }\r\n                            });\r\n                        } \r\n                      })\r\n                } \r\n              }); ////// fin Swal //////\r\n        } ////////fin funcion formulariofactura ////////\r\n\r\n        async function anularpagofact(id){\r\n            try {\r\n                const url = `/admin/api/anularpagoxcita?id=${id}`;\r\n                const respuesta = await fetch(url); \r\n                const resultado = await respuesta.json();  \r\n                return resultado; \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function actualizarfilacita(tr){\r\n            tr.children[7].textContent = \"Pendiente\";\r\n            tr.classList.remove('tr-resaltar');\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n\r\n    //////////////////// los skills de los empleados //////////////////////\r\n    if(document.querySelector('.formulario__fieldset--servicios')){\r\n        const divcampostags1 = document.querySelector('.pagina1 .formulario__campostags'); //div en donde se carga los skills y el select de servicios en crear empleado\r\n        const divcampostags2 = document.querySelector('.pagina4 .formulario__campostags'); //div en donde se carga los skills y el select de servicios en actualizar empleado\r\n        const tagselect1 = document.querySelector('.pagina1 .formulario__tagselect'); //select de los servicios\r\n        const tagselect2 = document.querySelector('.pagina4 .formulario__tagselect'); //select de los servicios\r\n        const tagsinputhidden1 = document.querySelector('.pagina1 [name=\"servicios\"]'); //input oculto donde se carga los id de los servicios\r\n        const tagsinputhidden2 = document.querySelector('.pagina4 [name=\"servicios\"]'); //input oculto donde se carga los id de los servicios\r\n        const selectemployee = document.querySelector('#selectemployee'); //select del los empleados en update data\r\n        const eliminaremployee = document.querySelector('#eliminaremployee'); //<a>btn liminar</a>\r\n        let totalservicios = [], empleadosapi, tags1 = [], tags2 = [];\r\n\r\n        tagselect1.classList.add('selectskills1');\r\n       // let copytagselect2 = tagselect2.cloneNode(true);\r\n\r\n       //////obtoner todos los servicios del select en arreglo totalservicios///////\r\n        for(let i=1; i<tagselect2.options.length; i++){\r\n            let objservicio = {\r\n                id: tagselect2.options[i].value,\r\n                nombre: tagselect2.options[i].textContent\r\n            }\r\n            totalservicios = [...totalservicios, objservicio];\r\n        }\r\n\r\n        /////////traer todos los empleados con sus skills //////////\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getAllemployee\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                empleadosapi = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n\r\n        tagselect1.addEventListener('change', (e)=>{ //envento al select de los servicios\r\n            tags1 = [...tags1, e.target.options[tagselect1.options.selectedIndex].value];  //en este arreglo guardamos los id de los servicios seleccionados\r\n            \r\n            let nombreservicio = e.target.options[tagselect1.options.selectedIndex].textContent;\r\n            let idservicio = e.target.options[tagselect1.options.selectedIndex].value;\r\n            \r\n            let divtag = mostrarservicio(nombreservicio, idservicio, tagselect1);\r\n            //divcampostags1.insertBefore(divtag, document.querySelector('.pagina1 .formulario__tagselect'));\r\n            divcampostags1.appendChild(divtag);\r\n            tagselect1.options[tagselect1.options.selectedIndex].remove();\r\n            tagselect1.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        });\r\n\r\n        function mostrarservicio(nombreservicio, idservicio, tagselect){\r\n            //const divcampotag = document.createElement('DIV');\r\n            //divcampotag.classList.add('formulario__campotag');\r\n            const divtag = document.createElement('DIV');\r\n            divtag.classList.add('formulario__tag');\r\n            const span = document.createElement('SPAN');\r\n            span.textContent = nombreservicio;\r\n            span.id = idservicio;\r\n            const icon = document.createElement('I');\r\n            icon.classList.add('fa-solid');\r\n            icon.classList.add('fa-rectangle-xmark');\r\n            icon.onclick = function(e){ borrarservicio(e, tagselect); } //al dar click en la x elimina el servicio del empleado\r\n            divtag.appendChild(span);\r\n            divtag.appendChild(icon);\r\n            //divcampotag.appendChild(divtag);\r\n            return divtag;\r\n        }\r\n\r\n        function borrarservicio(e, tagselect){ //al dar click en la x lo muestra en el select, y elimina el servicio o skill elegido del empleado\r\n            let span = e.target.previousElementSibling;\r\n            cargarselects(tagselect, {id: span.id, nombre: span.textContent});\r\n            e.target.parentElement.remove();\r\n\r\n            if(tagselect.classList.contains('selectskills1')){\r\n                tags1 = tags1.filter(tag => tag!=span.id);\r\n            }else{\r\n                tags2 = tags2.filter(tag => tag!=span.id);\r\n            }\r\n            actualizarinputhidden();\r\n        }\r\n\r\n        function actualizarinputhidden(){\r\n            tagsinputhidden1.value = tags1.toString(); // el arreglo tags lo convierte a string\r\n            tagsinputhidden2.value = tags2.toString(); // el arreglo tags lo convierte a string\r\n        }\r\n\r\n//////////////////////\r\n\r\n        selectemployee.addEventListener('change', (e)=>{ //evento al select de empleados en update data\r\n            let empleado;\r\n            const divtags = document.querySelectorAll('.pagina4 .formulario__tag');\r\n            divtags.forEach(divtag => {divtag.remove()}); //eliminar previamente los skills para cargarlos nuevamente \r\n            eliminaremployee.href = \"/admin/adminconfig/eliminaremployee?id=\"+e.target.value;\r\n            empleado = empleadosapi.filter(element => element.id == e.target.value); //obtengo solo un empleado elegido\r\n            cargarempleado(empleado);\r\n        });\r\n\r\n        function cargarempleado(empleado){ //empleado es un arreglo con un solo obj\r\n            const{servicios} = empleado[0]; //servicios es el arreglo con solo skills\r\n            document.querySelector('.pagina4 #nombre').value = empleado[0].nombre;\r\n            document.querySelector('.pagina4 #apellido').value = empleado[0].apellido;\r\n            document.querySelector('.pagina4 #movil').value = empleado[0].movil;\r\n            document.querySelector('.pagina4 #email').value = empleado[0].email;\r\n            document.querySelector('.pagina4 #departamento').value = empleado[0].departamento;\r\n            document.querySelector('.pagina4 #ciudad').value = empleado[0].ciudad;\r\n            document.querySelector('.pagina4 #direccion').value = empleado[0].direccion;\r\n\r\n            tags2 = [];\r\n\r\n            //mostrar todos los servicios en el select//\r\n            totalservicios.forEach(servicio => {\r\n                let i = 1;\r\n                for( ; i<tagselect2.options.length; i++)\r\n                    if(servicio.id == tagselect2.options[i].value)break;\r\n                if(i === tagselect2.options.length)cargarselects(tagselect2, {id: servicio.id, nombre: servicio.nombre});\r\n            });\r\n            \r\n            servicios.forEach(servicio => { //arreglo de servicios\r\n                tags2 = [...tags2, servicio.id];\r\n                let divtag = mostrarservicio(servicio.nombre, servicio.id, tagselect2);\r\n                //divcampostags2.insertBefore(divtag, document.querySelector('.pagina4 .formulario__tagselect'));\r\n                divcampostags2.appendChild(divtag);\r\n                ///quitar del select los servicios que se mostraron//\r\n               //document.querySelector(`.pagina4 .formulario__tagselect option[value=\"${servicio.id}\"`).remove();\r\n                if(tagselect2.querySelector(`option[value=\"${servicio.id}\"`))\r\n                    tagselect2.querySelector(`option[value=\"${servicio.id}\"`).remove(); \r\n            });\r\n            tagselect2.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        }\r\n\r\n        tagselect2.addEventListener('change', (e)=>{ //envento al select de los servicios\r\n            tags2 = [...tags2, e.target.options[tagselect2.options.selectedIndex].value];  //en este arreglo guardamos los id de los servicios seleccionados\r\n            let nombreservicio = e.target.options[tagselect2.options.selectedIndex].textContent;\r\n            let idservicio = e.target.options[tagselect2.options.selectedIndex].value;\r\n            \r\n            let divtag = mostrarservicio(nombreservicio, idservicio, tagselect2);\r\n            //divcampostags2.insertBefore(divtag, document.querySelector('.pagina4 .formulario__tagselect'));\r\n            divcampostags2.appendChild(divtag);\r\n            tagselect2.options[tagselect2.options.selectedIndex].remove();\r\n            tagselect2.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        });\r\n\r\n        function cargarselects(tagselect, skill){\r\n            const option = document.createElement('OPTION');\r\n            option.value = skill.id;\r\n            option.textContent = skill.nombre;\r\n            tagselect.appendChild(option);\r\n        }\r\n\r\n\r\n        /////eliminar empleado//////\r\n        eliminaremployee.addEventListener('click', (e)=>{\r\n            e.preventDefault();\r\n            if(e.target.href.includes('?id=')){\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar el empleado?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed)\r\n                        window.location = e.target.href;\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n})();","(function(){\r\n    if(document.querySelector('.facturacion')){\r\n        let servicios, emplserv;\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json();\r\n                console.log(emplserv);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        const filtrarfecha = document.querySelector('#fecha');\r\n        filtrarfecha.addEventListener('input', (e)=>{\r\n            window.location = `/admin/facturacion/buscarxfecha?pagina=1&fecha=${e.target.value}`;\r\n        });\r\n\r\n        const pagar = document.querySelector('#pagar');\r\n        pagar.addEventListener('click', ()=>{\r\n            formulariopagar();\r\n            obtenermediospago();\r\n            countchars();\r\n        });\r\n        \r\n\r\n        function formulariopagar(){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Pago De Servicio',\r\n                html: `<form class=\"formulario modalform\" action=\"/admin/facturacion\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"total\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"dcto\" value=\"0\">\r\n                            <input type=\"hidden\" name=\"valordcto\" value=\"0\">\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"servicios\">Servicios:</label>\r\n                                <select class=\"formulario__select\" name=\"idservicio\" id=\"selectservice\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar Servicio</option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"empleado\">Empleado:</label>\r\n                                <select class=\"formulario__select\" name=\"idempleado\" id=\"selectemployee\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar Empleado </option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"valor_servicio\">Total a pagar:</label>\r\n                                <input class=\"formulario__input\" type=\"number\" id=\"valor_servicio\" name=\"valor_servicio\" value=\"\" readonly required>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"mediopago\">Elegir Medio De Pago:</label>\r\n                                <select class=\"formulario__select\" name=\"idmediospago\" id=\"mediopago\">\r\n                                    <option value=\"\" disabled selected> Seleccionar medio pago</option>\r\n                                </select> \r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo-2r\">\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"recibido\">Recibido:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"recibido\" name=\"recibido\" value=\"\" required>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"devolucion\">Devolucion:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"devolucion\" name=\"devolucion\" value=\"\" readonly required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nota\">Nota:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nota del pago\" id=\"nota\" name=\"nota\" value=\"\">\r\n                                    <label data-num=\"64\" class=\"count-charts\" for=\"\">64</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Imprimir Recibo: </label>\r\n                                <div class=\"formulario__campo-2r\">\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_si\">Si:</label>\r\n                                        <input id=\"imprimir_si\" type=\"radio\" value=\"1\" name=\"imprimir\">\r\n                                    </div>\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_no\">No:</label>\r\n                                        <input id=\"imprimir_no\" type=\"radio\" value=\"0\" name=\"imprimir\" checked>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Pagar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            document.querySelector('#recibido').addEventListener('input', calculo);\r\n            cargarservicios();\r\n        }\r\n\r\n        ///////////////////////////traer los medios de pago /////////////////////////\r\n        const obtenermediospago = async()=>{\r\n            try {\r\n                const url = \"/admin/api/getmediospago\";\r\n                const respuesta = await fetch(url);\r\n                const mediospago = await respuesta.json();\r\n                cargarmediospago(mediospago);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function cargarmediospago(mediospago){\r\n            const selectmediospago = document.querySelector('#mediopago');\r\n            mediospago.forEach(element => {\r\n                if(element.estado==='1'){\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = element.id;\r\n                    option.textContent = element.mediopago;\r\n                    selectmediospago.appendChild(option);\r\n                }\r\n            });\r\n        }\r\n\r\n        function cargarservicios(){\r\n            const selectservice = document.querySelector('#selectservice');\r\n            servicios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id;\r\n                option.textContent = element.nombre;\r\n                selectservice.appendChild(option);\r\n            });\r\n            selectservice.addEventListener('change', e=>{\r\n                cargarempleado(e.target.value);\r\n                cargarvalorservicio(e);\r\n            });\r\n        }\r\n\r\n        function cargarempleado(id){\r\n            const selectemployee = document.querySelector('#selectemployee');\r\n            const empleados = emplserv.filter(Element => Element.idservicio === id);\r\n            borrarhtml(selectemployee);\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' Seleccionar Empleado ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            selectemployee.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado; //id de la tabla empleados\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;  //id de la tabla empserv\r\n                selectemployee.appendChild(option); \r\n            });\r\n        }\r\n\r\n        function cargarvalorservicio(e){\r\n            const valor_servicio = document.querySelector('#valor_servicio');\r\n            const valorservice = servicios.filter(element =>element.id == e.target.value);\r\n            valor_servicio.value = valorservice[0].precio;\r\n            document.querySelector('#recibido').value = '';\r\n            document.querySelector('#devolucion').value = '';\r\n        }\r\n\r\n        function calculo(){\r\n            const valordcto = document.querySelector('input[name=valordcto]'); //para dcto manual\r\n            const valorservicio = parseInt(document.querySelector('#valor_servicio').value);\r\n            const devolucion = document.querySelector('#devolucion');\r\n            const recibido = parseInt(document.querySelector('#recibido').value); \r\n                if(recibido>=valorservicio){\r\n                   devolucion.value = recibido-valorservicio;\r\n                   valordcto.value = 0;\r\n                   //devolucion.style.color = \"rgb(240, 101, 72)\"; \r\n                }else{\r\n                    devolucion.value = 0;\r\n                    valordcto.value = valorservicio - recibido; //descuento manual\r\n                }\r\n                document.querySelector('input[name=total]').value = recibido - parseInt(devolucion.value);\r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.descpagina3')){\r\n\r\n        const selectemployee = document.querySelector('#selectemployeedate');\r\n        const viewdates = document.querySelector('.viewdates');\r\n        let fechas;\r\n\r\n        (async ()=> {\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\";\r\n                const respuesta = await fetch(url);\r\n                fechas = await respuesta.json();\r\n            } catch (error) {\r\n               console.log(error); \r\n            }\r\n        })();\r\n\r\n\r\n        selectemployee.addEventListener('change', (e)=>{\r\n            const dates = fechas.filter(fecha => fecha.empleado_id == e.target.value);\r\n            limpiarfechas();\r\n            imprimirfechas(dates);\r\n        });\r\n\r\n        function limpiarfechas(){\r\n            while(viewdates.firstChild)viewdates.removeChild(viewdates.firstChild);\r\n        }\r\n\r\n        function imprimirfechas(dates){\r\n            dates.forEach(element => {\r\n                const div = document.createElement('DIV');\r\n                div.classList.add('viewdates__viewdate'); \r\n                div.dataset.id = element.id;\r\n                const parrafo = document.createElement('P');\r\n                parrafo.classList.add('viewdates__fecha');\r\n                parrafo.textContent = element.fecha;\r\n                const icondelete = document.createElement('I');\r\n                icondelete.classList.add('fa-solid', 'fa-rectangle-xmark');\r\n                icondelete.id = element.id;\r\n                icondelete.onclick = eliminarfecha;\r\n                div.appendChild(parrafo);\r\n                div.appendChild(icondelete);\r\n                viewdates.appendChild(div);\r\n            });\r\n        }\r\n\r\n        async function eliminarfecha(e){\r\n            console.log(e.target.id);\r\n            try {\r\n                const url = `/admin/api/deletefechadesc?id=${e.target.id}`;\r\n                const respuesta = await fetch(url); \r\n                const resultado = await respuesta.json();  \r\n                if(resultado == 1)document.querySelector(`i[id=\"${e.target.id}\"]`).parentElement.remove();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.fidelizacion')){\r\n\r\n        const editar = document.querySelectorAll('.programar');\r\n        const eliminar = document.querySelectorAll('.cancelado');\r\n        const sendmsj = document.querySelectorAll('.sendmsj');\r\n        let obj = {\r\n\r\n        }\r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{ \r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                obj.id = e.target.parentElement.dataset.id;\r\n                obj.nombreproducto = tr.children[2].textContent;\r\n                obj.valorservicio = tr.children[3].textContent.slice(1);\r\n                obj.dcto = tr.children[4].textContent;\r\n                obj.valorfinal = tr.children[5].textContent;\r\n                obj.fecha_fin = tr.children[7].textContent;\r\n                formulariocliente(obj);\r\n                //countchars();\r\n            });\r\n        });\r\n\r\n\r\n        function formulariocliente(obj){\r\n    \r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Actualizar Oferta',\r\n                html: `<form class=\"formulario modalform\" action=\"/admin/fidelizacion/editar_dctoxproduct\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${obj.id}\" >\r\n                            \r\n                            <span class=\"nameuser\">${obj.nombreproducto}</span>\r\n                            <span class=\"precio\">Valor: ${obj.valorservicio}</span>\r\n                            <span class=\"nameuser\">Dcto: ${obj.dcto}</span>\r\n                            <span class=\"nameuser\">Valor Final: ${obj.valorfinal}</span>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"tipo\">Tipo De Dcto: </label>\r\n                                <select class=\"formulario__select\" name=\"tipo\" id=\"tipo\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar tipo de dcto</option>\r\n                                    <option value=\"porcentaje\">Porcentaje</option>\r\n                                    <option value=\"valor\">Valor</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"dcto1\">Descuento</label>\r\n                                <input class=\"formulario__input\" id=\"dcto1\" type=\"number\" min=\"\" max=\"\" name=\"dcto1\" value=\"\" disabled required>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"dcto2\" id=\"dcto2Valor\">Valor</label>\r\n                                <input class=\"formulario__input\" id=\"dcto2\" type=\"number\" min=\"\" max=\"\" name=\"dcto2\" value=\"\" readonly required>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"fecha_fin\">Fecha De Finalizacion</label>\r\n                                <input class=\"formulario__input\" type=\"date\" id=\"fecha_fin\" name=\"fecha_fin\" value=\"${obj.fecha_fin}\" requiered>\r\n                            </div>\r\n                            \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Actualizar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            eventos();\r\n        }\r\n\r\n\r\n        function eventos(){\r\n            const dcto1 = document.querySelector('#dcto1');\r\n            const tipodcto = document.querySelector('#tipo');\r\n            tipodcto.addEventListener('change', (e)=>{\r\n                dcto1.disabled = false;\r\n                imprimirvalor(dcto1.value, tipodcto);\r\n            });\r\n    \r\n            dcto1.addEventListener('input', (e)=>{\r\n                imprimirvalor(e.target.value, tipodcto);  \r\n            });\r\n        }\r\n\r\n\r\n        function imprimirvalor(valoringresado, tipodcto){\r\n            const dcto1 = document.querySelector('#dcto1');\r\n            const dcto2 = document.querySelector('#dcto2');\r\n            const dcto2Valor = document.querySelector('#dcto2Valor');\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'porcentaje'){\r\n                dcto1.min = 0;\r\n                dcto1.max = 100;\r\n                dcto2Valor.textContent = \"Valor\";\r\n                if(valoringresado>100)dcto1.value = 100;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((obj.valorservicio*dcto1.value)/100);\r\n            }\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'valor'){\r\n                dcto1.min = 0;\r\n                dcto1.max = obj.valorservicio;\r\n                dcto2Valor.textContent = \"Valor (%)\";\r\n                if(valoringresado>parseInt(obj.valorservicio))dcto1.value = obj.valorservicio;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((dcto1.value*100)/obj.valorservicio);\r\n            }  \r\n        }\r\n\r\n        /////////////// eliminar oferta del cliente ////////////////\r\n\r\n        eliminar.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar la oferta del cliente?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        //Swal.fire('Eliminado', '', 'success');\r\n                        window.location = `/admin/fidelizacion?id=${id}`;\r\n\r\n                    } \r\n                })\r\n            });\r\n        });\r\n\r\n        /////////////////////// enviar msj a clientes ///////////////////////\r\n\r\n        sendmsj.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'clase y metodo de mensaje no configurado!',\r\n                    footer: 'Innovatech quindio'\r\n                  })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        \r\n        /*\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        countchars();*/\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('#dashboardcitas')){//en admin/citas/index.php\r\n        \r\n        const eliminarcitas = document.querySelectorAll('.cancelado');\r\n        const finalizarcitas = document.querySelectorAll('.finalizado');\r\n        let valueservice;\r\n\r\n        ////////////////////////////cancelar o eliminar cita//////////////////////////////\r\n        eliminarcitas.forEach(eliminarcita =>{\r\n            eliminarcita.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const id = tr.children[0].textContent;\r\n                const estado = tr.children[7].textContent;\r\n                if(estado === \"Pendiente\" || estado === \"Out\")cancelarcita(id, tr.children[7]); //se pasa el id de la cita y su estado  \r\n            });\r\n        });\r\n\r\n        function cancelarcita(id, estado){ //funcion para cancelar la cita.\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Cancelar La Cita?',\r\n                text: \"SE CANCELARA LA CITA, PUEDES CREAR UNA NUEVA CUANDO LO DESEES.\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/cancelarcita?id=${id}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();  \r\n                            if(resultado){\r\n                                estado.textContent = \"Cancelado\"; \r\n                                Swal.fire('Cita Cancelada', '', 'success')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })(); \r\n                } \r\n            })\r\n        }\r\n\r\n\r\n        //////////////////////Finalizar clita /////////////////////////////\r\n\r\n        finalizarcitas.forEach(fincita => {\r\n            fincita.addEventListener('click', e=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const estado = tr.children[7].textContent;\r\n                if(estado === \"Pendiente\"){   \r\n                    formulariopagar();\r\n                    obtenermediospago();\r\n                    cargardatoscliente(e);\r\n                }\r\n            });\r\n        });\r\n\r\n        function formulariopagar(){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Terminar Cita',\r\n                html: `<form class=\"formulario modalform\" action=\"/admin/citas/finalizar?pagina=1\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"valor_servicio\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"idempleado\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"valordcto\" value=\"0\" >\r\n                            <input type=\"hidden\" name=\"promodcto\" value=\"0\" >\r\n                            <input type=\"hidden\" name=\"total\" value=\"\" >\r\n\r\n                            <p class=\"orden\"></p>\r\n                            <span class=\"nameuser\"></span>\r\n                            <span class=\"nameservice\"></span>\r\n                            <span class=\"precio\"></span>\r\n\r\n                            <div class=\"\">\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"valorpromodcto\">Aplicar Promocion:</label>\r\n                                <select class=\"formulario__select\" name=\"valorpromo\" id=\"valorpromodcto\">\r\n                                    <option value=\"\" disabled selected> Seleccionar Dcto</option>\r\n                                    <option data-dcto=\"0\" value=\"0\"> Sin Descuento</option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"totalpagar\">Total A Pagar: </label>\r\n                                <input class=\"formulario__input\" type=\"number\" id=\"totalpagar\" name=\"totalpagar\" value=\"\" readonly required>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"mediopago\">Elegir Medio De Pago:</label>\r\n                                <select class=\"formulario__select\" name=\"idmediospago\" id=\"mediopago\">\r\n                                    <option value=\"\" disabled selected> Seleccionar medio pago</option>\r\n                                </select> \r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo-2r\">\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"recibido\">Recibido:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"recibido\" name=\"recibido\" value=\"\" required>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"devolucion\">Devolucion:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"devolucion\" name=\"devolucion\" value=\"\" readonly required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nota\">Nota:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nota del pago\" id=\"nota\" name=\"nota\" value=\"\">\r\n                                    <label data-num=\"64\" class=\"count-charts\" for=\"\">64</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Imprimir Recibo: </label>\r\n                                <div class=\"formulario__campo-2r\">\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_si\">Si:</label>\r\n                                        <input id=\"imprimir_si\" type=\"radio\" value=\"1\" name=\"imprimir\">\r\n                                    </div>\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_no\">No:</label>\r\n                                        <input id=\"imprimir_no\" type=\"radio\" value=\"0\" name=\"imprimir\" checked>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n    \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Pagar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            document.querySelector('#recibido').addEventListener('input', calculo);\r\n            countchars();\r\n        }\r\n\r\n        ///////////////////////////traer los medios de pago /////////////////////////\r\n        const obtenermediospago = async()=>{\r\n            try {\r\n                const url = \"/admin/api/getmediospago\";\r\n                const respuesta = await fetch(url);\r\n                const mediospago = await respuesta.json();\r\n                cargarmediospago(mediospago);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function cargarmediospago(mediospago){\r\n            const selectmediospago = document.querySelector('#mediopago');\r\n            mediospago.forEach(element => {\r\n                if(element.estado==='1'){\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = element.id;\r\n                    option.textContent = element.mediopago;\r\n                    selectmediospago.appendChild(option);\r\n                }\r\n            });\r\n        }\r\n\r\n        function cargardatoscliente(e){\r\n            const promodcto = e.target.parentElement.dataset.promodcto||0; //dcto en porcentaje\r\n            const valorpromodcto = e.target.parentElement.dataset.promodctovalor||0;  //dcto de promocion en valor\r\n            const tr = e.target.parentElement.parentElement.parentElement;\r\n            const idcita = tr.children[0].textContent;\r\n            const nombre = tr.children[1].textContent;\r\n            const servicio = tr.children[3].textContent;\r\n            valueservice = tr.children[3].dataset.precio;\r\n\r\n            document.querySelector('input[name=id]').value = idcita;  //id de la cita\r\n            document.querySelector('input[name=valor_servicio]').value = valueservice;\r\n            document.querySelector('input[name=idempleado]').value = tr.children[4].dataset.idempleado;\r\n            document.querySelector('.orden').textContent = 'Orden: '+idcita;\r\n            document.querySelector('.nameuser').textContent = nombre;\r\n            document.querySelector('.nameservice').textContent = servicio;\r\n            document.querySelector('.precio').textContent = 'Precio: $'+valueservice;\r\n\r\n            const selectdcto = document.querySelector('#valorpromodcto');\r\n            if(parseInt(promodcto)){\r\n                const option = document.createElement('option');\r\n                option.textContent = promodcto+'%'+' - '+'$'+valorpromodcto;\r\n                option.value = valorpromodcto; //dcto en valor\r\n                option.dataset.dcto = promodcto;\r\n                selectdcto.appendChild(option);\r\n            }\r\n            selectdcto.addEventListener('change', aplicarpromo);\r\n            const totalpagar = document.querySelector('#totalpagar');\r\n            totalpagar.value = valueservice;\r\n            totalpagar.addEventListener('input', calculo);\r\n        }\r\n\r\n        function aplicarpromo(e){\r\n            document.querySelector('#totalpagar').value = valueservice; //se reinicia el valor original del servicio\r\n            const valorpromodcto = parseInt(e.target.value);\r\n            const totalpagar = parseInt(document.querySelector('#totalpagar').value);\r\n            document.querySelector('#totalpagar').value = totalpagar - valorpromodcto;\r\n            const promodcto = e.target.options[this.options.selectedIndex].dataset.dcto;\r\n            document.querySelector('input[name=promodcto]').value = promodcto;  //input hidden para enviar dcto en porcentaje a bd\r\n            calculo();\r\n        }\r\n\r\n        function calculo(){\r\n            const valordcto = document.querySelector('input[name=valordcto]'); //para dcto manual\r\n            const inputtotalpagar = parseInt(document.querySelector('#totalpagar').value);\r\n            const devolucion = document.querySelector('#devolucion');\r\n            const recibido = parseInt(document.querySelector('#recibido').value); \r\n            if(recibido>=inputtotalpagar){\r\n                devolucion.value = recibido-inputtotalpagar;\r\n                //devolucion.style.color = \"rgb(240, 101, 72)\"; \r\n                valordcto.value = 0; //descuento manual\r\n            }else{\r\n                devolucion.value = 0;\r\n                valordcto.value = inputtotalpagar - recibido; //descuento manual\r\n            }\r\n            document.querySelector('input[name=total]').value = recibido - parseInt(devolucion.value);\r\n        }\r\n\r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n\r\n    const grafica = document.querySelector('#servicios-grafica');\r\n    if(grafica){\r\n       \r\n        let fechas, cierretotal, totalcitas, citasrealizadas, citascancelado, valorcitas=0; citas100=0, progreso=440;\r\n        (async ()=>{\r\n            try {\r\n                const url1 = \"/admin/api/alldays\"; //llamado a la API REST\r\n                const respuesta1 = await fetch(url1); \r\n                const resultado1 = await respuesta1.json(); \r\n                const url2 = \"/admin/api/totalcitas\";\r\n                const respuesta2 = await fetch(url2); \r\n                const resultado2 = await respuesta2.json(); \r\n            \r\n                resultado1.reverse();\r\n                fechas = resultado1.map(date => date.fecha);\r\n                cierretotal = resultado1.map(total => total.totaldia);\r\n\r\n                citascancelado = resultado2.filter(Element=>Element.estado==='Cancelado');\r\n                totalcitas = resultado2.length - citascancelado.length;\r\n                \r\n                citasrealizadas = resultado2.filter(Element=>Element.estado==='Finalizada');\r\n\r\n                valorcitas = citasrealizadas.reduce((total, Element)=>total+parseInt(Element.facturacion.total), 0);\r\n                if(totalcitas)citas100 = (citasrealizadas.length*100)/totalcitas;\r\n                progreso = (440*citas100)/100;\r\n\r\n                printgrafica1();\r\n                animacioncircle();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function printgrafica1(){\r\n            let a = ['#ea580c', '#84cc16', '#22d3ee', '#a855f7', '#ef4444', '#14b8a6', '#db2777', '#e11d48', '#7e22ce'];\r\n            //for(let i=0; i<(resultado.length-9); i++)a=[...a, a[i]];     //si los programas supera 9 se repite color \r\n\r\n            const ctx = document.getElementById('servicios-grafica').getContext('2d');\r\n            \r\n            new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: fechas,//resultado.map(programa=>programa.nombre),\r\n                    datasets: [{\r\n                    label: '# of Votes',\r\n                    data: cierretotal,//resultado.map(programa=>programa.total),\r\n                    borderColor: '#00c8c2',\r\n                    //backgroundColor: ['#ea580c', '#84cc16', '#22d3ee', '#a855f7'],\r\n                    backgroundColor: '#ea580c',\r\n                    //tension: 0.3,\r\n                    //stepped: 'middle',\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                    plugins: {legend: {display: false } } //elimina el label del dataset\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function animacioncircle(){\r\n            const circle = document.querySelector('circle');\r\n            circle.style.strokeDashoffset = 440-progreso;\r\n            circle.classList.add('animacion');\r\n\r\n            const dailyearning = document.querySelector('.dailyearning').textContent = '$'+valorcitas;\r\n            const numero = document.querySelector('.rueda .numero');\r\n            numero.textContent = Math.round(citas100)+'%';\r\n        }\r\n        \r\n\r\n    } //cierre del if\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.pagina2malla')){\r\n        const selectemployee = document.querySelector('#selectempleadomalla');\r\n        let malla;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla de todos los empleados\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();    \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        selectemployee.addEventListener('change', (e)=>{\r\n            const turnosemployee = malla['empleado_'+e.target.value]; //arreglo de obj donde cada obj es el dia con su turno\r\n            limpiarmalla(); //limpiar malla previamente\r\n            if(turnosemployee)\r\n                turnosemployee.forEach(dia => {\r\n                    const {inicioturno, inidescanso, findescanso, finturno} = dia;\r\n                    let horas = new Array(inicioturno, inidescanso, findescanso, finturno);\r\n                    const radio = document.querySelector(`input[data-id=\"${dia.id_dia}\"]`);\r\n                    radio.checked = true;\r\n                    for(let i=0; i<4; i++)radio.parentElement.nextElementSibling.children[i].disabled = false;\r\n\r\n                    document.querySelector(`#entrada[data-id=\"${dia.id_dia}\"]`).value = inicioturno.substring(0,2)+':'+inicioturno.substring(2,4);\r\n                    let select = document.querySelector(`#inidescanso[data-id=\"${dia.id_dia}\"]`);\r\n                    \r\n                    for(let i = 0; i<3; i++){\r\n                        putoptions(select, parseInt(horas[i])); //llenar las options de los input select\r\n                        for(let j = 0; j<select.options.length; j++)\r\n                            if(select.options[j].value == parseInt(horas[i+1]))select.options[j].selected = true;\r\n                        select = select.nextElementSibling;\r\n                    }\r\n                });  \r\n        });\r\n\r\n        function putoptions(select, hora){\r\n            for(let i = 0; hora<2300; i++){\r\n                let option = document.createElement('OPTION');\r\n                hora+=30;\r\n                if(hora%100 == 60)hora+=40;\r\n                option.value = hora;\r\n                option.textContent = (hora%100==0)?parseInt(hora/100)+':00':parseInt(hora/100)+':'+hora%100;\r\n                select.appendChild(option);\r\n            }\r\n        }\r\n\r\n        function limpiarmalla(){\r\n            const elemntcheckbox = document.querySelectorAll('.malla INPUT[type=\"checkbox\"]');\r\n            elemntcheckbox.forEach(Element => {\r\n                if(Element.checked){ Element.checked = false;\r\n                    for(let i=0; i<4; i++){\r\n                        Element.parentElement.nextElementSibling.children[i].disabled = true;\r\n                        if(i===0){\r\n                            Element.parentElement.nextElementSibling.children[0].value = '';\r\n                        }else{\r\n                            Element.parentElement.nextElementSibling.children[i].options[0].selected = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.headerapp__menu')){\r\n        const btnmenu = document.querySelector('#btnmenu');\r\n        const navmenu = document.querySelector('.headerapp__navmenu');\r\n        btnmenu.addEventListener('click', ()=>{\r\n            navmenu.classList.toggle('mostrar');\r\n        });\r\n    }\r\n\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.promociones')){\r\n        console.log(\"promociones\");\r\n\r\n    }\r\n})();","(function(){\r\n    \r\n    const servicios = document.querySelectorAll('#servicio');\r\n    const servicios__eliminar = document.querySelectorAll('.servicios__eliminar'); //<a></a>\r\n    \r\n    servicios__eliminar.forEach(Element=>{ //para eliminar los servicios\r\n        Element.addEventListener('click', (e)=>{\r\n\r\n            let id;\r\n           e.target.href = \"/admin/servicios/eliminar\";\r\n           e.preventDefault();\r\n         \r\n           if(e.target.tagName === \"I\"){ \r\n               id = e.target.parentElement.parentElement.dataset.id;\r\n            }else{\r\n                id = e.target.parentElement.dataset.id;\r\n            }\r\n            //window.location = e.target.href;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea eliminar el servcio?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire('Eliminado', '', 'success') \r\n\r\n                    \r\n                    async function eliminarservicio(){ //\r\n                        const datos = new FormData();\r\n                        console.log(id);\r\n                        datos.append('id', id);\r\n                        try {\r\n                            const url = \"/admin/api/eliminarservicio\";\r\n                            const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                            const resultado = await respuesta.json(); \r\n                            console.log(resultado); \r\n\r\n                            const divservicio = document.querySelector(`div[data-id=\"${id}\"]`);\r\n                            divservicio.remove();\r\n                            return resultado;\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n\r\n                    eliminarservicio();\r\n                } \r\n            })\r\n    \r\n        });\r\n    });\r\n\r\n    \r\n    servicios.forEach(Element =>{   // para editar los servicios\r\n        Element.addEventListener('click', (e)=>{\r\n            \r\n            if(e.target.tagName === \"DIV\" ||e.target.tagName === \"P\"|| e.target.tagName === \"H4\" || e.target.tagName === \"SPAN\"){\r\n    \r\n                let nombre, precio, duracion, id, user;\r\n                \r\n                id = id = e.target.dataset.id;\r\n                user = e.target.dataset.user;\r\n                if(e.target.tagName === \"P\"|| e.target.tagName === \"H4\"){\r\n                    id = e.target.parentElement.dataset.id;\r\n                    user = e.target.parentElement.dataset.user;\r\n                }\r\n                if(e.target.tagName === \"SPAN\"){\r\n                    id = e.target.parentElement.parentElement.dataset.id;\r\n                    user = e.target.parentElement.parentElement.dataset.user;\r\n                }\r\n\r\n                if(parseInt(user)>1){\r\n                    nombre = document.querySelector(`div[data-id=\"${id}\"] h4`).textContent;\r\n                    precio = parseInt(document.querySelector(`div[data-id=\"${id}\"] #precio`).textContent);\r\n                    duracion = parseInt(document.querySelector(`div[data-id=\"${id}\"] #duracion`).textContent);\r\n\r\n                    Swal.fire({\r\n                        customClass: {\r\n                            confirmButton: 'sweetbtnconfirm',\r\n                            cancelButton: 'sweetbtncancel'\r\n                        },\r\n                        title: 'Desea editar el servcio?',\r\n                        html: `<form class=\"formulario\" action=\"/admin/servicios/editar\" method=\"POST\">\r\n                                    <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n                                    <div class=\"formulario__campo\">\r\n                                        <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                        <div class=\"formulario__dato\">\r\n                                            <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del servicio\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                            <label data-num=\"25\" class=\"count-charts\" for=\"\">25</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div class=\"formulario__campo\">\r\n                                        <label class=\"formulario__label\" for=\"precio\">Precio:</label>\r\n                                        <div class=\"formulario__dato\">\r\n                                            <input class=\"formulario__input\" type=\"number\" placeholder=\"Precio del servicio\" id=\"precio\" name=\"precio\" value=\"${precio}\" requiered>\r\n                                            <label for=\"\">$</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"formulario__campo\">\r\n                                        <label class=\"formulario__label\" for=\"duracion\">Duracion:</label>\r\n                                        <div class=\"formulario__dato\">\r\n                                            <input class=\"formulario__input\" type=\"number\" min=\"10\" max=\"120\" placeholder=\"Duracion en minutos del servicio\" id=\"duracion\" name=\"duracion\" value=\"${duracion}\" disabled>\r\n                                            <label for=\"\">min</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <input class=\"formulario__submit--servicio\" type=\"submit\" value=\"Actualizar\">\r\n                            </form>`,\r\n                        showCancelButton: true,\r\n                        showConfirmButton: false,\r\n                        cancelButtonText: 'Cancelar',\r\n                        \r\n                    });\r\n                    countchars();\r\n                }\r\n            } //cierre del if   \r\n        }); //cierre de addeventlistener\r\n    }); //cierre del foreach\r\n\r\n    \r\n    //////////////// funcion contadores de caracteres /////////////////////\r\n    countchars();      //// se aplicado casi de manera general\r\n    function countchars(){\r\n        const numinput = document.querySelectorAll('.count-charts');  \r\n        numinput.forEach(element =>{ //element es cada label\r\n            element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n            element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                element.textContent = element.dataset.num-e.target.value.length;\r\n                  \r\n                if(element.dataset.num-e.target.value.length <= 0){\r\n                    let cadena = e.target.value.slice(0, element.dataset.num);\r\n                    e.target.value = cadena;\r\n                    element.textContent = 0;\r\n                }\r\n            });\r\n        });\r\n    }\r\n     \r\n    if(document.querySelector('.alerta')){  //se aplica de manera global\r\n        setTimeout(() => {\r\n            document.querySelector('.alerta').remove();\r\n        }, 5000);\r\n    }\r\n    \r\n    })();","window.swiper = new Swiper('swiper', {\r\n    el: '.slider__contenido',\r\n    slideClass: 'slider__slide',\r\n    createElements: true,\r\n    autoplay: {\r\n        delay: 5000\r\n    },\r\n    loop: true,\r\n});\r\n"]}