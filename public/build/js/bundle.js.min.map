{"version":3,"sources":["dashboard.js","citas.js","clientes.js","configuracion.js","dash_cliente.js","dash_cliente_assign.js","empleados.js","facturacion.js","fechadesc.js","fidelizacion.js","finalizcita.js","graficas.js","malla.js","paginaini.js","servicios.js"],"names":["scrolnav","document","querySelectorAll","forEach","enlace","classList","contains","querySelector","firstElementChild","nextElementSibling","textContent","scrollIntoView","behavior","filtros","selectfiltro","selectfecha","crearcita","programar","addEventListener","idprofesional","options","selectedIndex","value","Swal","fire","customClass","title","html","showCancelButton","showConfirmButton","e","window","location","target","usuarios","servicios","emplserv","fechadesc","malla","citas","onlyfechadesc","onlymalla","onlycitas","horasdisponibles","horacitas","formulariocliente","titulo","submit","action","usuario","confirmButton","cancelButton","cargaservicios","selectservicios","element","option","createElement","id","nombre","appendChild","cargarprofesionales","professionals","empleados","filter","Element","idservicio","borrarhtml","disabled","selected","idempleado","dataset","inputfecha","fechaactual","Date","year","getFullYear","mes","getMonth","dia","getDate","deshabilitarfecha","min","deshabilitarfechaanterior","eventofecha","evento","validarfechaydia","getUTCDay","fecha","empleado_id","cita","fecha_fin","estado","some","r2","id_dia","length","horario1","horario2","inicioturno","inidescanso","findescanso","finturno","map","substring","hora_fin","i","calcularhorarios","console","log","divhoras","hora","divhora","add","parrafohora","onclick","seleccionarhora","imprimirhorashtml","gethoras","horaInicio","horaFin","horarioActual","horarioFinal","getHours","toString","padStart","minutos","getMinutes","includes","setTime","getTime","deshabilthoraprevia","remove","parentElement","elemento","removeChild","url","respuesta","fetch","json","error","preventDefault","inputusuario","apellido","cargarusuarios","previousElementSibling","tr","idcita","children","nameservice","namepro","fechacita","horacita","namecliente","selectservice","inputdate","cargarcita","crearcliente","editar","eliminar","objform","movil","email","countchars","num","cadena","slice","confirmButtonText","cancelButtonText","then","result","isConfirmed","negocios","label","barra","bar","negocio","toFixed","style","width","btns_nav_empleados","btn","pagina","this","checked","entrada","puthoras","nextselect","firstChild","subhora","split","parseInt","servicio","profesionales","selectdate","eliminarcitas","setDate","eliminarcita","tiempocita","hoy","text","cancelarcita","select_date","reservarcita","async","datos","FormData","id_empserv","id_servicio","append","toLocaleTimeString","method","body","enviarcita","setTimeout","reload","divcampostags1","divcampostags2","tagselect1","tagselect2","tagsinputhidden1","tagsinputhidden2","selectemployee","eliminaremployee","empleadosapi","totalservicios","tags1","tags2","objservicio","mostrarservicio","nombreservicio","tagselect","divtag","span","icon","cargarselects","tag","actualizarinputhidden","borrarservicio","skill","empleado","href","departamento","ciudad","direccion","cargarempleado","calculo","devolucion","inputtotal","recibido","total","valorservice","precio","cargarvalorservicio","cargarservicios","viewdates","fechas","eliminarfecha","dates","limpiarfechas","div","parrafo","icondelete","imprimirfechas","obj","descripcion","dcto","finalizarcitas","valueservice","aplicardcto","fincita","dctogeneral","selectdcto","cargardatoscliente","cierretotal","totalcitas","citasrealizadas","valorcitas","citas100","progreso","url1","respuesta1","resultado1","url2","respuesta2","resultado2","reverse","date","totaldia","reduce","facturacion","ctx","getElementById","getContext","Chart","type","data","labels","datasets","borderColor","backgroundColor","scales","y","beginAtZero","plugins","legend","display","printgrafica1","circle","strokeDashoffset","Math","round","animacioncircle","putoptions","select","turnosemployee","horas","Array","radio","j","btnmenu","navmenu","toggle","tagName","resultado","eliminarservicio","duracion"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {scrolnav(); });\r\n\r\nfunction scrolnav() {\r\n    const enlaces = document.querySelectorAll('.dashboard__menu a');  //selecicona el elemento nav y sus enelaces \r\n    enlaces.forEach( function(enlace){  //me recorre los enlaces del elemento NAV seleccionado \r\n        if(enlace.classList.contains('dashboard__enlace--actual')){\r\n            const seccion = document.querySelector('.'+enlace.firstElementChild.nextElementSibling.textContent);\r\n            seccion.scrollIntoView({behavior: 'smooth'});\r\n        } \r\n    });\r\n}","(function(){\r\n\r\n    if(document.querySelector('#dashboardcitas')){//en admin/citas/index.php\r\n        \r\n        const filtros = document.querySelector('#filtros-personalizado');\r\n        const selectfiltro = document.querySelector('#selectprofesional');\r\n        const selectfecha = document.querySelector('#fecha'); //filtro de solo fechas\r\n        const crearcita = document.querySelector('#crearcita');\r\n        const programar = document.querySelectorAll('.programar');\r\n    \r\n        filtros.addEventListener('click', ()=>{\r\n            let idprofesional = selectfiltro.options[selectfiltro.options.selectedIndex].value; //toma el id del select profesional\r\n    \r\n            if(idprofesional){\r\n                Swal.fire({\r\n                    customClass: {\r\n                    //confirmButton: 'sweetbtnconfirm',\r\n                    // cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Consulta el profesional por fecha:',\r\n                    html: `<form class=\"formulario\" action=\"/admin/citas/consultaxprofesxfecha?pagina=1\" method=\"POST\">    \r\n                                <div class=\"formulario__campo\">\r\n                                    <input class=\"formulario__input\" id=\"fecha\" type=\"date\" name=\"fecha\" value=\" \" required>\r\n                                </div>\r\n                                <input type=\"hidden\" name=\"profesional\" value=\"${idprofesional}\">\r\n                                <input class=\"btnsmall\" type=\"submit\" value=\"Consultar\">\r\n                        </form>`,\r\n                    showCancelButton: false,\r\n                    showConfirmButton: false,\r\n                    //confirmButtonText: 'Aceptar',\r\n                    //cancelButtonText: 'Cancelar',\r\n                })/*.then((result) => {\r\n                    if (result.isConfirmed) {\r\n                    Swal.fire('Actualizando', '', 'success')\r\n                    //modificar el servicio\r\n                    } \r\n                })*/\r\n            }\r\n        });\r\n\r\n        selectfecha.addEventListener('input', e => {\r\n            /*(async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('fecha', e.target.value);\r\n                try {\r\n                    const url = \"/admin/api/filtroxfecha\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    console.log(resultado);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();*/\r\n            window.location = `/admin/citas/filtroxfecha?pagina=1&fecha=${e.target.value}`;\r\n        });\r\n\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        let horasdisponibles = [], horacitas = [];\r\n        //const divhoras = document.querySelector('#horas'); //donde se poenen las horas\r\n\r\n        let usuarios, servicios, emplserv, fechadesc, malla, citas;\r\n        let onlyfechadesc, onlymalla, onlycitas;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/allclientes\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                usuarios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n                \r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\"; //llamado a la API REST para trer todas las fechas de descanso de todos los empleados.\r\n                const respuesta = await fetch(url); \r\n                fechadesc = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        \r\n        crearcita.addEventListener('click', (e)=>{ ////crear cita\r\n            e.preventDefault();\r\n            const usuario = `<div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"servicio\">Seleccione Usuario: </label>\r\n                                <select class=\"formulario__select\" name=\"id_usuario\" id=\"usuario\" required>\r\n                                    <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                </select>\r\n                            </div>`;\r\n            formulariocliente('Crear Cita', 'Crear', '/admin/citas/crear?pagina=1', usuario);\r\n            cargarusuarios();\r\n            cargaservicios();\r\n            eventofecha();\r\n        });\r\n        programar.forEach(element =>{\r\n            element.addEventListener('click', (e)=>{ ///programar cita\r\n                const usuario = `<span class=\"namecliente\"></span><span id=\"horacita\"></span>\r\n                                <input type=\"hidden\" id=\"id\" name=\"id\" value=\"\" >`;\r\n                if(e.target.parentElement.parentElement.previousElementSibling.textContent === \"Pendiente\")\r\n                {   formulariocliente('Reprogramar Cita A:', 'Enviar', '/admin/citas?pagina=1', usuario);\r\n                    cargarcita(e.target);\r\n                }\r\n            });\r\n        });\r\n        \r\n\r\n        function formulariocliente(titulo, submit, action, usuario){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form class=\"formulario formclientes\" action=\"${action}\" method=\"POST\">\r\n                            <input type=\"hidden\" id=\"id_empserv\" name=\"id_empserv\" value=\"\" >\r\n                            <input type=\"hidden\" id=\"hora_fin\" name=\"hora_fin\" value=\"\" >\r\n\r\n                            <div class=\"\">\r\n                                ${usuario}\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"servicio\">Seleccione Servicio: </label>\r\n                                    <select class=\"formulario__select\" name=\"servicio\" id=\"servicios\" required>\r\n                                        <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"profesional\">Seleccione Profesional: </label>\r\n                                    <select class=\"formulario__select\" name=\"profesional\" id=\"professionals\" required>\r\n                                        <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"fecha\">Seleccionar Fecha:</label>\r\n                                    <input class=\"formulario__input\" id=\"date\" name=\"fecha_fin\" type=\"date\" disabled required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"cliente__campohoras\" id=\"horas\">\r\n\r\n                            </div>\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: true,\r\n                showConfirmButton: false,  \r\n            });\r\n            //deshabilitarfechaanterior();\r\n        }\r\n\r\n\r\n        function cargarusuarios(){\r\n            const inputusuario = document.querySelector('#usuario');\r\n            usuarios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id;\r\n                option.textContent = element.nombre+' '+element.apellido;\r\n                inputusuario.appendChild(option);\r\n            }); \r\n        }\r\n\r\n        function cargaservicios(){\r\n            const selectservicios = document.querySelector('#servicios');\r\n            servicios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id;\r\n                option.textContent = element.nombre;\r\n                selectservicios.appendChild(option);\r\n            });\r\n            selectservicios.addEventListener('change', e=>cargarprofesionales(e.target.value));\r\n        }\r\n\r\n        function cargarprofesionales(id){\r\n            const professionals = document.querySelector('#professionals');\r\n            const empleados = emplserv.filter(Element => Element.idservicio === id);\r\n            borrarhtml(professionals);\r\n            document.querySelector('#date').disabled = true;\r\n            borrarhtml(document.querySelector('#horas'));\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' -Selecionar- ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            professionals.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado;\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;\r\n                professionals.appendChild(option); \r\n            });\r\n            professionals.addEventListener('change', (e)=>{\r\n                document.querySelector('#date').disabled = false;\r\n                document.querySelector('#date').value = '';\r\n                deshabilitarfechaanterior();\r\n                borrarhtml(document.querySelector('#horas')); //borra en donde se ponen las horas\r\n            });\r\n        }\r\n\r\n        function eventofecha(){\r\n            const select_date = document.querySelector('#date');\r\n            select_date.addEventListener('input', (evento)=> {\r\n                /////////borrar el campo de las horas//////////\r\n                const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n                borrarhtml(divhoras);\r\n                \r\n                const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana\r\n                validarfechaydia(evento.target.value, dia.getUTCDay());\r\n            });\r\n        }\r\n\r\n        \r\n        function validarfechaydia(fecha, dia){\r\n            //al seleccionar fecha ya se ha seleccionado el profesional, y el profesional me contiene su id y el id de la tabla empserv\r\n            const professionals = document.querySelector('#professionals');\r\n            const idempleado = professionals.options[professionals.options.selectedIndex].value;\r\n             ////cargar el input type hidden name=id_empserv\r\n             document.querySelector('#id_empserv').value = professionals.options[professionals.options.selectedIndex].dataset.id;\r\n\r\n            onlymalla = malla[`empleado_${idempleado}`]; //obtiene solo la malla de ese empleado\r\n            onlyfechadesc = fechadesc.filter(element => idempleado === element.empleado_id);\r\n            onlycitas = citas.filter(cita => (cita.idempleado === idempleado&&cita.fecha_fin === fecha&&cita.estado === \"Pendiente\")); //obtengo las citas deacuerdo al profesional y fecha seleccionada y pendiente\r\n\r\n            const r1 = onlyfechadesc.some(element => element.fecha === fecha);\r\n            if(r1){\r\n                Swal.fire(\r\n                    'Este dia no esta disponible!',\r\n                    'You clicked the button!',\r\n                    'error'\r\n                  )\r\n            }else{\r\n                const r2 = onlymalla.filter(element => element.id_dia == (dia===0?7:dia));\r\n                if(r2.length){ //es pq el dia si esta en la malla\r\n                    gethoras(r2[0]); //se envia solo el dia seleccionado (obj)\r\n                }\r\n                else{ //dia no esta en la malla\r\n                    Swal.fire(\r\n                        'Este dia no esta disponible!',\r\n                        'You clicked the button!',\r\n                        'error'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        function gethoras(r2){\r\n            let horario1 = [], horario2 = [];\r\n\r\n            horario1 = [...horario1, r2.inicioturno, r2.inidescanso];\r\n            horario2 = [...horario2, r2.findescanso, r2.finturno];\r\n\r\n            // me traigo un arreglo de la tabla citas de la DB con su hora segun fecha seleccionada y profesional seleccionado\r\n            //// comparo cada hora del arreglo traio con r2.iniciodescanso y si es menor lo agrego al arreglo horario1\r\n            ///luego comparo con r2.finturno y si es mayor lo agrego a arreglo horario2\r\n\r\n            horario1 = horario1.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            horario2 = horario2.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            //horacitas = onlycitas.map(element =>  element.hora_fin.slice(3)); //obtengo las horas formato 24 de la bd segun fecha y profesional\r\n            horacitas = onlycitas.map(element =>  element.hora_fin);\r\n\r\n            for(let i = 0; i<horario1.length-1; i++){\r\n            calcularhorarios(horario1[i], horario1[i+1]);\r\n            }\r\n            for(let i = 0; i<horario2.length-1; i++)\r\n            calcularhorarios(horario2[i], horario2[i+1]);\r\n            \r\n           console.log(horasdisponibles);\r\n           //podemos validar horasdisponibles si esta vacio es pq no hay espacion o agenda llena\r\n           //mostrar alerta y no permitir pedir cita, por ahora se valida en backend\r\n           imprimirhorashtml();\r\n        }\r\n\r\n        function calcularhorarios(horaInicio, horaFin) {\r\n            const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n            const horarioFinal = new Date(`01/01/2000 ${horaFin}`);\r\n          \r\n            while (horarioActual < horarioFinal) {\r\n              const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n              const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n              //console.log(`${hora}:${minutos}`);\r\n              const validate = horacitas.includes(`${hora}:${minutos}`);\r\n              if(!validate){\r\n                  //hora1 = ${hora}:${minutos};\r\n                  //horatemp = hora1; + min-servicio, \r\n                  //preguntar si horatemp es menor o igual al elemento del arreglo horacitas\r\n                  //si es si\r\n                  //imprimir hora1, hacer hora1 = horatemp;\r\n                  //si es no\r\n                  //hora1 = elemento del arreglo + su duracion-serv\r\n                  //aumentar en uno al arreglo de horacitas\r\n                  //valido arribo si es si, vuelvo y repito esto\r\n\r\n              horasdisponibles = [...horasdisponibles, `${hora}:${minutos}`];\r\n              }\r\n          \r\n              horarioActual.setTime(horarioActual.getTime() + 30 * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n            }\r\n        }\r\n\r\n        function imprimirhorashtml(){\r\n            const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n            horasdisponibles.forEach(hora => {\r\n                const divhora = document.createElement('DIV');\r\n                divhora.classList.add(\"cliente__hora\");\r\n                const parrafohora = document.createElement('P');\r\n                parrafohora.textContent = hora;\r\n                //parrafohora.dataset.hora = hora.replace(':', '');\r\n                parrafohora.dataset.hora = hora;\r\n                parrafohora.onclick = seleccionarhora;\r\n                parrafohora.classList.add(\"texthora\");\r\n                divhora.appendChild(parrafohora);\r\n                divhoras.appendChild(divhora);\r\n            });\r\n        }\r\n\r\n        function seleccionarhora(e){\r\n            const deshabilthoraprevia = document.querySelector('.horaselect');\r\n            if(deshabilthoraprevia)\r\n                deshabilthoraprevia.classList.remove('horaselect');\r\n            e.target.parentElement.classList.add('horaselect'); //class agregada en dash-cliente/_cliente.scss\r\n            //cargar el input type hidden name = hora_fin del formulario para el envio\r\n            document.querySelector('#hora_fin').value = e.target.textContent;\r\n        }\r\n\r\n        //////////////////////////////reprogramar//////////////////////////////////\r\n\r\n\r\n        function cargarcita(element){\r\n            cargaservicios();\r\n            const tr = element.parentElement.parentElement.parentElement;\r\n            const idcita = tr.children[0].textContent;\r\n            const nombre = tr.children[1].textContent;\r\n            const nameservice = tr.children[3].textContent;\r\n            const namepro = tr.children[4].textContent;\r\n            const fechacita = tr.children[5].textContent;\r\n            const horacita = tr.children[6].textContent;\r\n            const namecliente = document.querySelector('.namecliente');\r\n            const selectservice = document.querySelector('#servicios'); //del formulario de arriba\r\n            const professionals = document.querySelector('#professionals'); //del formulario de arriba\r\n            const inputdate = document.querySelector('#date'); //del formulario de arriba\r\n\r\n            namecliente.textContent = nombre+' - ';\r\n            document.querySelector('#horacita').textContent = horacita;\r\n            document.querySelector('#id').value = idcita;\r\n            document.querySelector('#hora_fin').value = horacita;\r\n            \r\n            for(let i = 0; i<selectservice.options.length; i++)\r\n                if(selectservice.options[i].textContent === nameservice)\r\n                    selectservice.options[i].selected = true;\r\n\r\n            const id = selectservice.options[selectservice.options.selectedIndex].value;\r\n            cargarprofesionales(id);\r\n\r\n            for(let i = 0; i<professionals.options.length; i++){\r\n                if(professionals.options[i].textContent === namepro){\r\n                    professionals.options[i].selected = true;\r\n                    document.querySelector('#id_empserv').value = professionals.options[i].dataset.id; //se carga el id_empserv\r\n                }\r\n            }\r\n\r\n            inputdate.value = fechacita;\r\n            eventofecha();\r\n\r\n            const dia = new Date(fechacita);\r\n            validarfechaydia(fechacita, dia.getUTCDay());\r\n        }\r\n        \r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n\r\n        function deshabilitarfechaanterior(){\r\n            \r\n            const inputfecha = document.querySelector('#date');\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n            const year = fechaactual.getFullYear(); // obiene el año actual\r\n            const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n            const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            if(mes<10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n            inputfecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('.clientes')){\r\n        const crearcliente = document.querySelector('#crearcliente');\r\n        const editar = document.querySelectorAll('#editar');\r\n        const eliminar = document.querySelectorAll('#eliminar');\r\n        let objform = {\r\n            titulo: '',\r\n            url: '',\r\n            submit: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            movil: '',\r\n            email: ''\r\n        }\r\n\r\n        crearcliente.addEventListener('click', ()=>{\r\n            objform.titulo = 'Crear Cliente Nuevo';\r\n            objform.url = '/admin/clientes/crear';\r\n            objform.submit = 'Crear Cliente';\r\n            objform.nombre = '';\r\n            objform.apellido = '';\r\n            objform.movil = '';\r\n            objform.email = '';\r\n            formulariocliente(objform, 0);\r\n            countchars();\r\n        });\r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{\r\n                objform.titulo = 'Actualizar Cliente';\r\n                objform.url = '/admin/clientes/actualizar';\r\n                objform.submit = 'Actualizar';\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                objform.nombre = tr.children[1].textContent;\r\n                objform.apellido = tr.children[2].textContent;\r\n                objform.movil = tr.children[3].textContent;\r\n                objform.email = tr.children[4].textContent;\r\n                formulariocliente(objform, e.target.parentElement.dataset.id);\r\n                countchars();\r\n            });\r\n        });//cierre del foreach\r\n\r\n\r\n        function formulariocliente(objform, id){\r\n            let { titulo, url, submit, nombre, apellido, movil, email} = objform;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form class=\"formulario formclientes\" action=\"${url}\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del cliente\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"apellido\">Apellido:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Apellido del cliente\" id=\"apellido\" name=\"apellido\" value=\"${apellido}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"movil\">Movil</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"number\" placeholder=\"Movil del cliente\" id=\"movil\" name=\"movil\" value=\"${movil}\" required>\r\n                                    <label data-num=\"10\" class=\"count-charts\" for=\"\">10</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"email\">Email</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"email\" placeholder=\"Email del cliente\" id=\"email\" name=\"email\" value=\"${email}\" required>\r\n                                    <label data-num=\"40\" class=\"count-charts\" for=\"\">40</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"password\">Password</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"password\" placeholder=\"Password del cliente\" id=\"password\" name=\"password\" required>\r\n                                    <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"password2\">Repetir Password</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"password\" placeholder=\"Repetir Password\" id=\"password2\" name=\"password2\" required>\r\n                                    <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                </div>\r\n                            </div>\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n        }\r\n\r\n        /////////////// eliminar cliente ////////////////\r\n\r\n        eliminar.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar el cliente?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/admin/clientes/eliminar?id=${id}`;\r\n                    } \r\n                })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n\r\n    //////////////////////bar progress //////////////////////\r\n    if(document.querySelector('.barraprogreso')){\r\n        const negocios = document.querySelectorAll('#negocio');\r\n        const label = document.querySelector('.barraprogreso__label');\r\n        const barra = document.querySelector('.barraprogreso__barra');\r\n\r\n        let bar = 0;\r\n        negocios.forEach(negocio=>{if(negocio.value)bar++;});\r\n        barra.classList.add('animation');\r\n        label.textContent = ((bar*100)/11).toFixed(1)+'%';\r\n        const animationbarra = document.querySelector('.animation');\r\n        animationbarra.style.width = label.textContent; //barra de progreso dinamicamente\r\n        //\r\n    }\r\n\r\n\r\n    /////////////////// paginacion de empleado, malla, actualizar-empleado //////////////////\r\n    if(document.querySelector('.cambiopaginas')){\r\n        \r\n        const btns_nav_empleados = document.querySelectorAll('.cambiopaginas span');\r\n        btns_nav_empleados[0].classList.add('resaltar'); //resaltamos el primer enlace o btn\r\n        if(document.querySelector('.perfil')){\r\n            document.querySelector('.pagina3').classList.add('mostrarseccion'); \r\n        }else{\r\n            document.querySelector('.pagina1').classList.add('mostrarseccion'); //mostramos la primera seccion\r\n        }\r\n        btns_nav_empleados.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{ //cada btn o enlace\r\n\r\n                if(!e.target.classList.contains('resaltar')){\r\n                    btns_nav_empleados.forEach(btn=>btn.classList.remove('resaltar'));\r\n                    e.target.classList.add('resaltar');\r\n                }\r\n\r\n                const paginas = document.querySelectorAll('.paginas'); //seleccionamos las secciones o paginas a mostrar\r\n                paginas.forEach(pagina => pagina.classList.remove('mostrarseccion')); ////quitamos la class mostrarseccion a todas las secciones\r\n                document.querySelector(`.${e.target.id}`).classList.add('mostrarseccion'); //añadimos la class mostrarseccion a la la seccion o pagina correspondiente\r\n            });\r\n        });\r\n    }\r\n    \r\n\r\n    ///////////////////// habilita/deshabiita inputs de los dias de la malla de turnos con el checkbox/////////////\r\n    const dias = document.querySelectorAll(\"input[type=checkbox]\");\r\n    dias.forEach(dia => {\r\n        dia.addEventListener('change', function(e){\r\n            if(this.checked){\r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = false;\r\n            }else{ \r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = true;\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    ////////////////////// carga de horas en los select de la malla////////////////////////\r\n    const entradas = document.querySelectorAll('#entrada');\r\n    entradas.forEach(entrada =>{\r\n        entrada.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            puthoras(nextselect, e);\r\n        });\r\n    });\r\n\r\n    function puthoras(nextselect, e){\r\n        while(nextselect.firstChild)nextselect.removeChild(nextselect.firstChild);\r\n        let subhora = e.target.value.split(':');\r\n        let hora = parseInt(subhora[0]+subhora[1]);\r\n\r\n        for(let i = 0; hora<2300; i++){\r\n            let option = document.createElement('OPTION');\r\n            hora+=30;\r\n            if(hora%100 == 60)hora+=40;\r\n            option.value = hora;\r\n            subhora[0]= parseInt(hora/100);\r\n            subhora[1] = hora%100;\r\n            if(subhora[1] === 0)subhora[1] = \"00\";\r\n            option.textContent = subhora[0]+':'+subhora[1];\r\n            nextselect.appendChild(option);\r\n        }\r\n        nextselect.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            if(nextselect)puthoras(nextselect, e);\r\n        });\r\n    }\r\n\r\n    //////////////// funcion contadores de caracteres /////////////////////\r\n    /*countchars();\r\n    function countchars(){\r\n        const numinput = document.querySelectorAll('.count-charts');  \r\n        numinput.forEach(element =>{ //element es cada label\r\n            element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n            element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                element.textContent = element.dataset.num-e.target.value.length;\r\n                  \r\n                if(element.dataset.num-e.target.value.length <= 0){\r\n                    let cadena = e.target.value.slice(0, element.dataset.num);\r\n                    e.target.value = cadena;\r\n                    element.textContent = 0;\r\n                }\r\n            });\r\n        });\r\n    }*/\r\n\r\n})();","(function(){\r\n    if(document.querySelector('#dash-cliente')){\r\n        \r\n        const servicio = document.querySelector('#servicio');\r\n        const profesionales = document.querySelector('#profesional');\r\n        const selectdate = document.querySelector('#date');\r\n        //const programar = document.querySelectorAll('.programar');\r\n        const eliminarcitas = document.querySelectorAll('#cancelado');\r\n        selectdate.disabled = true;\r\n        let emplserv;\r\n                \r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json(); \r\n                   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n\r\n        deshabilitarfechaanterior();\r\n\r\n        servicio.addEventListener('change', (e)=>{\r\n            selectdate.disabled = true;\r\n            const empleados = emplserv.filter(Element => Element.idservicio === e.target.value);\r\n            borrarhtml(profesionales);\r\n            borrarhtml(document.querySelector('#horas'));\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' -Selecionar- ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            profesionales.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado;\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;\r\n                profesionales.appendChild(option);\r\n            });\r\n        });\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const fecha = document.querySelector('#date');\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n            /*const year = fechaactual.getFullYear(); // obiene el año actual\r\n            const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n            const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            */\r\n           \r\n            fechaactual.setDate(fechaactual.getDate() + 1);\r\n            const year = fechaactual.getFullYear();\r\n            const mes = fechaactual.getMonth() + 1;\r\n            const dia = fechaactual.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            \r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n\r\n            fecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        eliminarcitas.forEach(eliminarcita =>{\r\n            eliminarcita.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const fechacita = tr.children[2].textContent;\r\n                const horacita = tr.children[3].textContent;\r\n                const estado = tr.children[6].textContent;\r\n\r\n                //var fecha1 = new Date(fechacita+\"T00:00:00-05:00\");\r\n                let tiempocita = new Date(fechacita+\"T\"+horacita);\r\n                let hoy = new Date();\r\n\r\n                if(estado === \"Pendiente\"){\r\n                    if((tiempocita-hoy)>=3600000)\r\n                        cancelarcita(e.target.parentElement.dataset.id, tr.children[6]);\r\n                }  \r\n            });\r\n        });\r\n\r\n\r\n        function cancelarcita(id, estado){ //funcion para cancelar la cita, se ejecuta si la cita esta a mas de una hora de cumplirse\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Cancelar La Cita?',\r\n                text: \"SE CANCELARA LA CITA, PUEDES SOLICITAR UNA NUEVA CUANDO LO DESEES.\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/cancelarcita?id=${id}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();  \r\n                            if(resultado){\r\n                                estado.textContent = \"Cancelado\"; \r\n                                //borrar el div donde esta los horarios disponibles\r\n                                Swal.fire('Cita Cancelada', '', 'success')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })(); \r\n                } \r\n            })\r\n        }\r\n\r\n\r\n        /*\r\n        programar.forEach(element => { //bloque para reprogramar cita desde el dashboard del cliente\r\n            element.addEventListener('click', e=>{\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Reprograme su cita',\r\n                    html: `<div class=\"formulario__campo\">\r\n                            <label class=\"formulario__label\" for=\"date\">Consulta fecha disponible:</label>\r\n                            <input class=\"formulario__input\" id=\"date\" type=\"date\" value=\"\">\r\n                            </div>\r\n                            \r\n                            <div class=\"cliente__campohoras\" id=\"horasmodal\">\r\n\r\n                            </div>`,\r\n                    showCancelButton: true,\r\n                    showConfirmButton: true,\r\n                    //confirmButtonText: 'Aceptar',\r\n                    //cancelButtonText: 'Cancelar',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                    Swal.fire('Actualizando', '', 'success')\r\n                    //modificar el servicio\r\n                    } \r\n                })\r\n            });\r\n        });*/\r\n        \r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('#dash-cliente')){\r\n\r\n        let horasdisponibles = [], horacitas = [];\r\n        const divhoras = document.querySelector('#horas'); //donde se poenen las horas\r\n\r\n        function calcularhorarios(horaInicio, horaFin) {\r\n            const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n            const horarioFinal = new Date(`01/01/2000 ${horaFin}`);\r\n          \r\n            while (horarioActual < horarioFinal) {\r\n              const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n              const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n              //console.log(`${hora}:${minutos}`);\r\n              const validate = horacitas.includes(`${hora}:${minutos}`);\r\n              if(!validate){\r\n                  //hora1 = ${hora}:${minutos};\r\n                  //horatemp = hora1; + min-servicio, \r\n                  //preguntar si horatemp es menor o igual al elemento del arreglo horacitas\r\n                  //si es si\r\n                  //imprimir hora1, hacer hora1 = horatemp;\r\n                  //si es no\r\n                  //hora1 = elemento del arreglo + su duracion-serv\r\n                  //aumentar en uno al arreglo de horacitas\r\n                  //valido arribo si es si, vuelvo y repito esto\r\n\r\n              horasdisponibles = [...horasdisponibles, `${hora}:${minutos}`];\r\n              }\r\n          \r\n              horarioActual.setTime(horarioActual.getTime() + 30 * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n            }\r\n        }\r\n\r\n\r\n        const professionals = document.querySelector('#profesional');\r\n        const select_date = document.querySelector('#date');\r\n        let fechadesc, malla, citas;\r\n        let onlyfechadesc, onlymalla, onlycitas;\r\n\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\"; //llamado a la API REST para trer todas las fechas de descanso de todos los empleados.\r\n                const respuesta = await fetch(url); \r\n                fechadesc = await respuesta.json(); \r\n                   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();    \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json();\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })(); \r\n\r\n        ///////////seleccionar empleado o profesional //////////////\r\n        professionals.addEventListener('change', (e)=>{\r\n            borrarhtml(divhoras);\r\n            select_date.disabled = false;\r\n            select_date.value = \"\";\r\n            onlymalla = malla[`empleado_${e.target.value}`]; //obtiene solo la malla de ese empleado\r\n            onlyfechadesc = fechadesc.filter(element => e.target.value === element.empleado_id);\r\n        });\r\n\r\n        select_date.addEventListener('input', (evento)=> {\r\n            /////////borrar el campo de las horas//////////\r\n            borrarhtml(divhoras);\r\n            \r\n            const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana\r\n            validarfechaydia(evento.target.value, dia.getUTCDay());\r\n            /*\r\n            const opciones = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long'\r\n            }\r\n            console.log(dia.toLocaleDateString('es-ES', opciones));*/\r\n        });\r\n        \r\n\r\n        function validarfechaydia(fecha, dia){\r\n            //al seleccionar fecha ya se ha seleccionado el profesional, y el profesional me contiene su id y el id de la tabla empserv\r\n            const idempleado = professionals.options[professionals.options.selectedIndex].value;\r\n            onlycitas = citas.filter(cita => (cita.idempleado === idempleado&&cita.fecha_fin === fecha&&cita.estado === \"Pendiente\")); //obtengo las citas deacuerdo al profesional y fecha seleccionada y pendiente\r\n            \r\n            const r1 = onlyfechadesc.some(element => element.fecha === fecha);\r\n            if(r1){\r\n                Swal.fire(\r\n                    'Este dia no esta disponible!',\r\n                    'You clicked the button!',\r\n                    'error'\r\n                  )\r\n            }else{\r\n                const r2 = onlymalla.filter(element => element.id_dia == (dia===0?7:dia));\r\n                if(r2.length){ //es pq el dia si esta en la malla\r\n                    gethoras(r2[0]); //se envia solo el dia seleccionado (obj)\r\n                }\r\n                else{ //dia no esta en la malla\r\n                    Swal.fire(\r\n                        'Este dia no esta disponible!',\r\n                        'You clicked the button!',\r\n                        'error'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        function gethoras(r2){\r\n            let horario1 = [], horario2 = [];\r\n\r\n            horario1 = [...horario1, r2.inicioturno, r2.inidescanso];\r\n            horario2 = [...horario2, r2.findescanso, r2.finturno];\r\n\r\n            // me traigo un arreglo de la tabla citas de la DB con su hora segun fecha seleccionada y profesional seleccionado\r\n            //// comparo cada hora del arreglo traio con r2.iniciodescanso y si es menor lo agrego al arreglo horario1\r\n            ///luego comparo con r2.finturno y si es mayor lo agrego a arreglo horario2\r\n\r\n            horario1 = horario1.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            horario2 = horario2.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            //horacitas = onlycitas.map(element =>  element.hora_fin.slice(3)); //obtengo las horas formato 24 de la bd segun fecha y profesional\r\n            horacitas = onlycitas.map(element =>  element.hora_fin);\r\n\r\n            for(let i = 0; i<horario1.length-1; i++){\r\n            calcularhorarios(horario1[i], horario1[i+1]);\r\n            }\r\n            for(let i = 0; i<horario2.length-1; i++)\r\n            calcularhorarios(horario2[i], horario2[i+1]);\r\n            \r\n           console.log(horasdisponibles);\r\n           imprimirhorashtml();\r\n        }\r\n\r\n\r\n        function imprimirhorashtml(){\r\n            horasdisponibles.forEach(hora => {\r\n                const divhora = document.createElement('DIV');\r\n                divhora.classList.add(\"cliente__hora\");\r\n                const parrafohora = document.createElement('P');\r\n                parrafohora.textContent = hora;\r\n                //parrafohora.dataset.hora = hora.replace(':', '');\r\n                parrafohora.dataset.hora = hora;\r\n                parrafohora.onclick = reservarcita;\r\n                parrafohora.classList.add(\"texthora\");\r\n                divhora.appendChild(parrafohora);\r\n                divhoras.appendChild(divhora);\r\n            });\r\n        }\r\n\r\n        function reservarcita(e){ \r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Reservar La Cita?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    let r = enviarcita(e.target.dataset.hora);\r\n                    if(r){\r\n                        Swal.fire('Cita Programada', '', 'success')\r\n                        setTimeout(() => {\r\n                            window.location.reload();\r\n                        }, 1500);\r\n                    }\r\n                } \r\n            })\r\n        }\r\n\r\n        async function enviarcita(horacita){\r\n            const datos = new FormData();\r\n            const id_empserv = professionals.options[professionals.options.selectedIndex]; //id de la relacion empleado_servicio\r\n            const id_servicio = document.querySelector('#servicio').options[document.querySelector('#servicio').options.selectedIndex].value;\r\n            const hoy = new Date();\r\n\r\n            datos.append('id_empserv', id_empserv.dataset.id);\r\n            //datos.append('fecha_inicio', hoy.toLocaleDateString().replace(/\\//g, '-')); //fecha actual\r\n            datos.append('fecha_inicio', hoy.getFullYear()+'-'+(hoy.getMonth()+1)+'-'+hoy.getDate());\r\n            datos.append('fecha_fin', select_date.value);\r\n            datos.append('hora', hoy.toLocaleTimeString());\r\n            datos.append('hora_fin', horacita);\r\n            datos.append('servicio', id_servicio);\r\n            datos.append('profesional', id_empserv.value);\r\n            try {\r\n                const url = \"/admin/api/enviarcita\";\r\n                const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                const resultado = await respuesta.json();  \r\n                if(resultado[0]){\r\n                    return true;\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n    }\r\n})();","(function(){\r\n\r\n    //////////////////// los skills de los empleados //////////////////////\r\n    if(document.querySelector('.formulario__fieldset--servicios')){\r\n        const divcampostags1 = document.querySelector('.pagina1 .formulario__campostags'); //div en donde se carga los skills y el select de servicios en crear empleado\r\n        const divcampostags2 = document.querySelector('.pagina4 .formulario__campostags'); //div en donde se carga los skills y el select de servicios en actualizar empleado\r\n        const tagselect1 = document.querySelector('.pagina1 .formulario__tagselect'); //select de los servicios\r\n        const tagselect2 = document.querySelector('.pagina4 .formulario__tagselect'); //select de los servicios\r\n        const tagsinputhidden1 = document.querySelector('.pagina1 [name=\"servicios\"]'); //input oculto donde se carga los id de los servicios\r\n        const tagsinputhidden2 = document.querySelector('.pagina4 [name=\"servicios\"]'); //input oculto donde se carga los id de los servicios\r\n        const selectemployee = document.querySelector('#selectemployee'); //select del los empleados en update data\r\n        const eliminaremployee = document.querySelector('#eliminaremployee'); //<a>btn liminar</a>\r\n        let totalservicios = [], empleadosapi, tags1 = [], tags2 = [];\r\n\r\n        tagselect1.classList.add('selectskills1');\r\n       // let copytagselect2 = tagselect2.cloneNode(true);\r\n\r\n       //////obtoner todos los servicios del select en arreglo totalservicios///////\r\n        for(let i=1; i<tagselect2.options.length; i++){\r\n            let objservicio = {\r\n                id: tagselect2.options[i].value,\r\n                nombre: tagselect2.options[i].textContent\r\n            }\r\n            totalservicios = [...totalservicios, objservicio];\r\n        }\r\n\r\n        /////////traer todos los empleados con sus skills //////////\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getAllemployee\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                empleadosapi = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n\r\n        tagselect1.addEventListener('change', (e)=>{ //envento al select de los servicios\r\n            tags1 = [...tags1, e.target.options[tagselect1.options.selectedIndex].value];  //en este arreglo guardamos los id de los servicios seleccionados\r\n            \r\n            let nombreservicio = e.target.options[tagselect1.options.selectedIndex].textContent;\r\n            let idservicio = e.target.options[tagselect1.options.selectedIndex].value;\r\n            \r\n            let divtag = mostrarservicio(nombreservicio, idservicio, tagselect1);\r\n            //divcampostags1.insertBefore(divtag, document.querySelector('.pagina1 .formulario__tagselect'));\r\n            divcampostags1.appendChild(divtag);\r\n            tagselect1.options[tagselect1.options.selectedIndex].remove();\r\n            tagselect1.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        });\r\n\r\n        function mostrarservicio(nombreservicio, idservicio, tagselect){\r\n            //const divcampotag = document.createElement('DIV');\r\n            //divcampotag.classList.add('formulario__campotag');\r\n            const divtag = document.createElement('DIV');\r\n            divtag.classList.add('formulario__tag');\r\n            const span = document.createElement('SPAN');\r\n            span.textContent = nombreservicio;\r\n            span.id = idservicio;\r\n            const icon = document.createElement('I');\r\n            icon.classList.add('fa-solid');\r\n            icon.classList.add('fa-rectangle-xmark');\r\n            icon.onclick = function(e){ borrarservicio(e, tagselect); } //al dar click en la x elimina el servicio del empleado\r\n            divtag.appendChild(span);\r\n            divtag.appendChild(icon);\r\n            //divcampotag.appendChild(divtag);\r\n            return divtag;\r\n        }\r\n\r\n        function borrarservicio(e, tagselect){ //al dar click en la x lo muestra en el select, y elimina el servicio o skill elegido del empleado\r\n            let span = e.target.previousElementSibling;\r\n            cargarselects(tagselect, {id: span.id, nombre: span.textContent});\r\n            e.target.parentElement.remove();\r\n\r\n            if(tagselect.classList.contains('selectskills1')){\r\n                tags1 = tags1.filter(tag => tag!=span.id);\r\n            }else{\r\n                tags2 = tags2.filter(tag => tag!=span.id);\r\n            }\r\n            actualizarinputhidden();\r\n        }\r\n\r\n        function actualizarinputhidden(){\r\n            tagsinputhidden1.value = tags1.toString(); // el arreglo tags lo convierte a string\r\n            tagsinputhidden2.value = tags2.toString(); // el arreglo tags lo convierte a string\r\n        }\r\n\r\n//////////////////////\r\n\r\n        selectemployee.addEventListener('change', (e)=>{ //evento al select de empleados en update data\r\n            let empleado;\r\n            const divtags = document.querySelectorAll('.pagina4 .formulario__tag');\r\n            divtags.forEach(divtag => {divtag.remove()}); //eliminar previamente los skills para cargarlos nuevamente \r\n            eliminaremployee.href = \"/admin/configuracion/eliminaremployee?id=\"+e.target.value;\r\n            empleado = empleadosapi.filter(element => element.id == e.target.value); //obtengo solo un empleado elegido\r\n            cargarempleado(empleado);\r\n        });\r\n\r\n        function cargarempleado(empleado){ //empleado es un arreglo con un solo obj\r\n            const{servicios} = empleado[0]; //servicios es el arreglo con solo skills\r\n            document.querySelector('.pagina4 #nombre').value = empleado[0].nombre;\r\n            document.querySelector('.pagina4 #apellido').value = empleado[0].apellido;\r\n            document.querySelector('.pagina4 #movil').value = empleado[0].movil;\r\n            document.querySelector('.pagina4 #email').value = empleado[0].email;\r\n            document.querySelector('.pagina4 #departamento').value = empleado[0].departamento;\r\n            document.querySelector('.pagina4 #ciudad').value = empleado[0].ciudad;\r\n            document.querySelector('.pagina4 #direccion').value = empleado[0].direccion;\r\n\r\n            tags2 = [];\r\n\r\n            //mostrar todos los servicios en el select//\r\n            totalservicios.forEach(servicio => {\r\n                let i = 1;\r\n                for( ; i<tagselect2.options.length; i++)\r\n                    if(servicio.id == tagselect2.options[i].value)break;\r\n                if(i === tagselect2.options.length)cargarselects(tagselect2, {id: servicio.id, nombre: servicio.nombre});\r\n            });\r\n            \r\n            servicios.forEach(servicio => { //arreglo de servicios\r\n                tags2 = [...tags2, servicio.id];\r\n                let divtag = mostrarservicio(servicio.nombre, servicio.id, tagselect2);\r\n                //divcampostags2.insertBefore(divtag, document.querySelector('.pagina4 .formulario__tagselect'));\r\n                divcampostags2.appendChild(divtag);\r\n                ///quitar del select los servicios que se mostraron//\r\n               //document.querySelector(`.pagina4 .formulario__tagselect option[value=\"${servicio.id}\"`).remove();\r\n                if(tagselect2.querySelector(`option[value=\"${servicio.id}\"`))\r\n                    tagselect2.querySelector(`option[value=\"${servicio.id}\"`).remove(); \r\n            });\r\n            tagselect2.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        }\r\n\r\n        tagselect2.addEventListener('change', (e)=>{ //envento al select de los servicios\r\n            tags2 = [...tags2, e.target.options[tagselect2.options.selectedIndex].value];  //en este arreglo guardamos los id de los servicios seleccionados\r\n            let nombreservicio = e.target.options[tagselect2.options.selectedIndex].textContent;\r\n            let idservicio = e.target.options[tagselect2.options.selectedIndex].value;\r\n            \r\n            let divtag = mostrarservicio(nombreservicio, idservicio, tagselect2);\r\n            //divcampostags2.insertBefore(divtag, document.querySelector('.pagina4 .formulario__tagselect'));\r\n            divcampostags2.appendChild(divtag);\r\n            tagselect2.options[tagselect2.options.selectedIndex].remove();\r\n            tagselect2.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        });\r\n\r\n        function cargarselects(tagselect, skill){\r\n            const option = document.createElement('OPTION');\r\n            option.value = skill.id;\r\n            option.textContent = skill.nombre;\r\n            tagselect.appendChild(option);\r\n        }\r\n\r\n\r\n        /////eliminar empleado//////\r\n        eliminaremployee.addEventListener('click', (e)=>{\r\n            e.preventDefault();\r\n            if(e.target.href.includes('?id=')){\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar el empleado?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed)\r\n                        window.location = e.target.href;\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n})();","(function(){\r\n    if(document.querySelector('.facturacion')){\r\n        let servicios;\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        const filtrarfecha = document.querySelector('#fecha');\r\n        filtrarfecha.addEventListener('input', (e)=>{\r\n            window.location = `/admin/facturacion/buscarxfecha?pagina=1&fecha=${e.target.value}`;\r\n        });\r\n\r\n        const pagar = document.querySelector('#pagar');\r\n        pagar.addEventListener('click', ()=>{\r\n            formulariopagar(0);\r\n            countchars();\r\n        });\r\n        \r\n\r\n        function formulariopagar(id){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Pago De Servicio',\r\n                html: `<form class=\"formulario formclientes\" action=\"/admin/facturacion\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"idcita\" value=\"1\">\r\n                            <input type=\"hidden\" name=\"valor_servicio\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"dcto\" value=\"0\">\r\n                            <input type=\"hidden\" name=\"valordcto\" value=\"0\">\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"servicios\">Servicios:</label>\r\n                                <select class=\"formulario__select\" name=\"idservicio\" id=\"selectservice\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar Servicio</option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"total\">Total a pagar:</label>\r\n                                <input class=\"formulario__input\" type=\"number\" id=\"total\" name=\"total\" value=\"\" readonly required>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo-2r\">\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"recibido\">Recibido:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"recibido\" name=\"recibido\" value=\"\" required>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"devolucion\">Devolucion:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"devolucion\" name=\"devolucion\" value=\"\" readonly required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nota\">Nota:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nota del pago\" id=\"nota\" name=\"nota\" value=\"\">\r\n                                    <label data-num=\"64\" class=\"count-charts\" for=\"\">64</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Imprimir Recibo: </label>\r\n                                <div class=\"formulario__campo-2r\">\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_si\">Si:</label>\r\n                                        <input id=\"imprimir_si\" type=\"radio\" value=\"1\" name=\"imprimir\">\r\n                                    </div>\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_no\">No:</label>\r\n                                        <input id=\"imprimir_no\" type=\"radio\" value=\"0\" name=\"imprimir\" checked>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Pagar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            document.querySelector('#recibido').addEventListener('input', calculo);\r\n            cargarservicios();\r\n        }\r\n\r\n        function cargarservicios(){\r\n            const selectservice = document.querySelector('#selectservice');\r\n            servicios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id;\r\n                option.textContent = element.nombre;\r\n                selectservice.appendChild(option);\r\n            });\r\n            selectservice.addEventListener('change', e=>cargarvalorservicio(e));\r\n        }\r\n        function cargarvalorservicio(e){\r\n            const total = document.querySelector('#total');\r\n            const valorservice = servicios.filter(element =>element.id == e.target.value);\r\n            total.value = valorservice[0].precio;\r\n            document.querySelector('input[name=valor_servicio]').value = total.value;\r\n            document.querySelector('#recibido').value = '';\r\n            document.querySelector('#devolucion').value = '';\r\n        }\r\n\r\n        function calculo(){\r\n            const devolucion = document.querySelector('#devolucion');\r\n            const inputtotal = parseInt(document.querySelector('#total').value);\r\n            const recibido = parseInt(document.querySelector('#recibido').value); \r\n                if(recibido>=inputtotal){\r\n                   devolucion.value = recibido-inputtotal;\r\n                   //devolucion.style.color = \"rgb(240, 101, 72)\"; \r\n                }else{\r\n                    devolucion.value = '';\r\n                }\r\n        }\r\n\r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.descpagina3')){\r\n\r\n        const selectemployee = document.querySelector('#selectemployeedate');\r\n        const viewdates = document.querySelector('.viewdates');\r\n        let fechas;\r\n\r\n        (async ()=> {\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\";\r\n                const respuesta = await fetch(url);\r\n                fechas = await respuesta.json();\r\n            } catch (error) {\r\n               console.log(error); \r\n            }\r\n        })();\r\n\r\n\r\n        selectemployee.addEventListener('change', (e)=>{\r\n            const dates = fechas.filter(fecha => fecha.empleado_id == e.target.value);\r\n            limpiarfechas();\r\n            imprimirfechas(dates);\r\n        });\r\n\r\n        function limpiarfechas(){\r\n            while(viewdates.firstChild)viewdates.removeChild(viewdates.firstChild);\r\n        }\r\n\r\n        function imprimirfechas(dates){\r\n            dates.forEach(element => {\r\n                const div = document.createElement('DIV');\r\n                div.classList.add('viewdates__viewdate'); \r\n                div.dataset.id = element.id;\r\n                const parrafo = document.createElement('P');\r\n                parrafo.classList.add('viewdates__fecha');\r\n                parrafo.textContent = element.fecha;\r\n                const icondelete = document.createElement('I');\r\n                icondelete.classList.add('fa-solid', 'fa-rectangle-xmark');\r\n                icondelete.id = element.id;\r\n                icondelete.onclick = eliminarfecha;\r\n                div.appendChild(parrafo);\r\n                div.appendChild(icondelete);\r\n                viewdates.appendChild(div);\r\n            });\r\n        }\r\n\r\n        async function eliminarfecha(e){\r\n            console.log(e.target.id);\r\n            try {\r\n                const url = `/admin/api/deletefechadesc?id=${e.target.id}`;\r\n                const respuesta = await fetch(url); \r\n                const resultado = await respuesta.json();  \r\n                if(resultado == 1)document.querySelector(`i[id=\"${e.target.id}\"]`).parentElement.remove();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.dctoindividual')){\r\n        const editar = document.querySelectorAll('#editar');\r\n        const eliminar = document.querySelectorAll('#eliminar');\r\n\r\n        let obj = {\r\n            nombre: '',\r\n            descripcion: '',\r\n            dcto: '',\r\n            fecha_fin: ''\r\n        }\r\n        \r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{ \r\n                const id = e.target.parentElement.dataset.id;\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                obj.nombre = tr.children[1].textContent;\r\n                obj.fecha_fin = tr.children[3].textContent;\r\n                obj.descripcion = tr.children[4].textContent;\r\n                obj.dcto = tr.children[5].textContent;\r\n                formulariocliente(id);\r\n                countchars();\r\n            });\r\n        });\r\n\r\n\r\n        function formulariocliente(id){\r\n    \r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Actualizar Oferta',\r\n                html: `<form class=\"formulario formclientes\" action=\"/admin/fidelizacion/editar_dctoindividual\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" value=\"${obj.nombre}\" readonly required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descripcion\">Descripcion:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Descripcion de la oferta\" id=\"descripcion\" name=\"descripcion\" value=\"${obj.descripcion}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Descuento</label>\r\n                                <input class=\"formulario__input\" min=\"1\" max=\"100\" type=\"number\" placeholder=\"Descuento en porcentaje\" id=\"descuento\" name=\"descuento\" value=\"${obj.dcto}\" requiered>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"fecha\">Fecha</label>\r\n                                <input class=\"formulario__input\" type=\"date\" id=\"fecha\" name=\"fecha\" value=\"${obj.fecha_fin}\" requiered>\r\n                            </div>\r\n                            \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Actualizar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n        }\r\n\r\n        /////////////// eliminar oferta del cliente ////////////////\r\n\r\n        eliminar.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar la oferta del cliente?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/admin/fidelizacion/eliminar_dctoindividual?id=${id}`;\r\n                    } \r\n                })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        \r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('#dashboardcitas')){//en admin/citas/index.php\r\n        \r\n        const eliminarcitas = document.querySelectorAll('.cancelado');\r\n        const finalizarcitas = document.querySelectorAll('.finalizado');\r\n        let valueservice;\r\n\r\n        ////////////////////////////cancelar o eliminar cita//////////////////////////////\r\n        eliminarcitas.forEach(eliminarcita =>{\r\n            eliminarcita.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const id = tr.children[0].textContent;\r\n                const estado = tr.children[7].textContent;\r\n                if(estado === \"Pendiente\")cancelarcita(id, tr.children[7]); //se pasa el id de la cita y su estado  \r\n            });\r\n        });\r\n\r\n        function cancelarcita(id, estado){ //funcion para cancelar la cita.\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Cancelar La Cita?',\r\n                text: \"SE CANCELARA LA CITA, PUEDES CREAR UNA NUEVA CUANDO LO DESEES.\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/cancelarcita?id=${id}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();  \r\n                            if(resultado){\r\n                                estado.textContent = \"Cancelado\"; \r\n                                Swal.fire('Cita Cancelada', '', 'success')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })(); \r\n                } \r\n            })\r\n        }\r\n\r\n        //////////////////////Finalizar clita /////////////////////////////\r\n\r\n        finalizarcitas.forEach(fincita => {\r\n            fincita.addEventListener('click', e=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const estado = tr.children[7].textContent;\r\n                if(estado === \"Pendiente\"){ //se pasa el id de la cita y su estado  \r\n                    formulariopagar();\r\n                    cargardatoscliente(e);\r\n                }\r\n            });\r\n        });\r\n\r\n        function formulariopagar(){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Terminar Cita',\r\n                html: `<form class=\"formulario formclientes\" action=\"/admin/citas/finalizar?pagina=1\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"valor_servicio\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"valordcto\" value=\"0\" >\r\n\r\n                            <p class=\"orden\"></p>\r\n                            <span class=\"nameuser\"></span>\r\n                            <span class=\"nameservice\"></span>\r\n                            <span class=\"precio\"></span>\r\n\r\n                            <div class=\"\">\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"dcto\">Aplicar Dcto:</label>\r\n                                <select class=\"formulario__select\" name=\"dcto\" id=\"dcto\">\r\n                                    <option value=\"\" disabled selected> Seleccionar Dcto</option>\r\n                                    <option value=\"0\"> Sin Descuento</option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"total\">Total: </label>\r\n                                <input class=\"formulario__input\" type=\"number\" id=\"total\" name=\"total\" value=\"\" readonly required>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo-2r\">\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"recibido\">Recibido:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"recibido\" name=\"recibido\" value=\"\" required>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"devolucion\">Devolucion:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"devolucion\" name=\"devolucion\" value=\"\" readonly required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nota\">Nota:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nota del pago\" id=\"nota\" name=\"nota\" value=\"\">\r\n                                    <label data-num=\"64\" class=\"count-charts\" for=\"\">64</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Imprimir Recibo: </label>\r\n                                <div class=\"formulario__campo-2r\">\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_si\">Si:</label>\r\n                                        <input id=\"imprimir_si\" type=\"radio\" value=\"1\" name=\"imprimir\">\r\n                                    </div>\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_no\">No:</label>\r\n                                        <input id=\"imprimir_no\" type=\"radio\" value=\"0\" name=\"imprimir\" checked>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n    \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Pagar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            document.querySelector('#recibido').addEventListener('input', calculo);\r\n            countchars();\r\n        }\r\n\r\n        function cargardatoscliente(e){\r\n            const dcto = e.target.parentElement.dataset.dctogeneral;\r\n            const tr = e.target.parentElement.parentElement.parentElement;\r\n            const idcita = tr.children[0].textContent;\r\n            const nombre = tr.children[1].textContent;\r\n            const servicio = tr.children[3].textContent;\r\n            valueservice = tr.children[3].dataset.precio;\r\n\r\n            document.querySelector('input[name=id]').value = idcita;  //id de la cita\r\n            document.querySelector('input[name=valor_servicio]').value = valueservice;\r\n            document.querySelector('.orden').textContent = 'Orden: '+idcita;\r\n            document.querySelector('.nameuser').textContent = nombre;\r\n            document.querySelector('.nameservice').textContent = servicio;\r\n            document.querySelector('.precio').textContent = 'Precio: $'+valueservice;\r\n\r\n            const selectdcto = document.querySelector('#dcto');\r\n            const option = document.createElement('option');\r\n            option.textContent = dcto+'%';\r\n            option.value = dcto;\r\n            selectdcto.appendChild(option);\r\n            selectdcto.addEventListener('change', aplicardcto);\r\n\r\n            const total = document.querySelector('#total');\r\n            total.value = valueservice;\r\n            total.addEventListener('input', calculo);\r\n        }\r\n\r\n        function aplicardcto(e){\r\n            document.querySelector('#total').value = valueservice; //se reinicia el valor original del servicio\r\n            const dcto = parseInt(e.target.value);\r\n            const total = parseInt(document.querySelector('#total').value);\r\n            document.querySelector('#total').value = total - ((dcto*total)/100);\r\n            document.querySelector('#valordcto').value = total - document.querySelector('#total').value;\r\n            calculo();\r\n        }\r\n\r\n        function calculo(){\r\n            const devolucion = document.querySelector('#devolucion');\r\n            const inputtotal = parseInt(document.querySelector('#total').value);\r\n            const recibido = parseInt(document.querySelector('#recibido').value); \r\n                if(recibido>=inputtotal){\r\n                   devolucion.value = recibido-inputtotal;\r\n                   //devolucion.style.color = \"rgb(240, 101, 72)\"; \r\n                }else{\r\n                    devolucion.value = '';\r\n                }\r\n        }\r\n\r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n\r\n    const grafica = document.querySelector('#servicios-grafica');\r\n    if(grafica){\r\n       \r\n        let fechas, cierretotal, totalcitas, citasrealizadas, valorcitas=0; citas100=0, progreso=440;\r\n        (async ()=>{\r\n            try {\r\n                const url1 = \"/admin/api/alldays\"; //llamado a la API REST\r\n                const respuesta1 = await fetch(url1); \r\n                const resultado1 = await respuesta1.json(); \r\n                const url2 = \"/admin/api/totalcitas\";\r\n                const respuesta2 = await fetch(url2); \r\n                const resultado2 = await respuesta2.json(); \r\n            \r\n                resultado1.reverse();\r\n                fechas = resultado1.map(date => date.fecha);\r\n                cierretotal = resultado1.map(total => total.totaldia);\r\n\r\n                \r\n                totalcitas = resultado2.length;\r\n                citasrealizadas = resultado2.filter(Element=>Element.estado==='Finalizada');\r\n                valorcitas = citasrealizadas.reduce((total, Element)=>total+parseInt(Element.facturacion.total), 0);\r\n                if(totalcitas)citas100 = (citasrealizadas.length*100)/totalcitas;\r\n                progreso = (440*citas100)/100;\r\n\r\n                printgrafica1();\r\n                animacioncircle();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function printgrafica1(){\r\n            let a = ['#ea580c', '#84cc16', '#22d3ee', '#a855f7', '#ef4444', '#14b8a6', '#db2777', '#e11d48', '#7e22ce'];\r\n            //for(let i=0; i<(resultado.length-9); i++)a=[...a, a[i]];     //si los programas supera 9 se repite color \r\n\r\n            const ctx = document.getElementById('servicios-grafica').getContext('2d');\r\n            \r\n            new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: fechas,//resultado.map(programa=>programa.nombre),\r\n                    datasets: [{\r\n                    label: '# of Votes',\r\n                    data: cierretotal,//resultado.map(programa=>programa.total),\r\n                    borderColor: '#00c8c2',\r\n                    //backgroundColor: ['#ea580c', '#84cc16', '#22d3ee', '#a855f7'],\r\n                    backgroundColor: '#ea580c',\r\n                    //tension: 0.3,\r\n                    //stepped: 'middle',\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                    plugins: {legend: {display: false } } //elimina el label del dataset\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function animacioncircle(){\r\n            const circle = document.querySelector('circle');\r\n            circle.style.strokeDashoffset = 440-progreso;\r\n            circle.classList.add('animacion');\r\n\r\n            const dailyearning = document.querySelector('.dailyearning').textContent = '$'+valorcitas;\r\n            const numero = document.querySelector('.rueda .numero');\r\n            numero.textContent = Math.round(citas100)+'%';\r\n        }\r\n        \r\n\r\n    } //cierre del if\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.pagina2malla')){\r\n        const selectemployee = document.querySelector('#selectempleadomalla');\r\n        let malla;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla de todos los empleados\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();    \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        selectemployee.addEventListener('change', (e)=>{\r\n            const turnosemployee = malla['empleado_'+e.target.value]; //arreglo de obj donde cada obj es el dia con su turno\r\n            limpiarmalla(); //limpiar malla previamente\r\n            turnosemployee.forEach(dia => {\r\n                const {inicioturno, inidescanso, findescanso, finturno} = dia;\r\n                let horas = new Array(inicioturno, inidescanso, findescanso, finturno);\r\n                const radio = document.querySelector(`input[data-id=\"${dia.id_dia}\"]`);\r\n                radio.checked = true;\r\n                for(let i=0; i<4; i++)radio.parentElement.nextElementSibling.children[i].disabled = false;\r\n\r\n                document.querySelector(`#entrada[data-id=\"${dia.id_dia}\"]`).value = inicioturno.substring(0,2)+':'+inicioturno.substring(2,4);\r\n                let select = document.querySelector(`#inidescanso[data-id=\"${dia.id_dia}\"]`);\r\n                \r\n                for(let i = 0; i<3; i++){\r\n                    putoptions(select, parseInt(horas[i])); //llenar las options de los input select\r\n                    for(let j = 0; j<select.options.length; j++)\r\n                        if(select.options[j].value == parseInt(horas[i+1]))select.options[j].selected = true;\r\n                    select = select.nextElementSibling;\r\n                }\r\n            });  \r\n        });\r\n\r\n        function putoptions(select, hora){\r\n            for(let i = 0; hora<2300; i++){\r\n                let option = document.createElement('OPTION');\r\n                hora+=30;\r\n                if(hora%100 == 60)hora+=40;\r\n                option.value = hora;\r\n                option.textContent = (hora%100==0)?parseInt(hora/100)+':00':parseInt(hora/100)+':'+hora%100;\r\n                select.appendChild(option);\r\n            }\r\n        }\r\n\r\n        function limpiarmalla(){\r\n            const elemntcheckbox = document.querySelectorAll('INPUT[type=\"checkbox\"]');\r\n            elemntcheckbox.forEach(Element => {\r\n                if(Element.checked){ Element.checked = false;\r\n                    for(let i=0; i<4; i++){\r\n                        Element.parentElement.nextElementSibling.children[i].disabled = true;\r\n                        if(i===0){\r\n                            Element.parentElement.nextElementSibling.children[0].value = '';\r\n                        }else{\r\n                            Element.parentElement.nextElementSibling.children[i].options[0].selected = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.headerapp__menu')){\r\n        const btnmenu = document.querySelector('#btnmenu');\r\n        const navmenu = document.querySelector('.headerapp__navmenu');\r\n        btnmenu.addEventListener('click', ()=>{\r\n            navmenu.classList.toggle('mostrar');\r\n        });\r\n    }\r\n\r\n})();","(function(){\r\n    \r\n    const servicios = document.querySelectorAll('#servicio');\r\n    const servicios__eliminar = document.querySelectorAll('.servicios__eliminar'); //<a></a>\r\n    \r\n    servicios__eliminar.forEach(Element=>{ //para eliminar los servicios\r\n        Element.addEventListener('click', (e)=>{\r\n\r\n            let id;\r\n           e.target.href = \"/admin/servicios/eliminar\";\r\n           e.preventDefault();\r\n         \r\n           if(e.target.tagName === \"I\"){ \r\n               id = e.target.parentElement.parentElement.dataset.id;   \r\n            }else{\r\n                id = e.target.parentElement.dataset.id;\r\n            }\r\n            //window.location = e.target.href;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea eliminar el servcio?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire('Eliminado', '', 'success') \r\n\r\n                    \r\n                    async function eliminarservicio(){ //\r\n                        const datos = new FormData();\r\n                        console.log(id);\r\n                        datos.append('id', id);\r\n                        try {\r\n                            const url = \"/admin/api/eliminarservicio\";\r\n                            const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                            const resultado = await respuesta.json(); \r\n                            console.log(resultado); \r\n\r\n                            const divservicio = document.querySelector(`div[data-id=\"${id}\"]`);\r\n                            divservicio.remove();\r\n                            return resultado;\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n\r\n                    eliminarservicio();\r\n                } \r\n            })\r\n    \r\n        });\r\n    });\r\n\r\n    \r\n    servicios.forEach(Element =>{   // para editar los servicios\r\n        Element.addEventListener('click', (e)=>{\r\n            \r\n            if(e.target.tagName === \"DIV\" ||e.target.tagName === \"P\"|| e.target.tagName === \"H4\" || e.target.tagName === \"SPAN\"){\r\n    \r\n                let nombre, precio, duracion, id;\r\n                \r\n                id = id = e.target.dataset.id;;\r\n                if(e.target.tagName === \"P\"|| e.target.tagName === \"H4\")id = e.target.parentElement.dataset.id;\r\n                if(e.target.tagName === \"SPAN\")id = e.target.parentElement.parentElement.dataset.id;\r\n\r\n                nombre = document.querySelector(`div[data-id=\"${id}\"] h4`).textContent;\r\n                precio = parseInt(document.querySelector(`div[data-id=\"${id}\"] #precio`).textContent);\r\n                duracion = parseInt(document.querySelector(`div[data-id=\"${id}\"] #duracion`).textContent);\r\n\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea editar el servcio?',\r\n                    html: `<form class=\"formulario\" action=\"/admin/servicios/editar\" method=\"POST\">\r\n                                <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del servicio\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                        <label data-num=\"25\" class=\"count-charts\" for=\"\">25</label>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"precio\">Precio:</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"number\" placeholder=\"Precio del servicio\" id=\"precio\" name=\"precio\" value=\"${precio}\" requiered>\r\n                                        <label for=\"\">$</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"duracion\">Duracion:</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"number\" min=\"10\" max=\"120\" placeholder=\"Duracion en minutos del servicio\" id=\"duracion\" name=\"duracion\" value=\"${duracion}\" disabled>\r\n                                        <label for=\"\">min</label>\r\n                                    </div>\r\n                                </div>\r\n                                <input class=\"formulario__submit--servicio\" type=\"submit\" value=\"Actualizar\">\r\n                           </form>`,\r\n                    showCancelButton: true,\r\n                    showConfirmButton: false,\r\n                    cancelButtonText: 'Cancelar',\r\n                    \r\n                });\r\n                countchars();\r\n            } //cierre del if   \r\n        }); //cierre de addeventlistener\r\n    }); //cierre del foreach\r\n\r\n    \r\n    //////////////// funcion contadores de caracteres /////////////////////\r\n    countchars();      //// se aplicado casi de manera general\r\n    function countchars(){\r\n        const numinput = document.querySelectorAll('.count-charts');  \r\n        numinput.forEach(element =>{ //element es cada label\r\n            element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n            element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                element.textContent = element.dataset.num-e.target.value.length;\r\n                  \r\n                if(element.dataset.num-e.target.value.length <= 0){\r\n                    let cadena = e.target.value.slice(0, element.dataset.num);\r\n                    e.target.value = cadena;\r\n                    element.textContent = 0;\r\n                }\r\n            });\r\n        });\r\n    }\r\n     \r\n    if(document.querySelector('.alerta')){\r\n        setTimeout(() => {\r\n            document.querySelector('.alerta').remove();\r\n        }, 5000);\r\n    }\r\n    \r\n    })();"]}