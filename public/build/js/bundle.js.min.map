{"version":3,"sources":["dashboard.js","administracion.js","calendariocitas.js","citas.js","clientes.js","configuracion.js","creardcto.js","dash_cliente.js","dash_cliente_assign.js","descuentos.js","detallepago.js","empleados.js","facturacion.js","fechadesc.js","finalizcita.js","graficas.js","malla.js","paginaini.js","promos.js","reportes.js","servicios.js","slider.js"],"names":["scrolnav","document","querySelectorAll","forEach","enlace","classList","contains","querySelector","firstElementChild","nextElementSibling","textContent","scrollIntoView","behavior","negocios","label","barra","bar","negocio","value","add","toFixed","style","width","btns_nav_empleados","Element","addEventListener","e","target","btn","remove","pagina","id","dia","this","checked","i","parentElement","children","disabled","entrada","puthoras","nextselect","firstChild","removeChild","subhora","split","hora","parseInt","option","createElement","appendChild","loginuser","roluser","btnscrearcita","totalcitas","citaspending","usuarios","servicios","emplserv","fechadesc","onlymalla","filtradas","malla","Idpxtemp","gettimeservice","horasdisponibles","horacitas","getservices","timeservice","allclientes","getmalla","getemplserv","getfechadesc","Promise","all","fetch","json","inputusuario","element","nombre","apellido","$","select2","dropdownParent","cargarusuarios","selectservicios","on","llamadoempleados","cargaservicios","inputfecha","fechaactual","Date","year","getFullYear","mes","getMonth","getDate","deshabilitarfecha","min","deshabilitarfechaanterior","error","console","log","url","respuesta","filter","cita","idempleado","estado","calendarEl","getElementById","FullCalendar","Calendar","theme","initialView","locale","events","dateClick","x","mostrarcitas","dateStr","render","length","dataset","fecha","toLocaleDateString","weekday","day","month","borrarhtml","start","li","divcontent","divcol1","divcol2","nomrecliente","nombrecliente","servicio","nameservicio","estadocita","onclick","cambiarestado","citahora12","hora_fin","toLocaleString","hour","minute","hour12","reprogramar","functReprogramar","inputradio","filtro","elemento","dialogo","cerrarDialogoExterno","event","close","removeEventListener","crear","preventDefault","showModal","setAttribute","removeAttribute","limpiarformdialog","readOnly","select_date","id_servicio","divcampovalor","precio","required","mostrarcampovalor","idempleados","reduce","result","obj","idservicio","includes","empleado_id","map","getUTCDay","id_empleado","id_dia","professionals","selected","find","cargarprofesionales","options","gethoras","objmalla","horario","inicioturno","inidescanso","findescanso","finturno","substring","calcularhorarios","divhoras","divhora","parrafohora","horaformat12","hora24","horaformat24","seleccionarhora","imprimirhorashtml","horaInicio","horaFin","horarioActual","horarioFinal","setTime","getTime","getHours","toString","padStart","minutos","getMinutes","hora12","deshabilthoraprevia","c","action","id_usuario","valorcita","val","trigger","mallaRepro","h","insertAdjacentHTML","cargardatoscliente","Swal","fire","customClass","confirmButton","cancelButton","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","isConfirmed","reset","evento","filtros","selectfiltro","selectfecha","crearcita","crearcitanoreg","programar","idprofesional","selectedIndex","html","showConfirmButton","window","location","citas","onlyfechadesc","onlycitas","formulariocliente","titulo","submit","usuario","campovalor","didOpen","empleados","eventofecha","validarfechaydia","fecha_fin","some","mensajedivhoras","r2","horario1","horario2","mensaje","msj","valstatus","previousElementSibling","tr","idcita","descripcion","nameservice","namepro","fechacita","horacita","namecliente","selectservice","inputdate","cargarcita","crearcliente","editar","hab_desh","objform","movil","email","password","countchars","num","cadena","slice","arraymediospago","inputmediospago","btnbtnmediopago","resultado","input","r","mediopago","marcarmediospago","datos","FormData","append","method","body","imprimirmensaje","formhabilitarempleado","selectempleado","restriccion","radioadmin","formsetearpass","selectsetearpass","color1","color2","selecttimeserv","marcartiemposervicio","msjtext","tipo","ubicacion","insertBefore","setTimeout","tiemposervicio","categoria","product_serv","tipodcto","dcto1","dcto2","dcto2Valor","fechaini","valorservicio","imprimirvalor","valoringresado","Math","round","setDate","max","fechafin","fechaposterior","profesionales","selectdate","eliminarcitas","crearselectprofesionals","idservice","urlparams","URLSearchParams","search","get","valordcto","serviciotext","validarofertaselected","eliminarcita","cancelarcita","telcliente","floor","obtenercitas","async","reservarcita","id_empserv","hoy","toLocaleTimeString","enviarcita","reload","setInterval","eliminar","sendmsj","nombreproducto","dcto","valorfinal","eventos","icon","footer","recibido","devolucion","fecha_pago","hora_pago","valorpromo","valor_servicio","total","anularpagofact","actualizarfilacita","formulariofactura","divcampostags1","divcampostags2","tagselect1","tagselect2","tagsinputhidden1","tagsinputhidden2","selectemployee","eliminaremployee","empleadosapi","totalservicios","tags1","tags2","objservicio","mostrarservicio","nombreservicio","tagselect","divtag","span","cargarselects","tag","actualizarinputhidden","borrarservicio","skill","empleado","href","departamento","ciudad","direccion","cargarempleado","valorapagar","calculo","valorservice","NaN","cargarvalorservicio","cargarservicios","obtenermediospago","mediospago","selectmediospago","cargarmediospago","viewdates","fechas","eliminarfecha","dates","limpiarfechas","div","parrafo","icondelete","imprimirfechas","finalizarcitas","valueservice","fincita","promodcto","valorpromodcto","promodctovalor","tipocita","btndesc","selectdcto","aplicarpromo","obtenervalorservicio","mostrarcampodesc","cierretotal","citasrealizadas","citascancelado","valorcitas","citas100","progreso","url1","respuesta1","resultado1","url2","respuesta2","resultado2","reverse","date","totaldia","facturacion","ctx","getContext","Chart","type","data","labels","datasets","borderColor","backgroundColor","scales","y","beginAtZero","plugins","legend","display","printgrafica1","circle","strokeDashoffset","animacioncircle","putoptions","select","turnosemployee","horas","Array","radio","j","btnmenu","navmenu","toggle","reportes__btns","reportebtn","tagName","eliminarservicio","duracion","user","swiper","Swiper","el","slideClass","createElements","autoplay","delay","loop"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {scrolnav(); });\r\n\r\nfunction scrolnav() {\r\n    const enlaces = document.querySelectorAll('.dashboard__menu a');  //selecicona el elemento nav y sus enelaces \r\n    enlaces.forEach( function(enlace){  //me recorre los enlaces del elemento NAV seleccionado \r\n        if(enlace.classList.contains('dashboard__enlace--actual')){\r\n            const seccion = document.querySelector('.'+enlace.firstElementChild.nextElementSibling.textContent);\r\n            seccion.scrollIntoView({behavior: 'smooth'});\r\n        } \r\n    });\r\n}\r\n/*\r\nfunction cerrarDialogoExterno(event, dialogo) {\r\n    console.log(event.target);\r\n    if (event.target === dialogo) {\r\n      dialogo.close();\r\n      document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n    }\r\n  }*/","(function(){\r\n\r\n    //////////////////////bar progress //////////////////////\r\n    if(document.querySelector('.barraprogreso')){\r\n        const negocios = document.querySelectorAll('#negocio');\r\n        const label = document.querySelector('.barraprogreso__label');\r\n        const barra = document.querySelector('.barraprogreso__barra');\r\n\r\n        let bar = 0;\r\n        negocios.forEach(negocio=>{if(negocio.value)bar++;});\r\n        barra.classList.add('animation');\r\n        label.textContent = ((bar*100)/11).toFixed(1)+'%';\r\n        const animationbarra = document.querySelector('.animation');\r\n        animationbarra.style.width = label.textContent; //barra de progreso dinamicamente\r\n        //\r\n    }\r\n\r\n\r\n    /////////////////// paginacion de empleado, malla, actualizar-empleado //////////////////\r\n    if(document.querySelector('.cambiopaginas')){ //elemento en views/dash-cliente.php y en viewa/admin/adminconfig/index.php\r\n        const btns_nav_empleados = document.querySelectorAll('.cambiopaginas span');\r\n        btns_nav_empleados[0].classList.add('resaltar'); //resaltamos el primer enlace o btn\r\n        if(document.querySelector('.perfil')){\r\n            document.querySelector('.pagina3').classList.add('mostrarseccion'); \r\n        }else{\r\n            document.querySelector('.pagina1').classList.add('mostrarseccion'); //mostramos la primera seccion\r\n        }\r\n        btns_nav_empleados.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{ //cada btn o enlace\r\n\r\n                if(!e.target.classList.contains('resaltar')){\r\n                    btns_nav_empleados.forEach(btn=>btn.classList.remove('resaltar'));\r\n                    e.target.classList.add('resaltar');\r\n                }\r\n\r\n                const paginas = document.querySelectorAll('.paginas'); //seleccionamos las secciones o paginas a mostrar\r\n                paginas.forEach(pagina => pagina.classList.remove('mostrarseccion')); ////quitamos la class mostrarseccion a todas las secciones\r\n                document.querySelector(`.${e.target.id}`).classList.add('mostrarseccion'); //añadimos la class mostrarseccion a la la seccion o pagina correspondiente\r\n            });\r\n        });\r\n    }\r\n    \r\n\r\n    ///////////////////// habilita/deshabiita inputs de los dias de la malla de turnos con el checkbox/////////////\r\n    const dias = document.querySelectorAll(\".dia input[type=checkbox]\");\r\n    dias.forEach(dia => {\r\n        dia.addEventListener('change', function(e){\r\n            if(this.checked){\r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = false;\r\n            }else{ \r\n                for(let i=0; i<4; i++)\r\n                e.target.parentElement.nextElementSibling.children[i].disabled = true;\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    ////////////////////// carga de horas en los select de la malla////////////////////////\r\n    const entradas = document.querySelectorAll('#entrada');\r\n    entradas.forEach(entrada =>{\r\n        entrada.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            puthoras(nextselect, e);\r\n        });\r\n    });\r\n\r\n    function puthoras(nextselect, e){\r\n        while(nextselect.firstChild)nextselect.removeChild(nextselect.firstChild);\r\n        let subhora = e.target.value.split(':');\r\n        let hora = parseInt(subhora[0]+subhora[1]);\r\n\r\n        for(let i = 0; hora<2300; i++){\r\n            let option = document.createElement('OPTION');\r\n            hora+=30;\r\n            if(hora%100 == 60)hora+=40;\r\n            option.value = hora;\r\n            subhora[0]= parseInt(hora/100);\r\n            subhora[1] = hora%100;\r\n            if(subhora[1] === 0)subhora[1] = \"00\";\r\n            option.textContent = subhora[0]+':'+subhora[1];\r\n            nextselect.appendChild(option);\r\n        }\r\n        nextselect.addEventListener('change', (e)=>{\r\n            let nextselect = e.target.nextElementSibling; //select siguiente\r\n            if(nextselect)puthoras(nextselect, e);\r\n        });\r\n    }\r\n\r\n    //////////////// funcion contadores de caracteres /////////////////////\r\n    /*countchars();\r\n    function countchars(){\r\n        const numinput = document.querySelectorAll('.count-charts');  \r\n        numinput.forEach(element =>{ //element es cada label\r\n            element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n            element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                element.textContent = element.dataset.num-e.target.value.length;\r\n                  \r\n                if(element.dataset.num-e.target.value.length <= 0){\r\n                    let cadena = e.target.value.slice(0, element.dataset.num);\r\n                    e.target.value = cadena;\r\n                    element.textContent = 0;\r\n                }\r\n            });\r\n        });\r\n    }*/\r\n\r\n})();","////////////////////full calender//////////////////////\r\n\r\n(function(){\r\n  if(document.querySelector('.calendario')){\r\n    const loginuser = document.querySelector('#loginuser').value; //obtiene el id del empleado, admin, o superior.\r\n    const roluser = document.querySelector('#roluser').value; //obtener el rol de usuario logueado 1 = empleado, >1 = admin, superior, soporte tec\r\n    document.querySelector('#loginuser').remove();\r\n    document.querySelector('#roluser').remove();\r\n\r\n    const btnscrearcita = document.querySelectorAll('.btncrearcita');\r\n    let totalcitas, citaspending, filtradas = [], usuarios, servicios, malla=[], emplserv, fechadesc, onlymalla;\r\n    let Idpxtemp=0, gettimeservice=0, horasdisponibles = [], horacitas=[];\r\n          \r\n  (async ()=>{\r\n      try {\r\n          const [getservices, timeservice, allclientes, getmalla, getemplserv, getfechadesc] = await Promise.all([fetch(\"/admin/api/getservices\"), fetch(\"/admin/api/gettimeservice\"), fetch(\"/admin/api/allclientes\"), fetch(\"/admin/api/malla\"), fetch(\"/admin/api/getemployee_services\"), fetch(\"/admin/api/getfechadesc\")]); \r\n          servicios = await getservices.json(); \r\n          gettimeservice = await timeservice.json();\r\n          usuarios = await allclientes.json();\r\n          malla = await getmalla.json();\r\n          emplserv = await getemplserv.json();\r\n          fechadesc = await getfechadesc.json();\r\n          cargarusuarios();\r\n          cargaservicios();\r\n          deshabilitarfechaanterior();\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n  })();\r\n\r\n  (async ()=>{\r\n    try{\r\n        const url = \"/admin/api/getallcitas\"; //llamado a la API REST para traer todas las citas\r\n        const respuesta = await fetch(url); \r\n        totalcitas = await respuesta.json(); \r\n        if(roluser == 1)totalcitas = totalcitas.filter(cita => cita.idempleado == loginuser); //me trae las citas solo del empleado logueado\r\n        console.log(totalcitas);\r\n        citaspending = totalcitas.filter(cita => cita.estado == \"Pendiente\");\r\n        rendercalendar();\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  })();\r\n\r\n  function rendercalendar(){\r\n    var calendarEl = document.getElementById('calendar');\r\n    var calendar = new FullCalendar.Calendar(calendarEl, {\r\n      theme: true,\r\n      initialView: 'dayGridMonth',\r\n      locale: 'es',\r\n      events: citaspending,\r\n      //[{title: \"cita\", start: \"2023-11-24\", display: \"background\", color: \"#ff0000\"}, {title: \"lupe\", start: \"2023-11-27\", display: \"background\"}, {title: \"lupe\", start: \"2023-11-30\", color: 'yellow',}],\r\n      dateClick: (x)=>{  mostrarcitas(x.dateStr); }\r\n    });\r\n    calendar.render();\r\n  }\r\n\r\n\r\n  ////////////////// filtrar citas por estado de pendiente, finalizadas o todas//////////////////\r\n  const filtros = document.querySelectorAll('.citas__ctrlsfiltros input[type=\"radio\"]');  //seleccionamos los 3 inputs tipo radio\r\n  filtros.forEach(inputradio=>{\r\n    inputradio.addEventListener('input', (e)=>{filtrarcitas(e.target.value);});\r\n  });\r\n\r\n  function filtrarcitas(filtro){ //filtro es un string que puede tomar 'Todas', 'Finalizada', 'Pendiente'..\r\n    filtradas = filtro=='Todas'?totalcitas:totalcitas.filter(elemento => elemento.estado == filtro);\r\n    mostrarcitas(document.querySelector('.fechaformateada').dataset.fecha);\r\n  }\r\n\r\n  function mostrarcitas(x){\r\n    if(!filtradas.length)filtradas = citaspending;\r\n    document.querySelector('.fechaformateada').dataset.fecha = x;\r\n\r\n    const fecha = new Date(x+'T00:00:00-05:00');\r\n    //var opcionesDeFormato = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    document.querySelector('.diasemana').textContent = fecha.toLocaleDateString('es-ES', {weekday: 'long'});\r\n    document.querySelector('.dia').textContent = fecha.toLocaleDateString('es-ES', {day: 'numeric'});\r\n    document.querySelector('.mesaño').textContent = fecha.toLocaleDateString('es-ES', {month: 'long'})+\" \"+fecha.toLocaleDateString('es-ES', {year: 'numeric'});\r\n\r\n    borrarhtml(document.querySelector('.citas__lista'));\r\n\r\n    const citasxdia = filtradas.filter(cita => cita.start === x);\r\n\r\n    citasxdia.forEach(cita => {\r\n      const li = document.createElement('LI');\r\n      li.classList.add(\"listacita\");\r\n      const divcontent = document.createElement('DIV');\r\n      divcontent.classList.add('listacita-content');\r\n      const divcol1 = document.createElement('DIV');\r\n      divcol1.classList.add('col1');\r\n      const divcol2 = document.createElement('DIV');\r\n      divcol2.classList.add('col2');\r\n      const nomrecliente = document.createElement('P');\r\n      nomrecliente.classList.add('nombrecliente');\r\n      nomrecliente.textContent = cita.nombrecliente;\r\n      const fecha = document.createElement('P');\r\n      fecha.classList.add('fecha');\r\n      fecha.textContent = cita.start;\r\n      const servicio = document.createElement('P');\r\n      servicio.classList.add('servicio');\r\n      servicio.textContent = cita.nameservicio;\r\n      const estadocita = document.createElement('P');\r\n      estadocita.classList.add('estadocita', cita.estado=='Pendiente'?'citapendiente':'citafinalizada');\r\n      estadocita.textContent = cita.estado;\r\n      estadocita.dataset.id = cita.id;\r\n      estadocita.onclick = cambiarestado;\r\n      const hora = document.createElement('P');\r\n      hora.classList.add('hora');\r\n      const citahora12 = new Date(\"2000-01-01T\" + cita.hora_fin).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n      hora.textContent = citahora12;\r\n      const reprogramar = document.createElement('I');\r\n      reprogramar.classList.add('fa-solid', 'fa-clock');\r\n      reprogramar.id = \"reprogramar\";\r\n      reprogramar.dataset.id = cita.id;\r\n      \r\n      divcol1.appendChild(nomrecliente);\r\n      divcol1.appendChild(fecha);\r\n      divcol1.appendChild(servicio);\r\n      divcol2.appendChild(estadocita);\r\n      divcol2.appendChild(hora);\r\n      divcol2.appendChild(reprogramar);\r\n      divcontent.appendChild(divcol1);\r\n      divcontent.appendChild(divcol2);\r\n      li.appendChild(divcontent);\r\n      document.querySelector('.citas__lista').appendChild(li);\r\n    });\r\n    functReprogramar();\r\n  }\r\n\r\n////////////////////// modal dialog /////////////////////////\r\n  const dialogo = document.getElementById(\"miDialogo\");\r\n  btnscrearcita.forEach(crear=>crear.addEventListener('click', (e)=>{\r\n    e.preventDefault();\r\n    dialogo.showModal();\r\n    if(e.target.id===\"crearcita\"){\r\n      document.querySelector('#cliente1').classList.remove('ocultar');\r\n      document.querySelector('#cliente2').classList.add('ocultar');\r\n      document.querySelector('#nombrecliente').setAttribute('disabled', true);\r\n      document.querySelector('#usuario').removeAttribute(\"disabled\");  //cuando se abre el modal de reporogramar se deshabilita el select, aqui vuelve y se habilita\r\n      document.querySelector('#nousuario').setAttribute('disabled', true);\r\n      limpiarformdialog();\r\n    }else{\r\n      document.querySelector('#cliente1').classList.add('ocultar');\r\n      document.querySelector('#cliente2').classList.remove('ocultar');\r\n      document.querySelector('#usuario').setAttribute('disabled', true);\r\n      document.querySelector('#nombrecliente').removeAttribute('disabled');\r\n      document.querySelector('#nombrecliente').readOnly = false; \r\n      document.querySelector('#nousuario').removeAttribute('disabled');\r\n      limpiarformdialog();\r\n    }\r\n    document.addEventListener(\"click\", cerrarDialogoExterno);\r\n  }));\r\n  function cerrarDialogoExterno(event) {\r\n    if (event.target === dialogo || event.target.value === 'cancelar') {\r\n      dialogo.close();\r\n      document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n    }\r\n  }\r\n\r\n  //////////////////////cargar usuarios//////////////////////\r\n  function cargarusuarios(){\r\n    const inputusuario = document.querySelector('#usuario');\r\n    usuarios.forEach(element => {\r\n        if(element.id!=2){  //no muestra el registro de Usuario No Registrado\r\n            const option = document.createElement('OPTION');\r\n            option.value = element.id;\r\n            option.textContent = element.nombre+' '+element.apellido;\r\n            inputusuario.appendChild(option);\r\n        }\r\n    });\r\n    $('#usuario').select2({dropdownParent: $(\"#miDialogo\"), width: '100%'}); \r\n  }\r\n\r\n  //////////////////////cargar servicios//////////////////////\r\n  function cargaservicios(){\r\n    const selectservicios = document.querySelector('#servicios');\r\n    servicios.forEach(element => {\r\n        const option = document.createElement('OPTION');\r\n        option.value = element.id; //id de la tabla servicio\r\n        option.textContent = element.nombre;\r\n        selectservicios.appendChild(option);\r\n    });\r\n    $('#servicios').select2({dropdownParent: $(\"#miDialogo\"), width: '100%'});\r\n    $(\"#servicios\").on('change', e=>llamadoempleados(e.target.value));\r\n  }\r\n\r\n  function mostrarcampovalor(id){\r\n    const divcampovalor = document.querySelector('.campovalor');\r\n    servicios.forEach(element => {\r\n      if(element.id === id){\r\n        if(element.precio === null){\r\n          divcampovalor.style = 'display: flex';\r\n            document.querySelector('#valorpersonalizado').required = true;\r\n            document.querySelector('#tipocita').value = 0;  // 0 = tipocita es personalizado sin valor fijo\r\n        }else{\r\n          divcampovalor.style = 'display: none';\r\n          document.querySelector('#valorpersonalizado').required = false;\r\n          document.querySelector('#tipocita').value = 1; // 1 = tipocita es de valor fijo\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const select_date = document.querySelector('#date');\r\n  select_date.addEventListener('input', (evento)=> {\r\n    borrarhtml(document.querySelector('#horas')); //donde se ponen las horas\r\n    Idpxtemp=0;\r\n    const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana 1 = lunes, 6 = sabado, 0 = domingo\r\n    llamadoempleados(document.querySelector('#servicios').value); //se envia id de la tabla servicios\r\n  });\r\n\r\n\r\n  function llamadoempleados(id_servicio){\r\n    mostrarcampovalor(id_servicio);\r\n    //const idempleados = emplserv.filter(element => element.idservicio == id_servicio).map(element => element.idempleado);\r\n    const idempleados = emplserv.reduce((result, obj)=>{ \r\n      if(obj.idservicio == id_servicio)result = [...result, obj.idempleado];\r\n        return result;\r\n    }, []); //los ids de los empleados asociados al servicio elegido\r\n    ///obtenr el id del empleado que en la fecha seleccionada tiene descanso\r\n    const x = fechadesc.filter(element => (element.fecha === select_date.value)&&(idempleados.includes(element.empleado_id))).map(element=>element.empleado_id);\r\n    ////obtener la malla horaria de los empleados ya filtrados\r\n    const dia = new Date(select_date.value).getUTCDay();\r\n    onlymalla = malla.filter(obj => (idempleados.includes(obj.id_empleado)&&obj.id_dia==dia)&&!x.includes(obj.id_empleado));\r\n    ///////////cargar los profesionales//////////////\r\n    cargarprofesionales();\r\n    const professionals = document.querySelector('#professionals');\r\n    if(idempleados.includes(Idpxtemp)){\r\n      for(let i = 1; i<professionals.options.length; i++)\r\n        if(professionals.options[i].value === Idpxtemp)\r\n            professionals.options[i].selected = true;\r\n    }else{\r\n      borrarhtml(document.querySelector('#horas'));\r\n      Idpxtemp=0;\r\n    }\r\n  }\r\n\r\n  function cargarprofesionales(){\r\n    const professionals = document.querySelector('#professionals');\r\n    borrarhtml(professionals);\r\n    const option = document.createElement('OPTION');\r\n    option.value = '';\r\n    option.textContent = ' -Selecionar- ';\r\n    option.selected = true;\r\n    option.disabled = true;\r\n    professionals.appendChild(option);\r\n    onlymalla.forEach(element => {\r\n        const option = document.createElement('OPTION');\r\n        option.value = element.id_empleado; //id de la tabla empleados\r\n        option.textContent = emplserv.find(x=>x.idempleado===element.id_empleado).nombre;\r\n        professionals.appendChild(option); \r\n    });\r\n  }\r\n  document.querySelector('#professionals').addEventListener('change', (e)=>{\r\n    Idpxtemp = e.target.value;  //en esta variables guadamos al empleado elegido\r\n    gethoras(onlymalla.find(x=>x.id_empleado===e.target.value));\r\n  });\r\n\r\n\r\n  function gethoras(objmalla){\r\n    borrarhtml(document.querySelector('#horas'));\r\n    const fecha = select_date.value;\r\n    let horario = [objmalla.inicioturno, objmalla.inidescanso, objmalla.findescanso, objmalla.finturno];\r\n    horario = horario.map(hora =>hora = hora.substring(0,2)+':'+hora.substring(2,4));\r\n    horacitas = citaspending.filter(cita => (cita.idempleado === objmalla.id_empleado&&cita.start === fecha)).map(element =>  element.hora_fin);\r\n    calcularhorarios(horario[0], horario[1]);\r\n    calcularhorarios(horario[2], horario[3]);\r\n    imprimirhorashtml();\r\n  }\r\n\r\n  function calcularhorarios(horaInicio, horaFin) {\r\n    const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n    const horarioFinal = new Date(`01/01/2000 ${horaFin}`);               //1 minuto 60segundos\r\n    //horarioFinal.setTime(horarioFinal.getTime() - Math.floor(gettimeservice)*60000); //evitar que se programe citas mas alla de las horas de salida\r\n    \r\n    horarioFinal.setTime(horarioFinal.getTime() - ((gettimeservice*80)/100)*60000);\r\n\r\n    while (horarioActual <= horarioFinal) {\r\n      const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n      const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n      //console.log(`${hora}:${minutos}`);\r\n      const validate = horacitas.includes(`${hora}:${minutos}:00`); //horacitas arreglo con las horas ya seleccionadas\r\n      if(!validate){\r\n        const timepohora = new Date(\"2000-01-01T\" + `${hora}:${minutos}`);\r\n        // Obtener la hora en formato de 12 horas\r\n        const hora12 = timepohora.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n        horasdisponibles = [...horasdisponibles, {horaformat12: hora12, horaformat24: `${hora}:${minutos}:00`}];\r\n      }\r\n  \r\n      horarioActual.setTime(horarioActual.getTime() + gettimeservice * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n    }\r\n  }\r\n\r\n  function imprimirhorashtml(){\r\n    const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n    divhoras.classList.remove('dianodisponible-js');\r\n    horasdisponibles.forEach(hora => {\r\n        const divhora = document.createElement('DIV');\r\n        divhora.classList.add(\"citas__hora\");\r\n        const parrafohora = document.createElement('P');\r\n        parrafohora.textContent = hora.horaformat12;\r\n        parrafohora.dataset.hora24 = hora.horaformat24;\r\n        parrafohora.onclick = seleccionarhora;\r\n        parrafohora.classList.add(\"texthora\");\r\n        divhora.appendChild(parrafohora);\r\n        divhoras.appendChild(divhora);\r\n    });\r\n  }\r\n\r\n  function seleccionarhora(e){\r\n    const deshabilthoraprevia = document.querySelector('.horaselect');\r\n    if(deshabilthoraprevia)\r\n        deshabilthoraprevia.classList.remove('horaselect');\r\n    e.target.parentElement.classList.add('horaselect'); //class agregada en dash-cliente/_cliente.scss\r\n    //cargar el input type hidden name = hora_fin del formulario para el envio\r\n    document.querySelector('#hora_fin').value = e.target.dataset.hora24;\r\n  }\r\n\r\n  //////////////////////////////REPROGRAMAR CITAS/////////////////////////////////////////\r\n  functReprogramar();\r\n  function functReprogramar(){\r\n    const reProgramar = document.querySelectorAll('#reprogramar');\r\n    reProgramar.forEach(btn => btn.addEventListener('click', (e)=>{\r\n      const c = citaspending.find(cita=>cita.id===e.target.dataset.id); //solo citas pendiente\r\n      if(c){  //si se programa una cita NO pendiente no muestra el modal\r\n        dialogo.showModal();\r\n        document.addEventListener(\"click\", cerrarDialogoExterno);\r\n        document.querySelector('#cliente1').classList.add('ocultar'); //oculta el el div donde esta el select de los usuarios\r\n        document.querySelector('#cliente2').classList.remove('ocultar'); //muestra el div donde esta el input de los usuarios no registrados\r\n        document.querySelector('#usuario').setAttribute('disabled', true); //deshabilita el select de usuarios\r\n        document.querySelector('#nousuario').removeAttribute('disabled');\r\n        cargardatoscliente(c);\r\n      }\r\n    }));\r\n  }\r\n  function cargardatoscliente(c){\r\n    document.querySelector('#formcrearcitas').action = \"/admin/citas\";\r\n    const professionals = document.querySelector('#professionals');\r\n    document.querySelector('#id').value = c.id;\r\n    document.querySelector('#nousuario').value = c.id_usuario;\r\n    document.querySelector('#nombrecliente').value = c.nombrecliente;\r\n    document.querySelector('#nombrecliente').readOnly = true; \r\n    document.querySelector('#valorpersonalizado').value = c.valorcita;  //****este se modifica****//\r\n    document.querySelector('#date').value = c.start;   //*****este se modifica****//\r\n    document.querySelector('#hora_fin').value = c.hora_fin;\r\n    $('#servicios').val(c.idservicio).trigger('change'); //selecciona el select y segun su value lo elige, y dispara el evento por jquery\r\n    for(let i = 1; i<professionals.options.length; i++)\r\n      if(professionals.options[i].value === c.idempleado)professionals.options[i].selected = true;\r\n    \r\n    const mallaRepro = onlymalla.find(x=>x.id_empleado===c.idempleado); //cuando a un empleado se le quita o se cambia un dia ya su id no se encuentra en la malla de ese dia por lo tanto aqui, se envia obj undefine\r\n    if(mallaRepro)gethoras(mallaRepro);  \r\n    const divhoras = document.querySelector('#horas');\r\n    const h = new Date(\"2000-01-01T\" + c.hora_fin).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n    divhoras.insertAdjacentHTML('afterbegin', `<div class=\"citas__hora horaselected\"><p class=\"texthora\">${h}</p></div>`);\r\n  }\r\n  /////////////////////////  fin Reprogramar  ////////////////////////////////\r\n\r\n  function deshabilitarfechaanterior(){\r\n    const inputfecha = document.querySelector('#date');\r\n    const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n    const year = fechaactual.getFullYear(); // obiene el año actual\r\n    const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n    const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n    let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n    if(mes<10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n    if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n    if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n    inputfecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n  }\r\n\r\n  function cambiarestado(e){\r\n    console.log(e.target);\r\n    Swal.fire({\r\n      customClass: {\r\n          confirmButton: 'sweetbtnconfirm',\r\n          cancelButton: 'sweetbtncancel'\r\n      },\r\n      title: 'Desea Cancelar La Cita?',\r\n      text: \"SE CANCELARA LA CITA, PUEDES CREAR UNA NUEVA CUANDO LO DESEES.\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si',\r\n      cancelButtonText: 'No',\r\n      \r\n    }).then((result) => {\r\n        if(result.isConfirmed){  \r\n          Swal.fire('Cita Cancelada', '', 'success')          \r\n        } \r\n    })\r\n  }\r\n\r\n  ///////////////////// borrar html ////////////////////////\r\n  function borrarhtml(elemento){\r\n    horasdisponibles = [];\r\n    while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n  }\r\n\r\n  ////////////// Limpiar formulario de crear citas del dialog/////////////////\r\n  function limpiarformdialog(){\r\n    document.querySelector('#formcrearcitas').reset();\r\n    document.querySelector('#formcrearcitas').action = \"/admin/citas/crear\";\r\n    $('#servicios').val(0).trigger('change');\r\n  }\r\n    \r\n}\r\n})();","(function(){\r\n\r\n    if(document.querySelector('#dashboardcitas')){//en admin/citas/index.php\r\n        \r\n        const filtros = document.querySelector('#filtros-personalizado');\r\n        const selectfiltro = document.querySelector('#selectprofesional');\r\n        const selectfecha = document.querySelector('#fecha'); //filtro de solo fechas\r\n        const crearcita = document.querySelector('#crearcita');\r\n        const crearcitanoreg = document.querySelector('#crearcitanoreg');\r\n        const programar = document.querySelectorAll('.programar');\r\n    \r\n        if(filtros){\r\n            filtros.addEventListener('click', ()=>{\r\n                let idprofesional = selectfiltro.options[selectfiltro.options.selectedIndex].value; //toma el id del select profesional\r\n        \r\n                if(idprofesional){\r\n                    Swal.fire({\r\n                        customClass: {\r\n                        //confirmButton: 'sweetbtnconfirm',\r\n                        // cancelButton: 'sweetbtncancel'\r\n                        },\r\n                        title: 'Consulta el profesional por fecha:',\r\n                        html: `<form class=\"formulario\" action=\"/admin/citas/consultaxprofesxfecha?pagina=1\" method=\"POST\">    \r\n                                    <div class=\"formulario__campo\">\r\n                                        <input class=\"formulario__input\" id=\"fecha\" type=\"date\" name=\"fecha\" value=\" \" required>\r\n                                    </div>\r\n                                    <input type=\"hidden\" name=\"profesional\" value=\"${idprofesional}\">\r\n                                    <input class=\"btnsmall\" type=\"submit\" value=\"Consultar\">\r\n                            </form>`,\r\n                        showCancelButton: false,\r\n                        showConfirmButton: false,\r\n                        //confirmButtonText: 'Aceptar',\r\n                        //cancelButtonText: 'Cancelar',\r\n                    })/*.then((result) => {\r\n                        if (result.isConfirmed) {\r\n                        Swal.fire('Actualizando', '', 'success')\r\n                        //modificar el servicio\r\n                        } \r\n                    })*/\r\n                }\r\n            });\r\n        }\r\n\r\n        selectfecha.addEventListener('input', e => {\r\n            /*(async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('fecha', e.target.value);\r\n                try {\r\n                    const url = \"/admin/api/filtroxfecha\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    console.log(resultado);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();*/\r\n            window.location = `/admin/citas/filtroxfecha?pagina=1&fecha=${e.target.value}`;\r\n        });\r\n\r\n\r\n        //////////////////////////////////////////modal de crear y reprogramar citas///////////////////////////////////////////////\r\n\r\n        let gettimeservice=0, horasdisponibles = [], horacitas = [];\r\n        //const divhoras = document.querySelector('#horas'); //donde se poenen las horas\r\n\r\n        let usuarios, servicios, emplserv, fechadesc, malla, citas;\r\n        let onlyfechadesc, onlymalla, onlycitas;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/gettimeservice\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                gettimeservice = await respuesta.json(); //traer el tiempo de duracion del servicio ej: 30, 35, 40min etc\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/allclientes\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                usuarios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n                \r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\"; //llamado a la API REST para trer todas las fechas de descanso de todos los empleados.\r\n                const respuesta = await fetch(url); \r\n                fechadesc = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json(); //se trae las citas de hoy en el backend se trae hora y minutos ej: 08:00 por la consulta sql TIME_FORMAT(hora_fin, '%H:%i')\r\n                console.log(citas);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        \r\n        crearcita.addEventListener('click', (e)=>{ ////crear cita\r\n            e.preventDefault();\r\n            const usuario = `<div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"usuario\">Seleccione Usuario: </label>\r\n                                <select class=\"formulario__select\" name=\"id_usuario\" id=\"usuario\" required>\r\n                                    <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                </select>\r\n                            </div>`;\r\n            const campovalor = `<div class=\"formulario__campo campovalor\" style=\"display: none;\">\r\n                                    <label class=\"formulario__label\" for=\"valorpersonalizado\">Valor personalizado: </label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"valorpersonalizado\" name=\"valorpersonalizado\">\r\n                                </div>`;\r\n            formulariocliente('Crear Cita', 'Crear', '/admin/citas/crear?pagina=1', usuario, campovalor);\r\n            cargarusuarios();\r\n            cargaservicios();\r\n            eventofecha();\r\n        });\r\n        programar.forEach(element =>{\r\n            element.addEventListener('click', (e)=>{ ///programar cita\r\n                const valstatus = e.target.parentElement.parentElement.previousElementSibling.textContent;\r\n                const usuario = `<span class=\"namecliente\"></span><span id=\"horacita\"></span>\r\n                                <input type=\"hidden\" id=\"id\" name=\"id\" value=\"\" >`;\r\n                const campovalor = `<div class=\"formulario__campo campovalor\">\r\n                                        <label class=\"formulario__label\" for=\"valorpersonalizado\">Valor personalizado: </label>\r\n                                        <input class=\"formulario__input\" type=\"number\" id=\"valorpersonalizado\" name=\"valorpersonalizado\">\r\n                                    </div>`;\r\n                if(valstatus === \"Pendiente\" || valstatus === \"Out\")\r\n                {   formulariocliente('Reprogramar Cita A:', 'Enviar', '/admin/citas?pagina=1', usuario, campovalor); //llama a citascontrolador.php\r\n                    cargarcita(e.target);\r\n                }\r\n            });\r\n        });\r\n\r\n        //////////////////////crear citas para no registrados//////////////////////\r\n        crearcitanoreg.addEventListener('click', (e)=>{ ////crear cita\r\n            e.preventDefault();\r\n            const usuario = `<div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombrecliente\">Nombre del cliente: </label>\r\n                                <input class=\"formulario__input\" id=\"nombrecliente\" name=\"nombrecliente\" type=\"text\" required>\r\n                            </div>\r\n                            <input type=\"hidden\" name=\"id_usuario\" value=\"2\" >\r\n                            `;\r\n            const campovalor = `<div class=\"formulario__campo campovalor\" style=\"display: none;\">\r\n                                    <label class=\"formulario__label\" for=\"valorpersonalizado\">Valor personalizado: </label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"valorpersonalizado\" name=\"valorpersonalizado\">\r\n                                </div>`;\r\n            formulariocliente('Cita Para Cliente No Registrado', 'Crear', '/admin/citas/crear?pagina=1', usuario, campovalor);\r\n            cargaservicios();\r\n            eventofecha();\r\n        });\r\n        \r\n\r\n        function formulariocliente(titulo, submit, action, usuario, campovalor){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form id=\"formcreareditarcita\" class=\"formulario modalform\" action=\"${action}\" method=\"POST\">\r\n                            <input type=\"hidden\" id=\"id_empserv\" name=\"id_empserv\" value=\"\" >\r\n                            <input type=\"hidden\" id=\"hora_fin\" name=\"hora_fin\" value=\"\" >\r\n                            <input type=\"hidden\" id=\"tipocita\" name=\"tipocita\" value=\"0\" >\r\n\r\n                            <div class=\"\">\r\n                                ${usuario}\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"servicios\">Seleccione Servicio: </label>\r\n                                    <select class=\"formulario__select\" name=\"idservicio\" id=\"servicios\" required>\r\n                                        <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"descripcion\">Descripcion: </label>\r\n                                    <textarea class=\"formulario__textarea\" id=\"descripcion\" name=\"descripcion\" rows=\"4\"></textarea>\r\n                                </div>\r\n                                ${campovalor}\r\n                                \r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"date\">Seleccionar Fecha:</label>\r\n                                    <input class=\"formulario__input\" id=\"date\" name=\"fecha_fin\" type=\"date\" disabled required>\r\n                                </div>\r\n\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"professionals\">Seleccione Profesional: </label>\r\n                                    <select class=\"formulario__select\" name=\"nameprofesional\" id=\"professionals\" required>\r\n                                        <option value=\"\" disabled selected> -Selecionar- </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"cliente__campohoras\" id=\"horas\">\r\n\r\n                            </div>\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: true,\r\n                showConfirmButton: false,\r\n                didOpen: () => {\r\n                    $('#servicios').select2();\r\n                    $('#usuario').select2();\r\n                }   \r\n            });\r\n            //deshabilitarfechaanterior();\r\n        }\r\n\r\n\r\n        function cargarusuarios(){\r\n            const inputusuario = document.querySelector('#usuario');\r\n            usuarios.forEach(element => {\r\n                if(element.id!=2){  //no muestra el registro de Usuario No Registrado\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = element.id;\r\n                    option.textContent = element.nombre+' '+element.apellido;\r\n                    inputusuario.appendChild(option);\r\n                }\r\n            }); \r\n        }\r\n\r\n        function cargaservicios(){\r\n            const selectservicios = document.querySelector('#servicios');\r\n            servicios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id; //id de la tabla servicio\r\n                option.textContent = element.nombre;\r\n                selectservicios.appendChild(option);\r\n            });\r\n            selectservicios.addEventListener('change', e=>cargarprofesionales(e.target.value));\r\n        }\r\n\r\n        function cargarprofesionales(id){\r\n            mostrarcampovalor(id); // me muestra el campo valor del servicio solo si es un servicio personalizado sin valor fijo\r\n            const professionals = document.querySelector('#professionals');\r\n            const empleados = emplserv.filter(Element => Element.idservicio === id);\r\n            borrarhtml(professionals);\r\n            document.querySelector('#date').disabled = true;\r\n            borrarhtml(document.querySelector('#horas'));\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' -Selecionar- ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            professionals.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado; //id de la tabla empleados\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;  //id de la tabla empserv\r\n                professionals.appendChild(option); \r\n            });\r\n            professionals.addEventListener('change', (e)=>{\r\n                document.querySelector('#date').disabled = false;\r\n                document.querySelector('#date').value = '';\r\n                deshabilitarfechaanterior();\r\n                borrarhtml(document.querySelector('#horas')); //borra en donde se ponen las horas\r\n            });\r\n        }\r\n\r\n        function mostrarcampovalor(id){\r\n            const divcampovalor = document.querySelector('.campovalor');\r\n            servicios.forEach(element => {\r\n                if(element.id === id){\r\n                    if(element.precio === null){\r\n                        divcampovalor.style = 'display: flex';\r\n                        document.querySelector('#valorpersonalizado').required = true;\r\n                        document.querySelector('#tipocita').value = 0;  // 0 = tipocita es personalizado sin valor fijo\r\n                    }else{\r\n                        divcampovalor.style = 'display: none';\r\n                        document.querySelector('#valorpersonalizado').required = false;\r\n                        document.querySelector('#tipocita').value = 1; // 1 = tipocita es de valor fijo\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function eventofecha(){\r\n            const select_date = document.querySelector('#date');\r\n            select_date.addEventListener('input', (evento)=> {\r\n                /////////borrar el campo de las horas//////////\r\n                const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n                borrarhtml(divhoras);\r\n                \r\n                const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana\r\n                validarfechaydia(evento.target.value, dia.getUTCDay());\r\n            });\r\n        }\r\n\r\n        \r\n        function validarfechaydia(fecha, dia){\r\n            \r\n            //al seleccionar fecha ya se ha seleccionado el profesional, y el profesional me contiene su id y el id de la tabla empserv\r\n            const professionals = document.querySelector('#professionals');\r\n            const idempleado = professionals.options[professionals.options.selectedIndex].value;\r\n             ////cargar el input type hidden name=id_empserv\r\n             document.querySelector('#id_empserv').value = professionals.options[professionals.options.selectedIndex].dataset.id;\r\n\r\n            onlymalla = malla[`empleado_${idempleado}`]; //obtiene solo la malla de ese empleado\r\n            onlyfechadesc = fechadesc.filter(element => idempleado === element.empleado_id);\r\n            onlycitas = citas.filter(cita => (cita.idempleado === idempleado&&cita.fecha_fin === fecha&&cita.estado === \"Pendiente\")); //obtengo las citas deacuerdo al profesional y fecha seleccionada y pendiente\r\n            console.log(onlycitas);\r\n            const r1 = onlyfechadesc.some(element => element.fecha === fecha);\r\n            if(r1){\r\n                    mensajedivhoras(\"Este dia no esta disponible!\");\r\n            }else{\r\n                /*console.log(dia);\r\n                console.log(onlymalla);*/\r\n                const r2 = onlymalla.filter(element => element.id_dia == (dia===0?7:dia));\r\n                if(r2.length){ //es pq el dia si esta en la malla\r\n                    gethoras(r2[0]); //se envia solo el dia seleccionado (obj)\r\n                }\r\n                else{ //dia no esta en la malla\r\n                    mensajedivhoras(\"Este dia no esta disponible!\");\r\n                }\r\n            }\r\n        }\r\n\r\n        function gethoras(r2){\r\n            let horario1 = [], horario2 = [];\r\n\r\n            horario1 = [...horario1, r2.inicioturno, r2.inidescanso];\r\n            horario2 = [...horario2, r2.findescanso, r2.finturno];\r\n\r\n            // me traigo un arreglo de la tabla citas de la DB con su hora segun fecha seleccionada y profesional seleccionado\r\n            //// comparo cada hora del arreglo traio con r2.iniciodescanso y si es menor lo agrego al arreglo horario1\r\n            ///luego comparo con r2.finturno y si es mayor lo agrego a arreglo horario2\r\n\r\n            horario1 = horario1.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            horario2 = horario2.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            //obtengo las horas de las citas en formato 24 de la bd segun fecha y profesional\r\n            horacitas = onlycitas.map(element =>  element.hora_fin);\r\n\r\n            for(let i = 0; i<horario1.length-1; i++){\r\n            calcularhorarios(horario1[i], horario1[i+1]);\r\n            }\r\n            for(let i = 0; i<horario2.length-1; i++)\r\n            calcularhorarios(horario2[i], horario2[i+1]);\r\n            \r\n           console.log(horasdisponibles);\r\n           //podemos validar horasdisponibles si esta vacio es pq no hay espacion o agenda llena\r\n           //mostrar alerta y no permitir pedir cita, por ahora se valida en backend\r\n           document.querySelector('#formcreareditarcita input[type=\"submit\"]').disabled = false;  //habilitar btn submit del form\r\n           imprimirhorashtml();\r\n        }\r\n\r\n        function calcularhorarios(horaInicio, horaFin) {\r\n            const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n            const horarioFinal = new Date(`01/01/2000 ${horaFin}`);               //1 minuto 60segundos\r\n            //horarioFinal.setTime(horarioFinal.getTime() - Math.floor(gettimeservice)*60000); //evitar que se programe citas mas alla de las horas de salida\r\n            \r\n            horarioFinal.setTime(horarioFinal.getTime() - ((gettimeservice*80)/100)*60000);\r\n\r\n            while (horarioActual <= horarioFinal) {\r\n              const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n              const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n              //console.log(`${hora}:${minutos}`);\r\n              const validate = horacitas.includes(`${hora}:${minutos}`); //horacitas arreglo con las horas ya seleccionadas\r\n              if(!validate){\r\n                  //hora1 = ${hora}:${minutos};\r\n                  //horatemp = hora1; + min-servicio, \r\n                  //preguntar si horatemp es menor o igual al elemento del arreglo horacitas\r\n                  //si es si\r\n                  //imprimir hora1, hacer hora1 = horatemp;\r\n                  //si es no\r\n                  //hora1 = elemento del arreglo + su duracion-serv\r\n                  //aumentar en uno al arreglo de horacitas\r\n                  //valido arribo si es si, vuelvo y repito esto\r\n                  \r\n                  const timepohora = new Date(\"2000-01-01T\" + `${hora}:${minutos}`);\r\n                  // Obtener la hora en formato de 12 horas\r\n                  const hora12 = timepohora.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n\r\n              horasdisponibles = [...horasdisponibles, {horaformat12: hora12, horaformat24: `${hora}:${minutos}`}];\r\n              }\r\n          \r\n              horarioActual.setTime(horarioActual.getTime() + gettimeservice * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n            }\r\n        }\r\n\r\n        function imprimirhorashtml(){\r\n            const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n            divhoras.classList.remove('dianodisponible-js');\r\n            horasdisponibles.forEach(hora => {\r\n                const divhora = document.createElement('DIV');\r\n                divhora.classList.add(\"cliente__hora\");\r\n                const parrafohora = document.createElement('P');\r\n                parrafohora.textContent = hora.horaformat12;\r\n                //parrafohora.dataset.hora = hora.replace(':', '');\r\n                parrafohora.dataset.hora24 = hora.horaformat24;\r\n                parrafohora.onclick = seleccionarhora;\r\n                parrafohora.classList.add(\"texthora\");\r\n                divhora.appendChild(parrafohora);\r\n                divhoras.appendChild(divhora);\r\n            });\r\n        }\r\n\r\n        function seleccionarhora(e){\r\n            const deshabilthoraprevia = document.querySelector('.horaselect');\r\n            if(deshabilthoraprevia)\r\n                deshabilthoraprevia.classList.remove('horaselect');\r\n            e.target.parentElement.classList.add('horaselect'); //class agregada en dash-cliente/_cliente.scss\r\n            //cargar el input type hidden name = hora_fin del formulario para el envio\r\n            document.querySelector('#hora_fin').value = e.target.dataset.hora24;\r\n        }\r\n\r\n        //////////////////////////////reprogramar//////////////////////////////////\r\n\r\n\r\n        function cargarcita(element){\r\n            cargaservicios();\r\n            const tr = element.parentElement.parentElement.parentElement;\r\n            const idcita = tr.children[0].textContent;  const descripcion = tr.children[0].dataset.descripcion;\r\n            const nombre = tr.children[1].textContent;\r\n            const nameservice = tr.children[2].textContent;\r\n            const namepro = tr.children[3].textContent;\r\n            const fechacita = tr.children[4].textContent;\r\n            const horacita = tr.children[5].textContent;\r\n            const namecliente = document.querySelector('.namecliente');\r\n            const selectservice = document.querySelector('#servicios'); //del formulario de arriba\r\n            const professionals = document.querySelector('#professionals'); //del formulario de arriba\r\n            const inputdate = document.querySelector('#date'); //del formulario de arriba\r\n\r\n            namecliente.textContent = nombre+' - ';\r\n            document.querySelector('#horacita').textContent = horacita;\r\n            document.querySelector('#id').value = idcita;\r\n            document.querySelector('#hora_fin').value = horacita;\r\n            \r\n            for(let i = 0; i<selectservice.options.length; i++)\r\n                if(selectservice.options[i].textContent === nameservice)\r\n                    selectservice.options[i].selected = true;\r\n\r\n            document.querySelector('#descripcion').value = descripcion;\r\n            \r\n            const id = selectservice.options[selectservice.options.selectedIndex].value;\r\n            cargarprofesionales(id);\r\n            //console.log(document.querySelector('#valorpersonalizado').value);\r\n            document.querySelector('#valorpersonalizado').value = tr.children[2].dataset.precio;\r\n\r\n            for(let i = 0; i<professionals.options.length; i++){\r\n                if(professionals.options[i].textContent === namepro){\r\n                    professionals.options[i].selected = true;\r\n                    document.querySelector('#id_empserv').value = professionals.options[i].dataset.id; //se carga el id_empserv\r\n                }\r\n            }\r\n\r\n            inputdate.value = fechacita;\r\n            eventofecha();\r\n\r\n            const dia = new Date(fechacita);\r\n            validarfechaydia(fechacita, dia.getUTCDay());\r\n        }\r\n        \r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const inputfecha = document.querySelector('#date');\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n            const year = fechaactual.getFullYear(); // obiene el año actual\r\n            const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n            const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            if(mes<10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n            inputfecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n\r\n        function mensajedivhoras(mensaje){\r\n            document.querySelector('#formcreareditarcita input[type=\"submit\"]').disabled = true;\r\n            const divhoras = document.querySelector('#horas');\r\n            const msj = document.createElement('label');\r\n            msj.classList.add('formulario__label');\r\n            msj.textContent = mensaje;\r\n            divhoras.classList.add('dianodisponible-js');\r\n            divhoras.appendChild(msj);\r\n        }\r\n\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('.clientes')){\r\n        const crearcliente = document.querySelector('#crearcliente');\r\n        const editar = document.querySelectorAll('#editar');\r\n        const hab_desh = document.querySelectorAll('#hab_desh');\r\n        let objform = {\r\n            titulo: '',\r\n            url: '',\r\n            submit: '',\r\n            nombre: '',\r\n            apellido: '',\r\n            movil: '',\r\n            email: ''\r\n        }\r\n\r\n        crearcliente.addEventListener('click', ()=>{\r\n            objform.titulo = 'Crear Cliente Nuevo';\r\n            objform.url = '/admin/clientes/crear';\r\n            objform.submit = 'Crear Cliente';\r\n            objform.nombre = '';\r\n            objform.apellido = '';\r\n            objform.movil = '';\r\n            objform.email = '';\r\n            objform.password = `<div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"password\">Password</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"password\" placeholder=\"Password del cliente\" id=\"password\" name=\"password\" maxlength=\"4\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" required>\r\n                                        <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"password2\">Repetir Password</label>\r\n                                    <div class=\"formulario__dato\">\r\n                                        <input class=\"formulario__input\" type=\"password\" placeholder=\"Repetir Password\" id=\"password2\" name=\"password2\" maxlength=\"4\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" required>\r\n                                        <label data-num=\"12\" class=\"count-charts\" for=\"\">12</label>\r\n                                    </div>\r\n                                </div>`;\r\n            formulariocliente(objform, 0);\r\n            countchars();\r\n        });\r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{\r\n                objform.titulo = 'Actualizar Cliente';\r\n                objform.url = '/admin/clientes/actualizar';\r\n                objform.submit = 'Actualizar';\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                objform.nombre = tr.children[1].textContent;\r\n                objform.apellido = tr.children[2].textContent;\r\n                objform.movil = tr.children[3].textContent;\r\n                objform.email = tr.children[4].textContent;\r\n                objform.password = '';\r\n                formulariocliente(objform, e.target.parentElement.dataset.id);\r\n                countchars();\r\n            });\r\n        });//cierre del foreach\r\n\r\n\r\n        function formulariocliente(objform, id){\r\n            let { titulo, url, submit, nombre, apellido, movil, email, password} = objform;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: titulo,\r\n                html: `<form class=\"formulario modalform\" action=\"${url}\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del cliente\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"apellido\">Apellido:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Apellido del cliente\" id=\"apellido\" name=\"apellido\" value=\"${apellido}\" required>\r\n                                    <label data-num=\"42\" class=\"count-charts\" for=\"\">42</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"movil\">Movil</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"number\" placeholder=\"Movil del cliente\" id=\"movil\" name=\"movil\" value=\"${movil}\" required>\r\n                                    <label data-num=\"10\" class=\"count-charts\" for=\"\">10</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"email\">Email</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"email\" placeholder=\"Email del cliente\" id=\"email\" name=\"email\" value=\"${email}\" required>\r\n                                    <label data-num=\"40\" class=\"count-charts\" for=\"\">40</label>\r\n                                </div>\r\n                            </div>\r\n                            ${password}\r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"${submit}\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n        }\r\n\r\n        /////////////// eliminar cliente ////////////////\r\n\r\n        hab_desh.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n\r\n                let mensaje = \"Desea bloquear el cliente?\";\r\n                if(e.target.classList.contains('habilitar'))mensaje = \"Desea habilitar el cliente?\";\r\n\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: mensaje,\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        window.location = `/admin/clientes/hab_desh?id=${id}`;\r\n                    } \r\n                })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.pagina5')){\r\n        let arraymediospago = [];\r\n        const inputmediospago = document.querySelectorAll('.mediospago__mediopago input[type=\"checkbox\"]');\r\n        const btnbtnmediopago = document.querySelector('#btnmediopago');\r\n        \r\n\r\n        (async()=>{\r\n            try {\r\n                const url = \"/admin/api/getmediospago\";\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                marcarmediospago(resultado);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function marcarmediospago(resultado){\r\n            inputmediospago.forEach(input =>{\r\n                const r = resultado.find(mediopago=>mediopago.id == input.value); //retorna el obj que conside\r\n                if(r.estado === '1'){ //r es el obj retornado\r\n                    input.checked = true;\r\n                    arraymediospago = [...arraymediospago, r.id];\r\n                } \r\n            });\r\n        }\r\n\r\n        inputmediospago.forEach(input =>{\r\n            input.addEventListener('change', (e)=>{\r\n                if(e.target.checked){\r\n                    arraymediospago = [...arraymediospago, e.target.value];\r\n                }else{\r\n                    arraymediospago = arraymediospago.filter(Element=>Element!=e.target.value);\r\n                }\r\n            });     \r\n        });\r\n\r\n        btnbtnmediopago.addEventListener('click', ()=>{\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('ids', arraymediospago);\r\n                try {\r\n                    const url = \"/admin/api/setmediospago\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    if(resultado){\r\n                        imprimirmensaje(\"Medios de pago actualizados\", 'alerta__exito', document.querySelector('.mediospago'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.mediospago'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        ////////************************fin medios de pago*************************//////////\r\n\r\n        const formhabilitarempleado = document.querySelector('#formhabilitarempleado');\r\n        const selectempleado = document.querySelector('#dardealtaselectempleado');\r\n        \r\n        selectempleado.addEventListener('change', (e)=>{\r\n            const restriccion = e.target.options[e.target.options.selectedIndex].dataset.restriccion;\r\n            if(document.querySelector('.creacioncuentas__habilitaremp input[name=\"admin\"]:checked'))document.querySelector('.creacioncuentas__habilitaremp input[name=\"admin\"]:checked').checked = false;\r\n            if(restriccion==2)document.querySelector('.creacioncuentas__habilitaremp #roladmin').checked = true;\r\n            if(restriccion==1)document.querySelector('.creacioncuentas__habilitaremp #rolempleado').checked = true;\r\n        });\r\n\r\n        formhabilitarempleado.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const radioadmin = document.querySelector('input[name=\"admin\"]:checked').value;\r\n            const idempleado = selectempleado.options[selectempleado.options.selectedIndex].value;\r\n\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('idempleado', idempleado);\r\n                datos.append('tiporol', radioadmin);\r\n                try {\r\n                    const url = \"/admin/api/habilitarempleado\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json();  \r\n                    if(resultado){\r\n                        selectempleado.options[selectempleado.options.selectedIndex].dataset.restriccion = radioadmin;\r\n                        imprimirmensaje(\"Empleado dado de alta en sistema administrativo\", 'alerta__exito', document.querySelector('.creacioncuentas__habilitaremp'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.creacioncuentas__habilitaremp'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        ////////*****************fin habilitar empleados*******************//////////\r\n\r\n        const formsetearpass = document.querySelector('#formsetearpass');\r\n        const selectsetearpass = document.querySelector('#selectsetearpass');\r\n\r\n        formsetearpass.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const idempleado = selectsetearpass.options[selectsetearpass.options.selectedIndex].value;\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('idempleado', idempleado);\r\n                try {\r\n                    const url = \"/admin/api/setearpass\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json(); \r\n                    console.log(resultado);\r\n                    if(resultado){\r\n                        imprimirmensaje(\"Password reiniciado por defecto\", 'alerta__exito', document.querySelector('.creacioncuentas__setearpass'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.creacioncuentas__setearpass'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        //////////*****************fin Setear Password******************//////////\r\n\r\n        const formcolores = document.querySelector('#formcolores');\r\n        formcolores.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const color1 = document.querySelector('.coloresapp #principal').value;\r\n            const color2 = document.querySelector('.coloresapp #secundario').value;\r\n            (async ()=>{\r\n                const datos = new FormData();\r\n                datos.append('colorprincipal', color1);\r\n                datos.append('colorsecundario', color2);\r\n                try {\r\n                    const url = \"/admin/api/coloresapp\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json(); \r\n                    if(resultado){\r\n                        imprimirmensaje(\"Colores establecidos exitosamente\", 'alerta__exito', document.querySelector('.coloresapp'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.coloresapp'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        //////////*****************fin definir colores app******************//////////\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/gettimeservice\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                const gettimeservice = await respuesta.json(); //traer el tiempo de duracion del servicio\r\n                marcartiemposervicio(gettimeservice);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function marcartiemposervicio(gettimeservice){\r\n            const selecttimeserv = document.querySelector('#selecttime');\r\n            for(let i = 1; i<=selecttimeserv.options.length; i++){\r\n                if(selecttimeserv.options[i].value == gettimeservice){\r\n                    selecttimeserv.options[i].selected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const formtimeserv = document.querySelector('#formtimeserv');\r\n        formtimeserv.addEventListener('submit', (e)=>{\r\n            e.preventDefault();\r\n            const selecttimeserv = document.querySelector('#selecttime');\r\n            const tiemposervicio = selecttimeserv.options[selecttimeserv.options.selectedIndex].value;\r\n            const datos = new FormData();\r\n            datos.append('timeservice', tiemposervicio);\r\n            (async()=>{\r\n                try {\r\n                    const url = \"/admin/api/tiemposervicio\";\r\n                    const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                    const resultado = await respuesta.json(); \r\n                    console.log(resultado);\r\n                    if(resultado){\r\n                        imprimirmensaje(\"Tiempo del servicio establecido\", 'alerta__exito', document.querySelector('.tiemposervicio'));\r\n                    }else{\r\n                        imprimirmensaje(\"Se produjo un error intentalo nuevamente\", 'alerta__error', document.querySelector('.tiemposervicio'));   \r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            })();\r\n        });\r\n        //////////*****************fin establecer tiempo de servicio******************//////////\r\n\r\n        function imprimirmensaje(msjtext, tipo, ubicacion){ //muestra mensaje de exito o error\r\n            const mensaje = document.createElement('P');\r\n            mensaje.textContent = msjtext;\r\n            mensaje.classList.add('alerta', tipo);\r\n            ubicacion.insertBefore(mensaje, ubicacion.querySelector('.configuracion__heading'));\r\n            setTimeout(() => {\r\n                document.querySelector('.alerta').remove();\r\n            }, 5000);\r\n        }\r\n    }  //fin pagina 5 = configuracion\r\n})();","(function(){\r\n    if(document.querySelector('.creardescuento')){ //crear dcto en admin/fidelizacion\r\n        \r\n        const categoria = document.querySelector('#categoria');\r\n        const product_serv = document.querySelector('#product_serv');\r\n        const tipodcto = document.querySelector('#tipo');\r\n        const dcto1 = document.querySelector('#dcto1');\r\n        const dcto2 = document.querySelector('#dcto2');\r\n        const dcto2Valor = document.querySelector('#dcto2Valor');\r\n        const fechaini = document.querySelector('#fecha_ini');\r\n        let servicios, valorservicio;\r\n\r\n        deshabilitarfechaanterior();\r\n\r\n        (async()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST para trer todos los servicios\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json();   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        categoria.addEventListener('change', (e)=>{\r\n            borrarhtml(product_serv);\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = 'Seleccione Producto/servicio';\r\n            product_serv.appendChild(option);\r\n            tipodcto.disabled = true;\r\n            dcto1.disabled = true;\r\n            if(e.target.value == \"servicios\"){\r\n                servicios.forEach(servicio => {\r\n                    if(servicio.precio){  //solo aplicar dcto a servicios que tengan un valor fijo mas no personalizado\r\n                        const option = document.createElement('OPTION');\r\n                        option.value = servicio.id;\r\n                        option.textContent = servicio.nombre;\r\n                        product_serv.appendChild(option);\r\n                    }\r\n                });\r\n            }\r\n            if(e.target.value == \"productos\"){\r\n\r\n            }\r\n        });\r\n\r\n        product_serv.addEventListener('change', (e)=>{\r\n            const servicio = servicios.filter(servicio => servicio.id == e.target.value);\r\n            valorservicio = servicio[0].precio;\r\n            document.querySelector('#valorservicio').textContent = '$ '+valorservicio;\r\n            tipodcto.disabled = false;\r\n            imprimirvalor(dcto1.value);\r\n        });\r\n\r\n        tipodcto.addEventListener('change', (e)=>{\r\n            if(e.target.value == 'porcentaje'){\r\n                dcto1.min = 0;\r\n                dcto1.max = 100;\r\n                dcto2Valor.textContent = \"Valor\";\r\n            }\r\n            if(e.target.value == 'valor'){\r\n                dcto1.min = 0;\r\n                dcto1.max = valorservicio;\r\n                dcto2Valor.textContent = \"Valor (%)\";\r\n            }\r\n            dcto1.disabled = false;\r\n            imprimirvalor(dcto1.value);\r\n        });\r\n\r\n        dcto1.addEventListener('input', (e)=>{\r\n            imprimirvalor(e.target.value);  \r\n        });\r\n\r\n        function imprimirvalor(valoringresado){\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'porcentaje'){\r\n                if(valoringresado>100)dcto1.value = 100;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((valorservicio*dcto1.value)/100);\r\n            }\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'valor'){\r\n                if(valoringresado>parseInt(valorservicio))dcto1.value = valorservicio;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((dcto1.value*100)/valorservicio);\r\n            }  \r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        fechaini.addEventListener('change', (e)=>{\r\n            const fechafin = document.querySelector('#fecha_fin');\r\n            fechafin.disabled = false;\r\n            const fechaposterior = new Date(e.target.value);\r\n            fechaposterior.setDate(fechaposterior.getDate()+2);\r\n            const year = fechaposterior.getFullYear();\r\n            const mes = fechaposterior.getMonth() + 1;\r\n            const dia = fechaposterior.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n            fechafin.min = deshabilitarfecha; \r\n        });\r\n\r\n        //////////////////// deshabilitar fecha anterior ////////////////////\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n           \r\n            fechaactual.setDate(fechaactual.getDate());\r\n            const year = fechaactual.getFullYear();\r\n            const mes = fechaactual.getMonth() + 1;\r\n            const dia = fechaactual.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            \r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n\r\n            fechaini.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    if(document.querySelector('#dash-cliente')){\r\n        \r\n        const servicio = document.querySelector('#servicio'); //select servicio\r\n        const profesionales = document.querySelector('#profesional');\r\n        const selectdate = document.querySelector('#date');\r\n        //const programar = document.querySelectorAll('.programar');\r\n        const eliminarcitas = document.querySelectorAll('#cancelado');\r\n        const dialogo = document.getElementById(\"miDialogo\");\r\n        selectdate.disabled = true;\r\n        let emplserv;\r\n                \r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json(); \r\n                validarofertaselected(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        deshabilitarfechaanterior();\r\n\r\n        function validarofertaselected(){   //validar oferta\r\n            const urlparams = new URLSearchParams(window.location.search);\r\n            const id = urlparams.get('id'); //id del servicio\r\n            const valordcto = urlparams.get('valordcto'); //id del servicio\r\n            if(id){\r\n                servicio.classList.add('servicioselected');\r\n                for(let i = 1; i<=servicio.options.length; i++){\r\n                    if(servicio.options[i].value == id){\r\n                        servicio.options[i].selected = true;\r\n                        let serviciotext = servicio.options[i].textContent.split(\" - \");\r\n                        serviciotext = serviciotext[0]+' - '+valordcto;\r\n                        servicio.options[i].textContent = serviciotext;\r\n                        break;\r\n                    }\r\n                }\r\n                crearselectprofesionals(id);\r\n            }\r\n        }\r\n\r\n        servicio.addEventListener('change', (e)=>{\r\n            selectdate.disabled = true;\r\n            servicio.classList.remove('servicioselected');\r\n            mostarmodaldiag(e.target.options[e.target.options.selectedIndex].textContent);\r\n            crearselectprofesionals(e.target.value);\r\n        });\r\n\r\n        function mostarmodaldiag(serviciovalor){  // funciones para mostrar y cerrar modal dialog\r\n            const temp = serviciovalor.includes('$'); \r\n            if(!temp){\r\n                dialogo.showModal();\r\n                document.addEventListener(\"click\", cerrarDialogoExterno);\r\n            }\r\n        }\r\n        function cerrarDialogoExterno(event) {\r\n            console.log(event.target);\r\n            if (event.target === dialogo ||event.target.id === \"cerrardialog\") {\r\n              dialogo.close();\r\n              document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n            }\r\n        }\r\n\r\n        function crearselectprofesionals(idservice){\r\n            const empleados = emplserv.filter(Element => Element.idservicio === idservice);\r\n            borrarhtml(profesionales);\r\n            borrarhtml(document.querySelector('#horas'));\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' -Selecionar- ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            profesionales.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado;  //id de la tabla empleados\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;   //id de la tabla empserv\r\n                profesionales.appendChild(option);\r\n            });\r\n        }\r\n\r\n        function deshabilitarfechaanterior(){\r\n            const fecha = document.querySelector('#date');\r\n            const fechaactual = new Date();  //en fecha actual esta la fecha actual con hora\r\n            /*const year = fechaactual.getFullYear(); // obiene el año actual\r\n            const mes = fechaactual.getMonth() + 1;  //obtiene el mes\r\n            const dia = fechaactual.getDate(); //obitien el dia actual se le suma el dia siguiente\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            */\r\n           \r\n            fechaactual.setDate(fechaactual.getDate() + 1);\r\n            const year = fechaactual.getFullYear();\r\n            const mes = fechaactual.getMonth() + 1;\r\n            const dia = fechaactual.getDate();\r\n            let deshabilitarfecha = `${year}-${mes}-${dia}`;\r\n            \r\n            if(mes<10&&dia<10){ deshabilitarfecha = `${year}-0${mes}-0${dia}`; }\r\n            if(mes<10&&dia>=10){ deshabilitarfecha = `${year}-0${mes}-${dia}`; }\r\n            if(mes>=10&&dia<10){ deshabilitarfecha = `${year}-${mes}-0${dia}`; }\r\n\r\n            fecha.min = deshabilitarfecha; //al input fecha se le agrega atributo min\r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        eliminarcitas.forEach(eliminarcita =>{\r\n            eliminarcita.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                /*const fechacita = tr.children[2].textContent;\r\n                const horacita = tr.children[3].textContent;\r\n                const estado = tr.children[6].textContent;\r\n\r\n                //var fecha1 = new Date(fechacita+\"T00:00:00-05:00\");\r\n                let tiempocita = new Date(fechacita+\"T\"+horacita);\r\n                let hoy = new Date();\r\n                console.log(tiempocita-hoy);\r\n\r\n                if(estado === \"Pendiente\"){\r\n                    if((tiempocita-hoy)>=3600000){*/\r\n                        cancelarcita(e.target.parentElement.dataset.id, tr);\r\n                    /*}else{\r\n                        \r\n                    }\r\n                }*/  \r\n            });\r\n        });\r\n\r\n\r\n        function cancelarcita(id, tr){ //funcion para cancelar la cita, se ejecuta si la cita esta a mas de una hora de cumplirse\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Cancelar La Cita?',\r\n                text: \"SE CANCELARA LA CITA, PUEDES SOLICITAR UNA NUEVA CUANDO LO DESEES.\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/cancelarcita?id=${id}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();\r\n                            if(resultado){\r\n                                //estado.textContent = \"Cancelado\"; \r\n                                tr.remove();\r\n                                Swal.fire('Cita Cancelada', '', 'success')\r\n                            }else{\r\n                                Swal.fire('No se pudo cancelar intentalo nuevamente', '', 'error')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })(); \r\n                } \r\n            })\r\n        }\r\n\r\n\r\n        /*\r\n        programar.forEach(element => { //bloque para reprogramar cita desde el dashboard del cliente\r\n            element.addEventListener('click', e=>{\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Reprograme su cita',\r\n                    html: `<div class=\"formulario__campo\">\r\n                            <label class=\"formulario__label\" for=\"date\">Consulta fecha disponible:</label>\r\n                            <input class=\"formulario__input\" id=\"date\" type=\"date\" value=\"\">\r\n                            </div>\r\n                            \r\n                            <div class=\"cliente__campohoras\" id=\"horasmodal\">\r\n\r\n                            </div>`,\r\n                    showCancelButton: true,\r\n                    showConfirmButton: true,\r\n                    //confirmButtonText: 'Aceptar',\r\n                    //cancelButtonText: 'Cancelar',\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                    Swal.fire('Actualizando', '', 'success')\r\n                    //modificar el servicio\r\n                    } \r\n                })\r\n            });\r\n        });*/\r\n        \r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('#dash-cliente')){\r\n\r\n        const telcliente = document.querySelector('#telcliente').textContent;\r\n        let gettimeservice=0, horasdisponibles = [], horacitas = [];\r\n        const divhoras = document.querySelector('#horas'); //donde se ponen las horas\r\n\r\n        function calcularhorarios(horaInicio, horaFin) {\r\n            const horarioActual = new Date(`01/01/2000 ${horaInicio}`);\r\n            const horarioFinal = new Date(`01/01/2000 ${horaFin}`);\r\n            horarioFinal.setTime(horarioFinal.getTime() - Math.floor(gettimeservice)*60000);\r\n          \r\n            while (horarioActual <= horarioFinal) {\r\n              const hora = horarioActual.getHours().toString().padStart(2, '0');\r\n              const minutos = horarioActual.getMinutes().toString().padStart(2, '0');\r\n              //console.log(`${hora}:${minutos}`);\r\n              const validate = horacitas.includes(`${hora}:${minutos}`);\r\n              if(!validate){\r\n                  //hora1 = ${hora}:${minutos};\r\n                  //horatemp = hora1; + min-servicio, \r\n                  //preguntar si horatemp es menor o igual al elemento del arreglo horacitas\r\n                  //si es si\r\n                  //imprimir hora1, hacer hora1 = horatemp;\r\n                  //si es no\r\n                  //hora1 = elemento del arreglo + su duracion-serv\r\n                  //aumentar en uno al arreglo de horacitas\r\n                  //valido arribo si es si, vuelvo y repito esto\r\n\r\n                  const timepohora = new Date(\"2000-01-01T\" + `${hora}:${minutos}`);\r\n                  // Obtener la hora en formato de 12 horas\r\n                  const hora12 = timepohora.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n\r\n              horasdisponibles = [...horasdisponibles, {horaformat12: hora12, horaformat24: `${hora}:${minutos}`}];\r\n              }\r\n          \r\n              horarioActual.setTime(horarioActual.getTime() + gettimeservice * 60000); // Agregar 30 minutos al horario actual, 60.000 milisegundos tiene un minuto\r\n            }\r\n        }\r\n\r\n\r\n        const professionals = document.querySelector('#profesional');\r\n        const select_date = document.querySelector('#date');\r\n        let fechadesc, malla, citas;\r\n        let onlyfechadesc, onlymalla, onlycitas;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/gettimeservice\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                gettimeservice = await respuesta.json(); //traer el tiempo de duracion del servicio\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\"; //llamado a la API REST para trer todas las fechas de descanso de todos los empleados.\r\n                const respuesta = await fetch(url); \r\n                fechadesc = await respuesta.json(); \r\n                   \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();    \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        /*(async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json();\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })(); */\r\n        \r\n        const obtenercitas = async()=>{\r\n            try {\r\n                const url = \"/admin/api/getcitas\"; //llamado a la API REST para trer toda las citas desde la fecha actual hasta posterior, en controladorcliente.php\r\n                const respuesta = await fetch(url); \r\n                citas = await respuesta.json();\r\n            } catch (error){\r\n                console.log(error);\r\n            }\r\n        }\r\n        obtenercitas();\r\n\r\n        setInterval(() => {\r\n            obtenercitas();\r\n            if(!select_date.value == \"\" && document.querySelector('.cliente__hora')){\r\n                const dia = new Date(select_date.value);\r\n                borrarhtml(divhoras);\r\n                validarfechaydia(select_date.value, dia.getUTCDay());\r\n            }\r\n            //gethoras(r2)\r\n        }, 3100);\r\n\r\n        ///////////seleccionar empleado o profesional //////////////\r\n        professionals.addEventListener('change', (e)=>{\r\n            borrarhtml(divhoras);\r\n            select_date.disabled = false;\r\n            select_date.value = \"\";\r\n            onlymalla = malla[`empleado_${e.target.value}`]; //obtiene solo la malla de ese empleado\r\n            onlyfechadesc = fechadesc.filter(element => e.target.value === element.empleado_id);\r\n        });\r\n\r\n        select_date.addEventListener('input', (evento)=> {\r\n            /////////borrar el campo de las horas//////////\r\n            borrarhtml(divhoras);\r\n            \r\n            const dia = new Date(evento.target.value); //.getUTCDay();  = se estrae el dia de la semana\r\n            validarfechaydia(evento.target.value, dia.getUTCDay());\r\n            /*\r\n            const opciones = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long'\r\n            }\r\n            console.log(dia.toLocaleDateString('es-ES', opciones));*/\r\n        });\r\n        \r\n\r\n        function validarfechaydia(fecha, dia){\r\n            //al seleccionar fecha ya se ha seleccionado el profesional, y el profesional me contiene su id y el id de la tabla empserv\r\n            const idempleado = professionals.options[professionals.options.selectedIndex].value;\r\n            onlycitas = citas.filter(cita => (cita.idempleado === idempleado&&cita.start === fecha&&cita.estado === \"Pendiente\")); //obtengo las citas deacuerdo al profesional y fecha seleccionada y pendiente\r\n            \r\n            const r1 = onlyfechadesc.some(element => element.fecha === fecha);\r\n            if(r1){\r\n                Swal.fire(\r\n                    'Este dia no esta disponible!',\r\n                    'You clicked the button!',\r\n                    'error'\r\n                  )\r\n            }else{\r\n                const r2 = onlymalla.filter(element => element.id_dia == (dia===0?7:dia));\r\n                if(r2.length){ //es pq el dia si esta en la malla\r\n                    gethoras(r2[0]); //se envia solo el dia seleccionado (obj)\r\n                }\r\n                else{ //dia no esta en la malla\r\n                    Swal.fire(\r\n                        'Este dia no esta disponible!',\r\n                        'You clicked the button!',\r\n                        'error'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        function gethoras(r2){\r\n            let horario1 = [], horario2 = [];\r\n\r\n            horario1 = [...horario1, r2.inicioturno, r2.inidescanso];\r\n            horario2 = [...horario2, r2.findescanso, r2.finturno];\r\n\r\n            // me traigo un arreglo de la tabla citas de la DB con su hora segun fecha seleccionada y profesional seleccionado\r\n            //// comparo cada hora del arreglo traio con r2.iniciodescanso y si es menor lo agrego al arreglo horario1\r\n            ///luego comparo con r2.finturno y si es mayor lo agrego a arreglo horario2\r\n\r\n            horario1 = horario1.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            horario2 = horario2.map(element =>{\r\n                element = element.substring(0,2)+':'+element.substring(2,4);\r\n                return element;\r\n            });\r\n            //horacitas = onlycitas.map(element =>  element.hora_fin.slice(3)); //obtengo las horas formato 24 de la bd segun fecha y profesional\r\n            horacitas = onlycitas.map(element =>  element.hora_fin);\r\n\r\n            for(let i = 0; i<horario1.length-1; i++){\r\n            calcularhorarios(horario1[i], horario1[i+1]);\r\n            }\r\n            for(let i = 0; i<horario2.length-1; i++)\r\n            calcularhorarios(horario2[i], horario2[i+1]);\r\n            \r\n           console.log(horasdisponibles);\r\n           imprimirhorashtml();\r\n        }\r\n\r\n\r\n        function imprimirhorashtml(){\r\n            horasdisponibles.forEach(hora => {\r\n                const divhora = document.createElement('DIV');\r\n                divhora.classList.add(\"cliente__hora\");\r\n                const parrafohora = document.createElement('P');\r\n                parrafohora.textContent = hora.horaformat12;\r\n                //parrafohora.dataset.hora = hora.replace(':', '');\r\n                parrafohora.dataset.hora24 = hora.horaformat24;\r\n                parrafohora.onclick = reservarcita;\r\n                parrafohora.classList.add(\"texthora\");\r\n                divhora.appendChild(parrafohora);\r\n                divhoras.appendChild(divhora);\r\n            });\r\n        }\r\n\r\n        function reservarcita(e){ \r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Reservar La Cita?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    enviarcita(e.target.dataset.hora24).then((r) => {\r\n                        if(r===true){\r\n                            Swal.fire('Cita Programada', '', 'success')\r\n                            setTimeout(() => {\r\n                                window.location.reload();\r\n                            }, 1500);\r\n                        }else if(r==='masde3citas'){\r\n                            Swal.fire('No es posible agendar cita si ya tienes 3 citas pendientes', '', 'error')\r\n                        }else if(r==='error'){\r\n                            Swal.fire('No fue posible agendar cita, Intentalo de nuevo', '', 'error')\r\n                        }\r\n                    });\r\n                } \r\n            })\r\n        }\r\n\r\n        async function enviarcita(horacita){\r\n            const datos = new FormData();\r\n            const id_empserv = professionals.options[professionals.options.selectedIndex]; //id de la relacion empleado_servicio\r\n            const id_servicio = document.querySelector('#servicio').options[document.querySelector('#servicio').options.selectedIndex].value;\r\n            const descripcion = document.querySelector('#descripcion').value;\r\n            const hoy = new Date();\r\n\r\n            datos.append('telcliente', telcliente);\r\n            datos.append('id_empserv', id_empserv.dataset.id);\r\n            //datos.append('fecha_tomada', hoy.toLocaleDateString().replace(/\\//g, '-')); //fecha actual\r\n            datos.append('fecha_tomada', hoy.getFullYear()+'-'+(hoy.getMonth()+1)+'-'+hoy.getDate()); //fecha actual de toma de servicio\r\n            datos.append('start', select_date.value);\r\n            datos.append('hora', hoy.toLocaleTimeString([], {hour12: false})); //hora actual de toma de servicio\r\n            datos.append('hora_fin', horacita);\r\n            datos.append('idservicio', id_servicio);\r\n            datos.append('nameprofesional', id_empserv.value);\r\n            datos.append('descripcion', descripcion);\r\n            try {\r\n                const url = \"/admin/api/enviarcita\";  //llama api en controladorcliente.php\r\n                const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                const resultado = await respuesta.json();  \r\n                    if(resultado===true){\r\n                        return true;\r\n                    }\r\n                    else if(resultado==='masde3citas'){\r\n                        return 'masde3citas';\r\n                    }else if(resultado==='error'){\r\n                        return 'error';\r\n                    }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n\r\n        function borrarhtml(elemento){\r\n            horasdisponibles = [];\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.descuentos')){\r\n\r\n        const editar = document.querySelectorAll('.programar');\r\n        const eliminar = document.querySelectorAll('.cancelado');\r\n        const sendmsj = document.querySelectorAll('.sendmsj');\r\n        let obj = {\r\n\r\n        }\r\n\r\n        editar.forEach(Element => {\r\n            Element.addEventListener('click', (e)=>{ \r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                obj.id = e.target.parentElement.dataset.id;\r\n                obj.nombreproducto = tr.children[2].textContent;\r\n                obj.valorservicio = tr.children[3].textContent.slice(1);\r\n                obj.dcto = tr.children[4].textContent;\r\n                obj.valorfinal = tr.children[5].textContent;\r\n                obj.fecha_fin = tr.children[7].textContent;\r\n                formulariocliente(obj);\r\n                //countchars();\r\n            });\r\n        });\r\n\r\n\r\n        function formulariocliente(obj){\r\n    \r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Actualizar Oferta',\r\n                html: `<form class=\"formulario modalform\" action=\"/admin/fidelizacion/editar_dctoxproduct\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${obj.id}\" >\r\n                            \r\n                            <span class=\"nameuser\">${obj.nombreproducto}</span>\r\n                            <span class=\"precio\">Valor: ${obj.valorservicio}</span>\r\n                            <span class=\"nameuser\">Dcto: ${obj.dcto}</span>\r\n                            <span class=\"nameuser\">Valor Final: ${obj.valorfinal}</span>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"tipo\">Tipo De Dcto: </label>\r\n                                <select class=\"formulario__select\" name=\"tipo\" id=\"tipo\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar tipo de dcto</option>\r\n                                    <option value=\"porcentaje\">Porcentaje</option>\r\n                                    <option value=\"valor\">Valor</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"dcto1\">Descuento</label>\r\n                                <input class=\"formulario__input\" id=\"dcto1\" type=\"number\" min=\"\" max=\"\" name=\"dcto1\" value=\"\" disabled required>\r\n                            </div>\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"dcto2\" id=\"dcto2Valor\">Valor</label>\r\n                                <input class=\"formulario__input\" id=\"dcto2\" type=\"number\" min=\"\" max=\"\" name=\"dcto2\" value=\"\" readonly required>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"fecha_fin\">Fecha De Finalizacion</label>\r\n                                <input class=\"formulario__input\" type=\"date\" id=\"fecha_fin\" name=\"fecha_fin\" value=\"${obj.fecha_fin}\" requiered>\r\n                            </div>\r\n                            \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Actualizar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            eventos();\r\n        }\r\n\r\n\r\n        function eventos(){\r\n            const dcto1 = document.querySelector('#dcto1');\r\n            const tipodcto = document.querySelector('#tipo');\r\n            tipodcto.addEventListener('change', (e)=>{\r\n                dcto1.disabled = false;\r\n                imprimirvalor(dcto1.value, tipodcto);\r\n            });\r\n    \r\n            dcto1.addEventListener('input', (e)=>{\r\n                imprimirvalor(e.target.value, tipodcto);  \r\n            });\r\n        }\r\n\r\n\r\n        function imprimirvalor(valoringresado, tipodcto){\r\n            const dcto1 = document.querySelector('#dcto1');\r\n            const dcto2 = document.querySelector('#dcto2');\r\n            const dcto2Valor = document.querySelector('#dcto2Valor');\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'porcentaje'){\r\n                dcto1.min = 0;\r\n                dcto1.max = 100;\r\n                dcto2Valor.textContent = \"Valor\";\r\n                if(valoringresado>100)dcto1.value = 100;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((obj.valorservicio*dcto1.value)/100);\r\n            }\r\n            if(tipodcto.options[tipodcto.options.selectedIndex].value == 'valor'){\r\n                dcto1.min = 0;\r\n                dcto1.max = obj.valorservicio;\r\n                dcto2Valor.textContent = \"Valor (%)\";\r\n                if(valoringresado>parseInt(obj.valorservicio))dcto1.value = obj.valorservicio;\r\n                if(valoringresado<0)dcto1.value = 0;\r\n                dcto2.value = Math.round((dcto1.value*100)/obj.valorservicio);\r\n            }  \r\n        }\r\n\r\n        /////////////// eliminar oferta del cliente ////////////////\r\n\r\n        eliminar.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar la oferta del cliente?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        //Swal.fire('Eliminado', '', 'success');\r\n                        window.location = `/admin/fidelizacion?id=${id}`;\r\n\r\n                    } \r\n                })\r\n            });\r\n        });\r\n\r\n        /////////////////////// enviar msj a clientes ///////////////////////\r\n\r\n        sendmsj.forEach(element => {\r\n            element.addEventListener('click', (e)=>{\r\n                const id = e.target.parentElement.dataset.id;\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'clase y metodo de mensaje no configurado!',\r\n                    footer: 'Innovatech quindio'\r\n                  })\r\n            });\r\n        });\r\n    \r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        \r\n        /*\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        countchars();*/\r\n    }\r\n\r\n})();","(function(){ //para ver el detalle del pago de cada cita y su anulacion\r\n    if(document.querySelector('#dashboardcitas')){  \r\n        const detallefactura = document.querySelectorAll('.detallepagocita');\r\n\r\n        detallefactura.forEach(Element=>{\r\n            Element.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const estado = tr.children[6].textContent;\r\n                const idcita = tr.children[0].textContent;\r\n                if(estado === \"Finalizada\"){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/detallepagoxcita?id=${idcita}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();  \r\n                                formulariofactura(resultado, tr);\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })();  \r\n                }\r\n            });\r\n        });\r\n\r\n        function formulariofactura(resultado, tr){\r\n            console.log(resultado);\r\n            const {id, idcita, recibido, devolucion, fecha_pago, hora_pago, dcto, valordcto, valorpromo, valor_servicio, total} = resultado;\r\n            console.log(recibido);\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Detalle Del Pago',\r\n                html: `\r\n                    <h4 class=\"orden\">App Barber</h4>\r\n                    <div class=\"recibo\">\r\n                        <p class=\"recibo__titulo\">Nº De Pago: ${id}</p>\r\n                        <p class=\"recibo__titulo\">Orden Cita: ${idcita}</p>\r\n                        <div class=\"recibo__datos\">\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Cliente:</p>\r\n                                <p class=\"recibo__texto\">${tr.children[1].textContent}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">profesional:</p>\r\n                                <p class=\"recibo__texto\">${tr.children[3].textContent}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">servicio:</p>\r\n                                <p class=\"recibo__texto\">${tr.children[2].textContent}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"recibo__datos\">\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Fecha:</p>\r\n                                <p class=\"recibo__texto\">${fecha_pago}, ${hora_pago}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Valor Servicio:</p>\r\n                                <p class=\"recibo__texto\">$${valor_servicio}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Recibido:</p>\r\n                                <p class=\"recibo__texto\">$${recibido}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Devolucion:</p>\r\n                                <p class=\"recibo__texto\">$${devolucion}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Promo Aplicado:</p>\r\n                                <p class=\"recibo__texto\">$${valorpromo}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Dcto Manual:</p>\r\n                                <p class=\"recibo__texto\">$${valordcto}</p>\r\n                            </div>\r\n                            <div class=\"recibo__dato\">\r\n                                <p class=\"recibo__titulo\">Total:</p>\r\n                                <p class=\"recibo__texto\">$${total}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>`,\r\n                width: 'auto',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Anular Pago'\r\n            }).then((result) => {\r\n                if (result.isConfirmed){\r\n                    Swal.fire({\r\n                        customClass: {\r\n                            confirmButton: 'sweetbtnconfirm',\r\n                            cancelButton: 'sweetbtncancel'\r\n                        },\r\n                        title: 'Desea anular el pago?',\r\n                        showCancelButton: true,\r\n                        confirmButtonText: 'Si',\r\n                        cancelButtonText: 'No',\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            anularpagofact(id).then(r=>{\r\n                                if(r){\r\n                                    actualizarfilacita(tr);\r\n                                    Swal.fire('Anulado!', '', 'success')\r\n                                }\r\n                                else{\r\n                                    Swal.fire('No se permite de dias anteriores!', '', 'error')\r\n                                }\r\n                            });\r\n                        } \r\n                      })\r\n                } \r\n              }); ////// fin Swal //////\r\n        } ////////fin funcion formulariofactura ////////\r\n\r\n        async function anularpagofact(id){\r\n            try {\r\n                const url = `/admin/api/anularpagoxcita?id=${id}`;\r\n                const respuesta = await fetch(url); \r\n                const resultado = await respuesta.json();  \r\n                return resultado; \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function actualizarfilacita(tr){\r\n            tr.children[6].textContent = \"Pendiente\";\r\n            tr.classList.remove('tr-resaltar');\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n\r\n    //////////////////// los skills de los empleados //////////////////////\r\n    if(document.querySelector('.formulario__fieldset--servicios')){\r\n        const divcampostags1 = document.querySelector('.pagina1 .formulario__campostags'); //div en donde se carga los skills y el select de servicios en crear empleado\r\n        const divcampostags2 = document.querySelector('.pagina4 .formulario__campostags'); //div en donde se carga los skills y el select de servicios en actualizar empleado\r\n        const tagselect1 = document.querySelector('.pagina1 .formulario__tagselect'); //select de los servicios\r\n        const tagselect2 = document.querySelector('.pagina4 .formulario__tagselect'); //select de los servicios\r\n        const tagsinputhidden1 = document.querySelector('.pagina1 [name=\"servicios\"]'); //input oculto donde se carga los id de los servicios\r\n        const tagsinputhidden2 = document.querySelector('.pagina4 [name=\"servicios\"]'); //input oculto donde se carga los id de los servicios\r\n        const selectemployee = document.querySelector('#selectemployee'); //select del los empleados en update data\r\n        const eliminaremployee = document.querySelector('#eliminaremployee'); //<a>btn liminar</a>\r\n        let totalservicios = [], empleadosapi, tags1 = [], tags2 = [];\r\n\r\n        tagselect1.classList.add('selectskills1');\r\n       // let copytagselect2 = tagselect2.cloneNode(true);\r\n\r\n       //////obtoner todos los servicios del select en arreglo totalservicios///////\r\n        for(let i=1; i<tagselect2.options.length; i++){\r\n            let objservicio = {\r\n                id: tagselect2.options[i].value,\r\n                nombre: tagselect2.options[i].textContent\r\n            }\r\n            totalservicios = [...totalservicios, objservicio];\r\n        }\r\n\r\n        /////////traer todos los empleados con sus skills //////////\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getAllemployee\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                empleadosapi = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n\r\n        tagselect1.addEventListener('change', (e)=>{ //envento al select de los servicios\r\n            tags1 = [...tags1, e.target.options[tagselect1.options.selectedIndex].value];  //en este arreglo guardamos los id de los servicios seleccionados\r\n            \r\n            let nombreservicio = e.target.options[tagselect1.options.selectedIndex].textContent;\r\n            let idservicio = e.target.options[tagselect1.options.selectedIndex].value;\r\n            \r\n            let divtag = mostrarservicio(nombreservicio, idservicio, tagselect1);\r\n            //divcampostags1.insertBefore(divtag, document.querySelector('.pagina1 .formulario__tagselect'));\r\n            divcampostags1.appendChild(divtag);\r\n            tagselect1.options[tagselect1.options.selectedIndex].remove();\r\n            tagselect1.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        });\r\n\r\n        function mostrarservicio(nombreservicio, idservicio, tagselect){\r\n            //const divcampotag = document.createElement('DIV');\r\n            //divcampotag.classList.add('formulario__campotag');\r\n            const divtag = document.createElement('DIV');\r\n            divtag.classList.add('formulario__tag');\r\n            const span = document.createElement('SPAN');\r\n            span.textContent = nombreservicio;\r\n            span.id = idservicio;\r\n            const icon = document.createElement('I');\r\n            icon.classList.add('fa-solid');\r\n            icon.classList.add('fa-rectangle-xmark');\r\n            icon.onclick = function(e){ borrarservicio(e, tagselect); } //al dar click en la x elimina el servicio del empleado\r\n            divtag.appendChild(span);\r\n            divtag.appendChild(icon);\r\n            //divcampotag.appendChild(divtag);\r\n            return divtag;\r\n        }\r\n\r\n        function borrarservicio(e, tagselect){ //al dar click en la x lo muestra en el select, y elimina el servicio o skill elegido del empleado\r\n            let span = e.target.previousElementSibling;\r\n            cargarselects(tagselect, {id: span.id, nombre: span.textContent});\r\n            e.target.parentElement.remove();\r\n\r\n            if(tagselect.classList.contains('selectskills1')){\r\n                tags1 = tags1.filter(tag => tag!=span.id);\r\n            }else{\r\n                tags2 = tags2.filter(tag => tag!=span.id);\r\n            }\r\n            actualizarinputhidden();\r\n        }\r\n\r\n        function actualizarinputhidden(){\r\n            tagsinputhidden1.value = tags1.toString(); // el arreglo tags lo convierte a string\r\n            tagsinputhidden2.value = tags2.toString(); // el arreglo tags lo convierte a string\r\n        }\r\n\r\n//////////////////////\r\n\r\n        selectemployee.addEventListener('change', (e)=>{ //evento al select de empleados en update data\r\n            let empleado;\r\n            const divtags = document.querySelectorAll('.pagina4 .formulario__tag');\r\n            divtags.forEach(divtag => {divtag.remove()}); //eliminar previamente los skills para cargarlos nuevamente \r\n            eliminaremployee.href = \"/admin/adminconfig/eliminaremployee?id=\"+e.target.value;\r\n            empleado = empleadosapi.filter(element => element.id == e.target.value); //obtengo solo un empleado elegido\r\n            cargarempleado(empleado);\r\n        });\r\n\r\n        function cargarempleado(empleado){ //empleado es un arreglo con un solo obj\r\n            const{servicios} = empleado[0]; //servicios es el arreglo con solo skills\r\n            document.querySelector('.pagina4 #nombre').value = empleado[0].nombre;\r\n            document.querySelector('.pagina4 #apellido').value = empleado[0].apellido;\r\n            document.querySelector('.pagina4 #movil').value = empleado[0].movil;\r\n            document.querySelector('.pagina4 #email').value = empleado[0].email;\r\n            document.querySelector('.pagina4 #departamento').value = empleado[0].departamento;\r\n            document.querySelector('.pagina4 #ciudad').value = empleado[0].ciudad;\r\n            document.querySelector('.pagina4 #direccion').value = empleado[0].direccion;\r\n\r\n            tags2 = [];\r\n\r\n            //mostrar todos los servicios en el select//\r\n            totalservicios.forEach(servicio => {\r\n                let i = 1;\r\n                for( ; i<tagselect2.options.length; i++)\r\n                    if(servicio.id == tagselect2.options[i].value)break;\r\n                if(i === tagselect2.options.length)cargarselects(tagselect2, {id: servicio.id, nombre: servicio.nombre});\r\n            });\r\n            \r\n            servicios.forEach(servicio => { //arreglo de servicios\r\n                tags2 = [...tags2, servicio.id];\r\n                let divtag = mostrarservicio(servicio.nombre, servicio.id, tagselect2);\r\n                //divcampostags2.insertBefore(divtag, document.querySelector('.pagina4 .formulario__tagselect'));\r\n                divcampostags2.appendChild(divtag);\r\n                ///quitar del select los servicios que se mostraron//\r\n               //document.querySelector(`.pagina4 .formulario__tagselect option[value=\"${servicio.id}\"`).remove();\r\n                if(tagselect2.querySelector(`option[value=\"${servicio.id}\"`))\r\n                    tagselect2.querySelector(`option[value=\"${servicio.id}\"`).remove(); \r\n            });\r\n            tagselect2.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        }\r\n\r\n        tagselect2.addEventListener('change', (e)=>{ //envento al select de los servicios\r\n            tags2 = [...tags2, e.target.options[tagselect2.options.selectedIndex].value];  //en este arreglo guardamos los id de los servicios seleccionados\r\n            let nombreservicio = e.target.options[tagselect2.options.selectedIndex].textContent;\r\n            let idservicio = e.target.options[tagselect2.options.selectedIndex].value;\r\n            \r\n            let divtag = mostrarservicio(nombreservicio, idservicio, tagselect2);\r\n            //divcampostags2.insertBefore(divtag, document.querySelector('.pagina4 .formulario__tagselect'));\r\n            divcampostags2.appendChild(divtag);\r\n            tagselect2.options[tagselect2.options.selectedIndex].remove();\r\n            tagselect2.options[0].selected = true;\r\n            actualizarinputhidden();\r\n        });\r\n\r\n        function cargarselects(tagselect, skill){\r\n            const option = document.createElement('OPTION');\r\n            option.value = skill.id;\r\n            option.textContent = skill.nombre;\r\n            tagselect.appendChild(option);\r\n        }\r\n\r\n\r\n        /////eliminar empleado//////\r\n        eliminaremployee.addEventListener('click', (e)=>{\r\n            e.preventDefault();\r\n            if(e.target.href.includes('?id=')){\r\n                Swal.fire({\r\n                    customClass: {\r\n                        confirmButton: 'sweetbtnconfirm',\r\n                        cancelButton: 'sweetbtncancel'\r\n                    },\r\n                    title: 'Desea eliminar el empleado?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si',\r\n                    cancelButtonText: 'No',\r\n                    \r\n                }).then((result) => {\r\n                    if (result.isConfirmed)\r\n                        window.location = e.target.href;\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n})();","(function(){\r\n    if(document.querySelector('.facturacion')){\r\n        let servicios, emplserv, valorapagar;\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getservices\"; //llamado a la API REST\r\n                const respuesta = await fetch(url); \r\n                servicios = await respuesta.json(); \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getemployee_services\"; //llamado a la API REST para trer la relacion de los servicios con sus profesionales\r\n                const respuesta = await fetch(url); \r\n                emplserv = await respuesta.json();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        const filtrarfecha = document.querySelector('#fecha');\r\n        filtrarfecha.addEventListener('input', (e)=>{\r\n            window.location = `/admin/facturacion/buscarxfecha?pagina=1&fecha=${e.target.value}`;\r\n        });\r\n\r\n        const pagar = document.querySelector('#pagar');\r\n        pagar.addEventListener('click', ()=>{\r\n            formulariopagar();\r\n            obtenermediospago();\r\n            countchars();\r\n        });\r\n        \r\n\r\n        function formulariopagar(){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Pago De Servicio',\r\n                html: `<form class=\"formulario modalform\" action=\"/admin/facturacion\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"total\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"dcto\" value=\"0\">\r\n                            <input type=\"hidden\" name=\"valor_servicio\" value=\"0\">\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"servicios\">Servicios:</label>\r\n                                <select class=\"formulario__select\" name=\"idservicio\" id=\"selectservice\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar Servicio</option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"empleado\">Empleado:</label>\r\n                                <select class=\"formulario__select\" name=\"idempleado\" id=\"selectemployee\" required>\r\n                                    <option value=\"\" disabled selected> Seleccionar Empleado </option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"valorapagar\">Valor a pagar:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"valorapagar\" name=\"valorapagar\" value=\"\" readonly required>\r\n                                    <button id=\"btndesc\" type=\"button\"> <i class=\"fa-solid fa-plus\"> </i>  Desc </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo campo-descuentomanual\" style=\"display: none\">\r\n                                <label class=\"formulario__label\" for=\"valordcto\">Descuento manual: </label>\r\n                                <input class=\"formulario__input\" min=\"0\" type=\"text\" id=\"valordcto\" name=\"valordcto\" value=\"\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '0').padStart(1, '0');\">\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"mediopago\">Elegir Medio De Pago:</label>\r\n                                <select class=\"formulario__select\" name=\"idmediospago\" id=\"mediopago\">\r\n                                    <option value=\"\" disabled selected> Seleccionar medio pago</option>\r\n                                </select> \r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo-2r\">\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"recibido\">Recibido:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"recibido\" name=\"recibido\" value=\"0\">\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"devolucion\">Devolucion:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"devolucion\" name=\"devolucion\" value=\"\" readonly required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nota\">Nota:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nota del pago\" id=\"nota\" name=\"nota\" value=\"\">\r\n                                    <label data-num=\"64\" class=\"count-charts\" for=\"\">64</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Imprimir Recibo: </label>\r\n                                <div class=\"formulario__campo-2r\">\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_si\">Si:</label>\r\n                                        <input id=\"imprimir_si\" type=\"radio\" value=\"1\" name=\"imprimir\">\r\n                                    </div>\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_no\">No:</label>\r\n                                        <input id=\"imprimir_no\" type=\"radio\" value=\"0\" name=\"imprimir\" checked>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Pagar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false, \r\n                didOpen: () => {\r\n                    $('#selectservice').select2();\r\n                } \r\n            });\r\n            document.querySelector('#recibido').addEventListener('input', calculo);\r\n            cargarservicios();\r\n\r\n            document.querySelector('#btndesc').addEventListener('click', ()=>{\r\n                document.querySelector('.campo-descuentomanual').style = \"display: block\";\r\n                mostrarcampodesc();\r\n            });\r\n        }\r\n\r\n        ///////////////////////////traer los medios de pago /////////////////////////\r\n        const obtenermediospago = async()=>{\r\n            try {\r\n                const url = \"/admin/api/getmediospago\";\r\n                const respuesta = await fetch(url);\r\n                const mediospago = await respuesta.json();\r\n                cargarmediospago(mediospago);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function cargarmediospago(mediospago){\r\n            const selectmediospago = document.querySelector('#mediopago');\r\n            mediospago.forEach(element => {\r\n                if(element.estado==='1'){\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = element.id;\r\n                    option.textContent = element.mediopago;\r\n                    selectmediospago.appendChild(option);\r\n                }\r\n            });\r\n        }\r\n\r\n        function cargarservicios(){\r\n            const selectservice = document.querySelector('#selectservice');\r\n            servicios.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.id;\r\n                option.textContent = element.nombre;\r\n                selectservice.appendChild(option);\r\n            });\r\n            selectservice.addEventListener('change', e=>{\r\n                cargarempleado(e.target.value);\r\n                cargarvalorservicio(e);\r\n                document.querySelector('input[name=valordcto]').value = ''; //para dcto manual\r\n            });\r\n        }\r\n\r\n        function cargarempleado(id){\r\n            const selectemployee = document.querySelector('#selectemployee');\r\n            const empleados = emplserv.filter(Element => Element.idservicio === id);\r\n            borrarhtml(selectemployee);\r\n            const option = document.createElement('OPTION');\r\n            option.value = '';\r\n            option.textContent = ' Seleccionar Empleado ';\r\n            option.selected = true;\r\n            option.disabled = true;\r\n            selectemployee.appendChild(option);\r\n            empleados.forEach(element => {\r\n                const option = document.createElement('OPTION');\r\n                option.value = element.idempleado; //id de la tabla empleados\r\n                option.textContent = element.nombre;\r\n                option.dataset.id = element.id;  //id de la tabla empserv\r\n                selectemployee.appendChild(option); \r\n            });\r\n        }\r\n\r\n        function cargarvalorservicio(e){\r\n            const valorservice = servicios.filter(element =>element.id == e.target.value);\r\n            document.querySelector('#valorapagar').value = valorservice[0].precio;\r\n            valorapagar = valorservice[0].precio;\r\n            if(!valorservice[0].precio){ //si el servicio no tiene valor se habilita el campo valor_servicio para escribir\r\n                document.querySelector('#valorapagar').readOnly = false;\r\n                valorapagar = NaN;\r\n                document.querySelector('#valorapagar').addEventListener('input', (e)=>{\r\n                    document.querySelector('input[name=valor_servicio]').value = e.target.value;  //este se envia a BD\r\n                    document.querySelector('input[name=valordcto]').value = 0;\r\n                    valorapagar = e.target.value;\r\n                    calculo();\r\n                });\r\n            }else{\r\n                document.querySelector('#valorapagar').readOnly = true;\r\n                document.querySelector('input[name=valor_servicio]').value = valorservice[0].precio;  //este se envia BD\r\n                calculo();\r\n            }\r\n            document.querySelector('#recibido').value = 0;\r\n            document.querySelector('#devolucion').value = 0;\r\n        }\r\n\r\n        function mostrarcampodesc(){\r\n            const valordcto = document.querySelector('#valordcto');  //descuento manual\r\n            valordcto.addEventListener('input', (e)=>{  \r\n                console.log(valorapagar);\r\n                console.log(valorapagar - parseInt(e.target.value));\r\n                document.querySelector('#valorapagar').value = valorapagar - parseInt(e.target.value);\r\n                calculo();\r\n            });\r\n        }\r\n\r\n        function calculo(){\r\n            const valorservicio = parseInt(document.querySelector('#valorapagar').value);\r\n            const devolucion = document.querySelector('#devolucion');\r\n            const recibido = parseInt(document.querySelector('#recibido').value); \r\n                if(recibido>=valorservicio){\r\n                   devolucion.value = recibido-valorservicio;\r\n                }else{\r\n                    devolucion.value = 0;\r\n                }\r\n                document.querySelector('input[name=total]').value = valorservicio;\r\n        }\r\n\r\n        function borrarhtml(elemento){\r\n            while(elemento.firstElementChild)elemento.removeChild(elemento.firstElementChild);\r\n        }\r\n\r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        //countchars();\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.descpagina3')){\r\n\r\n        const selectemployee = document.querySelector('#selectemployeedate');\r\n        const viewdates = document.querySelector('.viewdates');\r\n        let fechas;\r\n\r\n        (async ()=> {\r\n            try {\r\n                const url = \"/admin/api/getfechadesc\";\r\n                const respuesta = await fetch(url);\r\n                fechas = await respuesta.json();\r\n            } catch (error) {\r\n               console.log(error); \r\n            }\r\n        })();\r\n\r\n\r\n        selectemployee.addEventListener('change', (e)=>{\r\n            const dates = fechas.filter(fecha => fecha.empleado_id == e.target.value);\r\n            limpiarfechas();\r\n            imprimirfechas(dates);\r\n        });\r\n\r\n        function limpiarfechas(){\r\n            while(viewdates.firstChild)viewdates.removeChild(viewdates.firstChild);\r\n        }\r\n\r\n        function imprimirfechas(dates){\r\n            dates.forEach(element => {\r\n                const div = document.createElement('DIV');\r\n                div.classList.add('viewdates__viewdate'); \r\n                div.dataset.id = element.id;\r\n                const parrafo = document.createElement('P');\r\n                parrafo.classList.add('viewdates__fecha');\r\n                parrafo.textContent = element.fecha;\r\n                const icondelete = document.createElement('I');\r\n                icondelete.classList.add('fa-solid', 'fa-rectangle-xmark');\r\n                icondelete.id = element.id;\r\n                icondelete.onclick = eliminarfecha;\r\n                div.appendChild(parrafo);\r\n                div.appendChild(icondelete);\r\n                viewdates.appendChild(div);\r\n            });\r\n        }\r\n\r\n        async function eliminarfecha(e){\r\n            console.log(e.target.id);\r\n            try {\r\n                const url = `/admin/api/deletefechadesc?id=${e.target.id}`;\r\n                const respuesta = await fetch(url); \r\n                const resultado = await respuesta.json();  \r\n                if(resultado == 1)document.querySelector(`i[id=\"${e.target.id}\"]`).parentElement.remove();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('#dashboardcitas')){//en admin/citas/index.php\r\n        \r\n        const eliminarcitas = document.querySelectorAll('.cancelado');\r\n        const finalizarcitas = document.querySelectorAll('.finalizado');\r\n        let valueservice;\r\n\r\n        ////////////////////////////cancelar o eliminar cita//////////////////////////////\r\n        eliminarcitas.forEach(eliminarcita =>{\r\n            eliminarcita.addEventListener('click', (e)=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const id = tr.children[0].textContent;\r\n                const estado = tr.children[6].textContent;\r\n                if(estado === \"Pendiente\" || estado === \"Out\")cancelarcita(id, tr.children[6]); //se pasa el id de la cita y su estado  \r\n            });\r\n        });\r\n\r\n        function cancelarcita(id, estado){ //funcion para cancelar la cita.\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea Cancelar La Cita?',\r\n                text: \"SE CANCELARA LA CITA, PUEDES CREAR UNA NUEVA CUANDO LO DESEES.\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed){ \r\n                    (async ()=>{\r\n                        try {\r\n                            const url = `/admin/api/cancelarcita?id=${id}`;\r\n                            const respuesta = await fetch(url); \r\n                            const resultado = await respuesta.json();  \r\n                            if(resultado){\r\n                                estado.textContent = \"Cancelado\"; \r\n                                Swal.fire('Cita Cancelada', '', 'success')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    })(); \r\n                } \r\n            })\r\n        }\r\n\r\n\r\n        //////////////////////Finalizar clita /////////////////////////////\r\n\r\n        finalizarcitas.forEach(fincita => {\r\n            fincita.addEventListener('click', e=>{\r\n                const tr = e.target.parentElement.parentElement.parentElement;\r\n                const estado = tr.children[6].textContent;\r\n                if(estado === \"Pendiente\"){   \r\n                    formulariopagar();\r\n                    obtenermediospago();\r\n                    cargardatoscliente(e);\r\n                }\r\n            });\r\n        });\r\n\r\n        function formulariopagar(){\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Terminar Cita',\r\n                html: `<form class=\"formulario modalform\" action=\"/admin/citas/finalizar?pagina=1\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"valor_servicio\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"idempleado\" value=\"\" >\r\n                            <input type=\"hidden\" name=\"promodcto\" value=\"0\" >\r\n                            <input type=\"hidden\" name=\"total\" value=\"0\" >\r\n\r\n                            <p class=\"orden\"></p>\r\n                            <span class=\"nameuser\"></span>\r\n                            <span class=\"nameservice\"></span>\r\n                            <span class=\"precio\"></span>\r\n\r\n                            <div class=\"\">\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"valorpromodcto\">Aplicar Oferta:</label>\r\n                                <select class=\"formulario__select\" name=\"valorpromo\" id=\"valorpromodcto\">\r\n                                    <option value=\"\" disabled selected> Seleccionar Dcto</option>\r\n                                    <option data-dcto=\"0\" value=\"0\"> Sin Oferta</option>\r\n                                </select> \r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"valorapagar\">Valor a pagar: </label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"valorapagar\" name=\"valorapagar\" value=\"\" readonly required>\r\n                                    <button id=\"btndesc\" type=\"button\"> <i class=\"fa-solid fa-plus\"> </i>  Desc </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo campo-descuentomanual\" style=\"display: none;\">\r\n                                <label class=\"formulario__label\" for=\"valordcto\">Descuento manual: </label>\r\n                                <input class=\"formulario__input\" min=\"0\" type=\"text\" id=\"valordcto\" name=\"valordcto\" value=\"\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '0').padStart(1, '0');\">\r\n                            </div>\r\n\r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"mediopago\">Elegir Medio De Pago:</label>\r\n                                <select class=\"formulario__select\" name=\"idmediospago\" id=\"mediopago\">\r\n                                    <option value=\"\" disabled selected> Seleccionar medio pago</option>\r\n                                </select> \r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo-2r\">\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"recibido\">Recibido:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"recibido\" name=\"recibido\" value=\"0\">\r\n                                </div>\r\n                                <div class=\"formulario__campo\">\r\n                                    <label class=\"formulario__label\" for=\"devolucion\">Devolucion:</label>\r\n                                    <input class=\"formulario__input\" type=\"number\" id=\"devolucion\" name=\"devolucion\" value=\"0\" readonly required>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"nota\">Nota:</label>\r\n                                <div class=\"formulario__dato\">\r\n                                    <input class=\"formulario__input\" type=\"text\" placeholder=\"Nota del pago\" id=\"nota\" name=\"nota\" value=\"\">\r\n                                    <label data-num=\"64\" class=\"count-charts\" for=\"\">64</label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"formulario__campo\">\r\n                                <label class=\"formulario__label\" for=\"descuento\">Imprimir Recibo: </label>\r\n                                <div class=\"formulario__campo-2r\">\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_si\">Si:</label>\r\n                                        <input id=\"imprimir_si\" type=\"radio\" value=\"1\" name=\"imprimir\">\r\n                                    </div>\r\n                                    <div class=\"formulario__imprimir\">\r\n                                        <label class=\"formulario__label\" for=\"imprimir_no\">No:</label>\r\n                                        <input id=\"imprimir_no\" type=\"radio\" value=\"0\" name=\"imprimir\" checked>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n    \r\n                            <input class=\"clientes-btn\" type=\"submit\" value=\"Pagar\">\r\n                       </form>`,\r\n                showCancelButton: false,\r\n                showConfirmButton: false,  \r\n            });\r\n            document.querySelector('#recibido').addEventListener('input', calculo);\r\n            countchars();\r\n        }\r\n\r\n        ///////////////////////////traer los medios de pago /////////////////////////\r\n        const obtenermediospago = async()=>{\r\n            try {\r\n                const url = \"/admin/api/getmediospago\";\r\n                const respuesta = await fetch(url);\r\n                const mediospago = await respuesta.json();\r\n                cargarmediospago(mediospago);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function cargarmediospago(mediospago){\r\n            const selectmediospago = document.querySelector('#mediopago');\r\n            mediospago.forEach(element => {\r\n                if(element.estado==='1'){\r\n                    const option = document.createElement('OPTION');\r\n                    option.value = element.id;\r\n                    option.textContent = element.mediopago;\r\n                    selectmediospago.appendChild(option);\r\n                }\r\n            });\r\n        }\r\n\r\n        function cargardatoscliente(e){\r\n            const promodcto = e.target.parentElement.dataset.promodcto||0; //dcto en porcentaje de la promocion\r\n            const valorpromodcto = e.target.parentElement.dataset.promodctovalor||0;  //dcto de promocion en valor\r\n            const tr = e.target.parentElement.parentElement.parentElement;\r\n            const idcita = tr.children[0].textContent;\r\n            const nombre = tr.children[1].textContent;\r\n            const servicio = tr.children[2].textContent;\r\n            valueservice = tr.children[2].dataset.precio;\r\n            const tipocita = tr.children[6].dataset.tipocita;\r\n            if(!parseInt(tipocita)) document.querySelector('#valorapagar').readOnly = false; //deshabilita el input del valor del servicio si es personalizado el servicio\r\n\r\n            document.querySelector('input[name=id]').value = idcita;  //id de la cita\r\n            document.querySelector('input[name=valor_servicio]').value = valueservice;\r\n            document.querySelector('input[name=idempleado]').value = tr.children[3].dataset.idempleado;\r\n            document.querySelector('.orden').textContent = 'Orden: '+idcita;\r\n            document.querySelector('.nameuser').textContent = nombre;\r\n            document.querySelector('.nameservice').textContent = servicio;\r\n            document.querySelector('.precio').textContent = 'Precio: $'+valueservice;\r\n            document.querySelector('input[name=total]').value = valueservice;\r\n            const btndesc = document.querySelector('#btndesc');\r\n\r\n            const selectdcto = document.querySelector('#valorpromodcto');\r\n            if(parseInt(promodcto)||parseInt(valorpromodcto)){  //si hay un % de dcto se muestra en el select al finalizar cita\r\n                const option = document.createElement('option');\r\n                option.textContent = promodcto+'%'+' - '+'$'+valorpromodcto;\r\n                option.value = valorpromodcto; //dcto en valor\r\n                option.dataset.dcto = promodcto;\r\n                selectdcto.appendChild(option);\r\n            }\r\n            selectdcto.addEventListener('change', aplicarpromo);\r\n            const valorapagar = document.querySelector('#valorapagar');\r\n            valorapagar.value = valueservice;\r\n            valorapagar.addEventListener('input', obtenervalorservicio);\r\n\r\n            btndesc.addEventListener('click', ()=>{\r\n                document.querySelector('.campo-descuentomanual').style = \"display: block\";\r\n                mostrarcampodesc();\r\n            });\r\n        }\r\n\r\n        function obtenervalorservicio(){\r\n            document.querySelector('input[name=valor_servicio]').value = parseInt(document.querySelector('#valorapagar').value);\r\n            valueservice = parseInt(document.querySelector('#valorapagar').value);\r\n            document.querySelector('#valordcto').value = 0;\r\n            mostrarcampodesc();\r\n            calculo();\r\n        }\r\n        function aplicarpromo(e){\r\n            document.querySelector('#valorapagar').value = valueservice; //se reinicia el valor original del servicio\r\n            const valorpromodcto = parseInt(e.target.value);\r\n            //const valorapagar = parseInt(document.querySelector('#valorapagar').value);\r\n            document.querySelector('#valorapagar').value = valueservice - valorpromodcto;\r\n            const promodcto = e.target.options[this.options.selectedIndex].dataset.dcto;\r\n            document.querySelector('input[name=promodcto]').value = promodcto;  //input hidden para enviar dcto de la promocion en porcentaje a bd\r\n            document.querySelector('#valordcto').value = '';\r\n            mostrarcampodesc();\r\n            calculo();\r\n        }\r\n\r\n        function mostrarcampodesc(){\r\n            const valordcto = document.querySelector('#valordcto');  //descuento manual\r\n            const valorapagar = parseInt(document.querySelector('#valorapagar').value);\r\n            valordcto.addEventListener('input', (e)=>{  \r\n                console.log(e.target.value);\r\n                document.querySelector('#valorapagar').value = valorapagar - parseInt(e.target.value);\r\n                calculo();\r\n            });\r\n        }\r\n\r\n        function calculo(){ //esta funcio se ejecuta en 3 eventos, cuando se selecciona un dcto, cuando se escribe en el campo recibido o cuando se escribe en el input del valor del servicio id=\"valorapagar\" \r\n            const valorapagar = parseInt(document.querySelector('#valorapagar').value);\r\n            const devolucion = document.querySelector('#devolucion');\r\n            const recibido = parseInt(document.querySelector('#recibido').value);\r\n            if(recibido>=valorapagar){\r\n                devolucion.value = recibido-valorapagar;\r\n                //devolucion.style.color = \"rgb(240, 101, 72)\"; \r\n            }else{\r\n                devolucion.value = 0;\r\n            }\r\n            document.querySelector('input[name=total]').value = valorapagar;\r\n        }\r\n\r\n        //////////////// funcion contadores de caracteres /////////////////////\r\n        function countchars(){\r\n            const numinput = document.querySelectorAll('.count-charts');  \r\n            numinput.forEach(element =>{ //element es cada label\r\n                element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n                element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                    element.textContent = element.dataset.num-e.target.value.length;\r\n                      \r\n                    if(element.dataset.num-e.target.value.length <= 0){\r\n                        let cadena = e.target.value.slice(0, element.dataset.num);\r\n                        e.target.value = cadena;\r\n                        element.textContent = 0;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n\r\n    const grafica = document.querySelector('#servicios-grafica');\r\n    if(grafica){\r\n       \r\n        let fechas, cierretotal, totalcitas, citasrealizadas, citascancelado, valorcitas=0; citas100=0, progreso=440;\r\n        (async ()=>{\r\n            try {\r\n                const url1 = \"/admin/api/alldays\"; //llamado a la API REST\r\n                const respuesta1 = await fetch(url1); \r\n                const resultado1 = await respuesta1.json(); \r\n                const url2 = \"/admin/api/totalcitas\";\r\n                const respuesta2 = await fetch(url2); \r\n                const resultado2 = await respuesta2.json(); \r\n            \r\n                resultado1.reverse();\r\n                fechas = resultado1.map(date => date.fecha);\r\n                cierretotal = resultado1.map(total => total.totaldia);\r\n\r\n                citascancelado = resultado2.filter(Element=>Element.estado==='Cancelado');\r\n                totalcitas = resultado2.length - citascancelado.length; //solo citas finalizadas o pendientes\r\n                \r\n                citasrealizadas = resultado2.filter(Element=>Element.estado==='Finalizada');\r\n\r\n                valorcitas = citasrealizadas.reduce((total, Element)=>total+parseInt(Element.facturacion.total), 0);\r\n                if(totalcitas)citas100 = (citasrealizadas.length*100)/totalcitas;\r\n                progreso = (440*citas100)/100;\r\n\r\n                printgrafica1();\r\n                animacioncircle();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        function printgrafica1(){\r\n            let a = ['#ea580c', '#84cc16', '#22d3ee', '#a855f7', '#ef4444', '#14b8a6', '#db2777', '#e11d48', '#7e22ce'];\r\n            //for(let i=0; i<(resultado.length-9); i++)a=[...a, a[i]];     //si los programas supera 9 se repite color \r\n\r\n            const ctx = document.getElementById('servicios-grafica').getContext('2d');\r\n            \r\n            new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: fechas,//resultado.map(programa=>programa.nombre),\r\n                    datasets: [{\r\n                    label: '# of Votes',\r\n                    data: cierretotal,//resultado.map(programa=>programa.total),\r\n                    borderColor: '#00c8c2',\r\n                    //backgroundColor: ['#ea580c', '#84cc16', '#22d3ee', '#a855f7'],\r\n                    backgroundColor: '#ea580c',\r\n                    //tension: 0.3,\r\n                    //stepped: 'middle',\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                    plugins: {legend: {display: false } } //elimina el label del dataset\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        function animacioncircle(){\r\n            const circle = document.querySelector('circle');\r\n            circle.style.strokeDashoffset = 440-progreso;\r\n            circle.classList.add('animacion');\r\n\r\n            const dailyearning = document.querySelector('.dailyearning').textContent = '$'+valorcitas;\r\n            const numero = document.querySelector('.rueda .numero');\r\n            numero.textContent = Math.round(citas100)+'%';\r\n        }\r\n        \r\n\r\n    } //cierre del if\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.pagina2malla')){\r\n        const selectemployee = document.querySelector('#selectempleadomalla');\r\n        let malla;\r\n\r\n        (async ()=>{\r\n            try {\r\n                const url = \"/admin/api/getmalla\"; //llamado a la API REST para trer toda la malla de todos los empleados\r\n                const respuesta = await fetch(url); \r\n                malla = await respuesta.json();    \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })();\r\n\r\n        selectemployee.addEventListener('change', (e)=>{\r\n            const turnosemployee = malla['empleado_'+e.target.value]; //arreglo de obj donde cada obj es el dia con su turno\r\n            limpiarmalla(); //limpiar malla previamente\r\n            if(turnosemployee)\r\n                turnosemployee.forEach(dia => {\r\n                    const {inicioturno, inidescanso, findescanso, finturno} = dia;\r\n                    let horas = new Array(inicioturno, inidescanso, findescanso, finturno);\r\n                    const radio = document.querySelector(`input[data-id=\"${dia.id_dia}\"]`);\r\n                    radio.checked = true;\r\n                    for(let i=0; i<4; i++)radio.parentElement.nextElementSibling.children[i].disabled = false;\r\n\r\n                    document.querySelector(`#entrada[data-id=\"${dia.id_dia}\"]`).value = inicioturno.substring(0,2)+':'+inicioturno.substring(2,4);\r\n                    let select = document.querySelector(`#inidescanso[data-id=\"${dia.id_dia}\"]`);\r\n                    \r\n                    for(let i = 0; i<3; i++){\r\n                        putoptions(select, parseInt(horas[i])); //llenar las options de los input select\r\n                        for(let j = 0; j<select.options.length; j++)\r\n                            if(select.options[j].value == parseInt(horas[i+1]))select.options[j].selected = true;\r\n                        select = select.nextElementSibling;\r\n                    }\r\n                });  \r\n        });\r\n\r\n        function putoptions(select, hora){\r\n            for(let i = 0; hora<2300; i++){\r\n                let option = document.createElement('OPTION');\r\n                hora+=30;\r\n                if(hora%100 == 60)hora+=40;\r\n                option.value = hora;\r\n                option.textContent = (hora%100==0)?parseInt(hora/100)+':00':parseInt(hora/100)+':'+hora%100;\r\n                select.appendChild(option);\r\n            }\r\n        }\r\n\r\n        function limpiarmalla(){\r\n            const elemntcheckbox = document.querySelectorAll('.malla INPUT[type=\"checkbox\"]');\r\n            elemntcheckbox.forEach(Element => {\r\n                if(Element.checked){ Element.checked = false;\r\n                    for(let i=0; i<4; i++){\r\n                        Element.parentElement.nextElementSibling.children[i].disabled = true;\r\n                        if(i===0){\r\n                            Element.parentElement.nextElementSibling.children[0].value = '';\r\n                        }else{\r\n                            Element.parentElement.nextElementSibling.children[i].options[0].selected = true;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    if(document.querySelector('.headerapp__menu')){\r\n        const btnmenu = document.querySelector('#btnmenu');\r\n        const navmenu = document.querySelector('.headerapp__navmenu');\r\n        btnmenu.addEventListener('click', ()=>{\r\n            navmenu.classList.toggle('mostrar');\r\n        });\r\n    }\r\n\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.promociones')){\r\n        console.log(\"promociones\");\r\n\r\n    }\r\n})();","(function(){\r\n\r\n    if(document.querySelector('.reportes')){\r\n        const reportes__btns = document.querySelectorAll('.reportes__btn');\r\n        const dialogo = document.getElementById(\"miDialogo\");\r\n        reportes__btns.forEach(reportebtn => {\r\n            reportebtn.addEventListener('click', ()=>{\r\n                dialogo.showModal();\r\n                document.addEventListener(\"click\", cerrarDialogoExterno);\r\n            });\r\n        });\r\n\r\n        function cerrarDialogoExterno(event) {\r\n            console.log(event.target);\r\n            if (event.target === dialogo) {\r\n              dialogo.close();\r\n              document.removeEventListener(\"click\", cerrarDialogoExterno);\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    \r\n    const servicios = document.querySelectorAll('#servicio');\r\n    const servicios__eliminar = document.querySelectorAll('.servicios__eliminar'); //<a></a>\r\n    \r\n    servicios__eliminar.forEach(Element=>{ //para eliminar los servicios\r\n        Element.addEventListener('click', (e)=>{\r\n\r\n            let id;\r\n           e.target.href = \"/admin/servicios/eliminar\";\r\n           e.preventDefault();\r\n         \r\n           if(e.target.tagName === \"I\"){ \r\n               id = e.target.parentElement.parentElement.dataset.id;\r\n            }else{\r\n                id = e.target.parentElement.dataset.id;\r\n            }\r\n            //window.location = e.target.href;\r\n            Swal.fire({\r\n                customClass: {\r\n                    confirmButton: 'sweetbtnconfirm',\r\n                    cancelButton: 'sweetbtncancel'\r\n                },\r\n                title: 'Desea eliminar el servcio?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Si',\r\n                cancelButtonText: 'No',\r\n                \r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    Swal.fire('Eliminado', '', 'success') \r\n\r\n                    \r\n                    async function eliminarservicio(){ //\r\n                        const datos = new FormData();\r\n                        console.log(id);\r\n                        datos.append('id', id);\r\n                        try {\r\n                            const url = \"/admin/api/eliminarservicio\";\r\n                            const respuesta = await fetch(url, {method: 'POST', body: datos}); \r\n                            const resultado = await respuesta.json(); \r\n                            console.log(resultado); \r\n\r\n                            const divservicio = document.querySelector(`div[data-id=\"${id}\"]`);\r\n                            divservicio.remove();\r\n                            return resultado;\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n\r\n                    eliminarservicio();\r\n                } \r\n            })\r\n    \r\n        });\r\n    });\r\n\r\n    \r\n    servicios.forEach(Element =>{   // para editar los servicios\r\n        Element.addEventListener('click', (e)=>{\r\n            \r\n            if(e.target.tagName === \"DIV\" ||e.target.tagName === \"P\"|| e.target.tagName === \"H4\" || e.target.tagName === \"SPAN\"){\r\n    \r\n                let nombre, precio, duracion, id, user;\r\n                \r\n                id = id = e.target.dataset.id;\r\n                user = e.target.dataset.user;\r\n                if(e.target.tagName === \"P\"|| e.target.tagName === \"H4\"){\r\n                    id = e.target.parentElement.dataset.id;\r\n                    user = e.target.parentElement.dataset.user;\r\n                }\r\n                if(e.target.tagName === \"SPAN\"){\r\n                    id = e.target.parentElement.parentElement.dataset.id;\r\n                    user = e.target.parentElement.parentElement.dataset.user;\r\n                }\r\n\r\n                if(parseInt(user)>1){\r\n                    nombre = document.querySelector(`div[data-id=\"${id}\"] h4`).textContent;\r\n                    precio = parseInt(document.querySelector(`div[data-id=\"${id}\"] #precio`).textContent);\r\n                    duracion = parseInt(document.querySelector(`div[data-id=\"${id}\"] #duracion`).textContent);\r\n\r\n                    Swal.fire({\r\n                        customClass: {\r\n                            confirmButton: 'sweetbtnconfirm',\r\n                            cancelButton: 'sweetbtncancel'\r\n                        },\r\n                        title: 'Desea editar el servcio?',\r\n                        html: `<form class=\"formulario\" action=\"/admin/servicios/editar\" method=\"POST\">\r\n                                    <input type=\"hidden\" name=\"id\" value=\"${id}\" >\r\n                                    <div class=\"formulario__campo\">\r\n                                        <label class=\"formulario__label\" for=\"nombre\">Nombre:</label>\r\n                                        <div class=\"formulario__dato\">\r\n                                            <input class=\"formulario__input\" type=\"text\" placeholder=\"Nombre del servicio\" id=\"nombre\" name=\"nombre\" value=\"${nombre}\" required>\r\n                                            <label data-num=\"25\" class=\"count-charts\" for=\"\">25</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div class=\"formulario__campo\">\r\n                                        <label class=\"formulario__label\" for=\"precio\">Precio:</label>\r\n                                        <div class=\"formulario__dato\">\r\n                                            <input class=\"formulario__input\" type=\"number\" placeholder=\"Precio del servicio\" id=\"precio\" name=\"precio\" value=\"${precio}\" requiered>\r\n                                            <label for=\"\">$</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"formulario__campo\">\r\n                                        <label class=\"formulario__label\" for=\"duracion\">Duracion:</label>\r\n                                        <div class=\"formulario__dato\">\r\n                                            <input class=\"formulario__input\" type=\"number\" min=\"10\" max=\"120\" placeholder=\"Duracion en minutos del servicio\" id=\"duracion\" name=\"duracion\" value=\"${duracion}\" disabled>\r\n                                            <label for=\"\">min</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <input class=\"formulario__submit--servicio\" type=\"submit\" value=\"Actualizar\">\r\n                            </form>`,\r\n                        showCancelButton: true,\r\n                        showConfirmButton: false,\r\n                        cancelButtonText: 'Cancelar',\r\n                        \r\n                    });\r\n                    countchars();\r\n                }\r\n            } //cierre del if   \r\n        }); //cierre de addeventlistener\r\n    }); //cierre del foreach\r\n\r\n    \r\n    //////////////// funcion contadores de caracteres /////////////////////\r\n    countchars();      //// se aplicado casi de manera general\r\n    function countchars(){\r\n        const numinput = document.querySelectorAll('.count-charts');  \r\n        numinput.forEach(element =>{ //element es cada label\r\n            element.textContent = element.dataset.num-element.previousElementSibling.value.length;\r\n            element.previousElementSibling.addEventListener('input', (e)=>{ //seleccionamos el input o el textarea en donde se escribe y se le da el evento de teclas\r\n                element.textContent = element.dataset.num-e.target.value.length;\r\n                  \r\n                if(element.dataset.num-e.target.value.length <= 0){\r\n                    let cadena = e.target.value.slice(0, element.dataset.num);\r\n                    e.target.value = cadena;\r\n                    element.textContent = 0;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n    console.log('hola desde servicio js');\r\n    if(document.querySelector('.alerta')){  //se aplica de manera global\r\n        setTimeout(() => {\r\n            document.querySelector('.alerta').remove();\r\n        }, 5000);\r\n    }\r\n    \r\n    })();","window.swiper = new Swiper('swiper', {\r\n    el: '.slider__contenido',\r\n    slideClass: 'slider__slide',\r\n    createElements: true,\r\n    autoplay: {\r\n        delay: 5000\r\n    },\r\n    loop: true,\r\n});\r\n"]}